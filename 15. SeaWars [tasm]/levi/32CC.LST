Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 1
32cc.ASM



      1					 locals	@@
      2	    0000				 .model	tiny
      3	    0000				 .code
      4						 .386
      5						 org 100h
      6
      7	    0100			 _start:
      8	    0100  E9 09E1			 jmp	 _1
      9	    0103			 .data
     10
     11	    0000  00			 xx		 db	 0
     12	    0001  00			 yy		 db	 0
     13		  =0400			 Buf_Size	 equ	 1024		; pазмеp буфеpа
     14	    0002  0402*(00)		 Source		 db	 Buf_Size+2 dup	(0) ; буфеp пpиема символов
     15	    0404  0002r			 Src_ptr	 dw	 Source		; указатель позиции в буфеpе
     16	    0406  0000			 Count		 dw	 0		; количество символов в	буфеpе
     17	    0408  0000			 Ser_ip		 dw	 0		; стаpый адpес Int 0Ch
     18	    040A  0000			 Ser_cs		 dw	 0
     19	    040C  0000			 Save_ds	 dw	 0		; служебные пеpеменные
     20	    040E  00			 Int_sts	 db	 0
     21	    040F  00			 Overrun	 db	 0
     22	    0410  ????			 divisor	 dw	 ?
     23	    0412  ??			 databits	 db	 ?
     24	    0413  ??			 parity		 db	 ?
     25	    0414  ??			 stopbits	 db	 ?
     26	    0415  ??			 rate		 db	 ?	 ;9600 - скорость
     27	    0416  00			 hidec	 db	 0
     28	    0417  00			 Nship		 db	 0
     29	    0418  00			 ship1		 db	 0
     30	    0419  00			 ship2		 db	 0
     31	    041A  00			 ship3		 db	 0
     32	    041B  00			 ship4		 db	 0
     33	    041C  00			 hNship		 db	 0
     34	    041D  01			 hship1		 db	 1
     35	    041E  00			 hship2		 db	 0
     36	    041F  00			 hship3		 db	 0
     37	    0420  00			 hship4		 db	 0
     38	    0421  06			 sizeField	 db	 6
     39					 ;делаем поле на 1 строчку/столбец больше с каждой стороны для удобства	проверок расстановки+
     40					 кораблей т е нумерация	будет с	1
     41	    0422  00 00	00 00 00 00 00+	 field		 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ;0 - пустая клетка   +
     42		  00 00	00 00 00	 поля
     43	    042E  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ;1 - здесь стоит	    +
     44		  00 00	00 00 00	 корабль, который еще не подбили
     45	    043A  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ;2 - раненый/убитый  +
     46		  00 00	00 00 00	 корабль
     47	    0446  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ;3 - сюда уже	    +
     48		  00 00	00 00 00	 стреляли но здесь ничего нет
     49	    0452  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     50		  00 00	00 00 00
     51	    045E  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     52		  00 00	00 00 00
     53	    046A  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     54		  00 00	00 00 00
     55	    0476  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     56		  00 00	00 00 00
     57	    0482  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 2
32cc.ASM



     58		  00 00	00 00 00
     59	    048E  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     60		  00 00	00 00 00
     61	    049A  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     62		  00 00	00 00 00
     63	    04A6  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     64		  00 00	00 00 00
     65	    04B2  05 05	05 05 05 05 05+	 fieldOp	 db	 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 ;5 - края,это не	поле
     66		  05 05	05 05 05
     67	    04BE  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5 ;1 - здесь корабль   +
     68		  00 00	00 00 05	 противника
     69	    04CA  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5 ;2 - сюда стреляла,  +
     70		  00 00	00 00 05	 либо точно ничего нет
     71	    04D6  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     72		  00 00	00 00 05
     73	    04E2  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     74		  00 00	00 00 05
     75	    04EE  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     76		  00 00	00 00 05
     77	    04FA  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     78		  00 00	00 00 05
     79	    0506  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     80		  00 00	00 00 05
     81	    0512  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     82		  00 00	00 00 05
     83	    051E  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     84		  00 00	00 00 05
     85	    052A  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     86		  00 00	00 00 05
     87	    0536  05 05	05 05 05 05 05+			 db	 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5
     88		  05 05	05 05 05
     89	    0542  00 00	00 00 00	 allPar		 db	 0 , 0 , 0 , 0 , 0
     90	    0547  0000			 rightBord2f	 dw	 0
     91	    0549  0000			 rightBord1f	 dw	 0
     92	    054B  0128			 leftBord2f	 dw	 296
     93	    054D  0000			 bottomBord	 dw	 0
     94	    054F  0030			 topBord	 dw	 48
     95	    0551  0000			 ok		 dw	 0
     96	    0553  51 00	00 00 00 00 00+	 myName		 db	 51h , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     97		  00 00	00
     98	    055D  4E 6F	00 00 00 00 00+	 opName		 db	 4eh , 6fh , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     99		  00 00	00
    100	    0567  0000			 master		 dw	 0;slave=0 master =1
    101	    0569  0000			 McountIn	 dw	 0
    102	    056B  0000			 ScountIn	 dw	 0
    103	    056D  0000			 McountOut	 dw	 0
    104	    056F  0000			 ScountOut	 dw	 0
    105	    0571  000A			 syntime	 dw	 10
    106	    0573  003C			 errtime	 dw	 60
    107	    0575  0000			 Mflagerr	 dw	 0
    108	    0577  0000			 Sflagsyn	 dw	 0
    109	    0579  0000			 Sflagerr	 dw	 0
    110	    057B  00			 fvect	 db	 0
    111	    057C  0000			 win		 dw	 0
    112	    057E  0000			 exit		 dw	 0
    113	    0580  02*(C4)		 hor		 db	 2 dup(196)
    114	    0582  50*(00)		 clean		 db	 80 dup(0)
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 3
32cc.ASM



    115	    05D2  50*(00)		 clean1		 db	 80 dup(00h)
    116	    0622  B3			 vert		 db	 179
    117	    0623  01			 x		 db	 1
    118	    0624  01			 y		 db	 1
    119	    0625  0001			 x1		 dw	 1
    120	    0627  0001			 y1		 dw	 1
    121	    0629  ????			 stat		 dw	 ?
    122
    123	    062B  02*(03)		 miss		 db	 2 dup (3)
    124	    062D  02*(03)		 miss1		 db	 2 dup (3)
    125	    062F  10			 vid		 db	 10h
    126	    0630  ??			 saveMode	 db	 ?
    127	    0631  00			 pages		 db	 0
    128	    0632  57 72	69 74 65 20 73+	 msg1		 db	 "Write	size of	field: 6 , 7 , 8 , 9 or	A -> " ; , 0dh , 0ah , 24h
    129		  69 7A	65 20 6F 66 20+
    130		  66 69	65 6C 64 3A 20+
    131		  36 20	2C 20 37 20 2C+
    132		  20 38	20 2C 20 39 20+
    133		  6F 72	20 41 20 2D 3E+
    134		  20
    135	    065D  57 72	69 74 65 20 71+	 msg2		 db	 'Write	quantity of the	four-deck ship : 0 or 1	-> ' ;,	0dh , 0ah , +
    136		  75 61	6E 74 69 74 79+	 24h
    137		  20 6F	66 20 74 68 65+
    138		  20 66	6F 75 72 2D 64+
    139		  65 63	6B 20 73 68 69+
    140		  70 20	3A 20 30 20 6F+
    141		  72 20	31 20 2D 3E 20
    142	    068E  57 72	69 74 65 20 71+	 msg3		 db	 'Write	quantity of the	three-deck ship	: 0 , 1	or 2 ->	' ;, 0dh ,  +
    143		  75 61	6E 74 69 74 79+	 0ah , 24h
    144		  20 6F	66 20 74 68 65+
    145		  20 74	68 72 65 65 2D+
    146		  64 65	63 6B 20 73 68+
    147		  69 70	20 3A 20 30 20+
    148		  2C 20	31 20 6F 72 20+
    149		  32 20	2D 3E 20
    150	    06C4  57 72	69 74 65 20 71+	 msg4		 db	 'Write	quantity of the	two-deck ship :	0 .. 5 -> ' ;, 0dh , 0ah ,  +
    151		  75 61	6E 74 69 74 79+	 24h
    152		  20 6F	66 20 74 68 65+
    153		  20 74	77 6F 2D 64 65+
    154		  63 6B	20 73 68 69 70+
    155		  20 3A	20 30 20 2E 2E+
    156		  20 35	20 2D 3E 20
    157	    06F4  57 72	69 74 65 20 71+	 msg5		 db	 'Write	quantity of the	one-deck ship :	1 .. A -> ' ;, 0dh , 0ah ,  +
    158		  75 61	6E 74 69 74 79+	 24h
    159		  20 6F	66 20 74 68 65+
    160		  20 6F	6E 65 2D 64 65+
    161		  63 6B	20 73 68 69 70+
    162		  20 3A	20 31 20 2E 2E+
    163		  20 41	20 2D 3E 20
    164	    0724  57 72	69 74 65 20 79+	 msgNic		 db	 'Write	you Nic	<= 10 simbol : '
    165		  6F 75	20 4E 69 63 20+
    166		  3C 3D	20 31 30 20 73+
    167		  69 6D	62 6F 6C 20 3A+
    168		  20
    169	    0741  47 6F	6F 64 2D 42 79+	 msgGB		 db	 'Good-Bye  '
    170		  65 20	20
    171	    074B  46 69	6E 69 73 68 20+	 msgFin		 db	 'Finish    '
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 4
32cc.ASM



    172		  20 20	20
    173	    0755  52 65	73 74 61 72 74+	 msgRS		 db	 'Restart   '
    174		  20 20	20
    175	    075F  52 65	61 64 79 20 20+	 msgRD		 db	 'Ready	    '
    176		  20 20	20
    177	    0769  46 6F	75 72 2D 76 65+	 msg4v		 db	 'Four-vert '
    178		  72 74	20
    179	    0773  46 6F	75 72 2D 68 6F+	 msg4h		 db	 'Four-hor  '
    180		  72 20	20
    181	    077D  54 68	72 65 65 2D 76+	 msg3v		 db	 'Three-vert'
    182		  65 72	74
    183	    0787  54 68	72 65 65 2D 68+	 msg3h		 db	 'Three-hor '
    184		  6F 72	20
    185	    0791  54 77	6F 2D 76 65 72+	 msg2v		 db	 'Two-vert  '
    186		  74 20	20
    187	    079B  54 77	6F 2D 68 6F 72+	 msg2h		 db	 'Two-hor   '
    188		  20 20	20
    189	    07A5  4F 6E	65 2D 64 65 73+	 msg11		 db	 'One-desk  '
    190		  6B 20	20
    191	    07AF  59 6F	75 20 6F 70 70+	 mGB		 db	 'You opponent exit!	    '
    192		  6F 6E	65 6E 74 20 65+
    193		  78 69	74 21 20 20 20+
    194		  20 20	20 20 20
    195	    07C9  56 49	43 54 4F 52 59+	 mWin		 db	 'VICTORY:)		    '
    196		  3A 29	20 20 20 20 20+
    197		  20 20	20 20 20 20 20+
    198		  20 20	20 20 20
    199	    07E3  4C 4F	53 53 3A 28 20+	 mWon		 db	 'LOSS:(		    '
    200		  20 20	20 20 20 20 20+
    201		  20 20	20 20 20 20 20+
    202		  20 20	20 20 20
    203	    07FD  45 72	72 6F 72 20 69+	 myErrProt	 db	 'Error	in my protocol	    '
    204		  6E 20	6D 79 20 70 72+
    205		  6F 74	6F 63 6F 6C 20+
    206		  20 20	20 20 20
    207	    0817  45 72	72 6F 72 20 69+	 opErrProt	 db	 'Error	in opponent protocol'
    208		  6E 20	6F 70 70 6F 6E+
    209		  65 6E	74 20 70 72 6F+
    210		  74 6F	63 6F 6C
    211	    0831  54 68	65 20 6F 70 70+	 msgShur	 db	 'The opponent are surrender'
    212		  6F 6E	65 6E 74 20 61+
    213		  72 65	20 73 75 72 72+
    214		  65 6E	64 65 72
    215	    084B  59 6F	75 20 74 6F 20+	 msgShur1	 db	 'You to surrender	    '
    216		  73 75	72 72 65 6E 64+
    217		  65 72	20 20 20 20 20+
    218		  20 20	20 20 20
    219	    0865  0000			 okGB		 dw	 0
    220	    0867  0000			 okFin		 dw	 0
    221	    0869  0000			 okRS		 dw	 0
    222	    086B  0000			 okRD		 dw	 0
    223	    086D  52 65	61 64 79 20 0D+	 okRDM	 db	 'Ready	', 0dh , 0ah , 24h
    224		  0A 24
    225	    0876  52 65	73 74 61 72 74+	 okRSM	 db	 'Restart ', 0dh , 0ah , 24h
    226		  20 0D	0A 24
    227	    0881  46 69	6E 61 6C 0D 0A+	 okFinM	 db	 'Final', 0dh ,	0ah , 24h
    228		  24
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 5
32cc.ASM



    229	    0889  47 6F	6F 64 62 79 65+	 okGBM	 db	 'Goodbye ', 0dh , 0ah , 24h
    230		  20 0D	0A 24
    231	    0894  34 20	68 6F 72 69 7A+	 hship4hM	 db	 '4 horizont',0dh,0ah,24h
    232		  6F 6E	74 0D 0A 24
    233	    08A1  34 20	76 65 72 74 69+	 hship4vM	 db	 '4 vertical',0dh,0ah,24h
    234		  63 61	6C 0D 0A 24
    235	    08AE  33 20	68 6F 72 69 7A+	 hship3hM	 db	 '3 horizontl',0dh,0ah,24h
    236		  6F 6E	74 6C 0D 0A 24
    237	    08BC  33 20	76 65 72 74 69+	 hship3vM	 db	 '3 vertical',0dh,0ah,24h
    238		  63 61	6C 0D 0A 24
    239	    08C9  32 20	68 6F 72 69 7A+	 hship2hM	 db	 '2 horizont',0dh,0ah,24h
    240		  6F 6E	74 0D 0A 24
    241	    08D6  32 20	76 65 72 74 69+	 hship2vM	 db	 '2 vertical',0dh,0ah,24h
    242		  63 61	6C 0D 0A 24
    243	    08E3  6F 6E	20 66 69 65 6C+	 fieldM	 db	 'on field!!!',0dh,0ah,24h
    244		  64 21	21 21 0D 0A 24
    245	    08F1  6F 6E	65 20 64 65 73+	 hshipM	 db	 'one desk ship',0dh,0ah,24h
    246		  6B 20	73 68 69 70 0D+
    247		  0A 24
    248	    0901  20 20	20 20 20 78 20+	 xM	 db	 '     x coord',0dh,0ah,24h
    249		  63 6F	6F 72 64 0D 0A+
    250		  24
    251	    0910  20 20	20 20 20 79 20+	 yM	 db	 '     y coord',0dh,0ah,24h
    252		  63 6F	6F 72 64 0D 0A+
    253		  24
    254	    091F  26*(B1) 27*(B3) BB	 top		 db	 38 dup(177), 39 dup(179), 187
    255	    096D  00			 pp		 db	 0
    256	    096E  00			 sss		 db	 0
    257	    096F  00			 xxx		 db	 0
    258	    0970  00			 yyy		 db	 0
    259	    0971  0000			 fh4		 dw	 0
    260	    0973  0000			 fv4		 dw	 0
    261	    0975  0000			 fh3		 dw	 0
    262	    0977  0000			 fv3		 dw	 0
    263	    0979  0000			 fh2		 dw	 0
    264	    097B  0000			 fv2		 dw	 0
    265	    097D  0000			 f1		 dw	 0
    266	    097F  00			 xk		 db	 0
    267	    0980  00			 yk		 db	 0
    268	    0981  0000			 myErr		 dw	 0
    269	    0983  0000			 myHod		 dw	 0
    270	    0985  0000			 status		 dw	 0
    271	    0987  0000			 statusx	 dw	 0
    272	    0989  0000			 statusy	 dw	 0
    273	    098B  0000			 fyes		 dw	 0
    274
    275
    276	    098D  01			 cansenda	 db	 1
    277	    098E  00			 b2	 db	 0
    278	    098F  00			 lgth	 db	 0
    279	    0990  00			 state	 db	 0
    280	    0991  00			 wstate4 db	 0
    281	    0992  53 65	6E 64 20 74 6F+	 str0	 db	 'Send to slave	b2 ', 0dh , 0ah	, 24h
    282		  20 73	6C 61 76 65 20+
    283		  62 32	20 0D 0A 24
    284	    09A6  43 6F	6E 64 69 74 69+	 cond5	 db	 'Condition5 ',	0dh , 0ah , 24h
    285		  6F 6E	35 20 0D 0A 24
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 6
32cc.ASM



    286	    09B4  43 6F	6E 64 69 74 69+	 cond6	 db	 'Condition6 ',	0dh , 0ah , 24h
    287		  6F 6E	36 20 0D 0A 24
    288	    09C2  43 6F	6E 64 69 74 69+	 cond7	 db	 'Condition7 ',	0dh , 0ah , 24h
    289		  6F 6E	37 20 0D 0A 24
    290	    09D0  43 6F	6E 64 69 74 69+	 cond8	 db	 'Condition8 ',	0dh , 0ah , 24h
    291		  6F 6E	38 20 0D 0A 24
    292	    09DE  43 6F	6E 64 69 74 69+	 cond9	 db	 'Condition9 urrrarrrrrrrrrrrrrrrrrrr ', 0dh , 0ah , 24h
    293		  6F 6E	39 20 75 72 72+
    294		  72 61	72 72 72 72 72+
    295		  72 72	72 72 72 72 72+
    296		  72 72	72 72 72 72 72+
    297		  20 0D	0A 24
    298					 ;str0	 db	 'Condition8 ',	0dh , 0ah , 24h
    299	    0A05  52 65	61 64 79 21 20+	 str011	 db	 'Ready! Send a3 to slave', 0dh	, 0ah ,	24h
    300		  53 65	6E 64 20 61 33+
    301		  20 74	6F 20 73 6C 61+
    302		  76 65	0D 0A 24
    303	    0A1F  52 65	61 64 79 21 20+	 str01	 db	 'Ready! mouse', 0dh , 0ah , 24h
    304		  6D 6F	75 73 65 0D 0A+
    305		  24
    306	    0A2E  20 48	69 64 65 20 6D+	 strhm	 db	 ' Hide	mouse!state4', 0dh , 0ah , 24h
    307		  6F 75	73 65 21 73 74+
    308		  61 74	65 34 0D 0A 24
    309	    0A43  20 43	6C 65 61 6E 20+	 strc	 db	 ' Clean ekran!state4',	0dh , 0ah , 24h
    310		  65 6B	72 61 6E 21 73+
    311		  74 61	74 65 34 0D 0A+
    312		  24
    313	    0A59  20 53	65 74 20 6F 62+	 strrt	 db	 ' Set obr  mouse!state4', 0dh , 0ah , 24h
    314		  72 20	20 6D 6F 75 73+
    315		  65 21	73 74 61 74 65+
    316		  34 0D	0A 24
    317	    0A72  20 52	65 63 65 69 65+	 str010	 db	 ' Receieve 3a from slave', 0dh	, 0ah ,	24h
    318		  76 65	20 33 61 20 66+
    319		  72 6F	6D 20 73 6C 61+
    320		  76 65	0D 0A 24
    321	    0A8C  20 52	65 63 65 69 65+	 str04	 db	 ' Receieve a4 from slave and send  4a to slave	=) State 4 !!!', 0dh , 0ah ,+
    322		  76 65	20 61 34 20 66+	 24h
    323		  72 6F	6D 20 73 6C 61+
    324		  76 65	20 61 6E 64 20+
    325		  73 65	6E 64 20 20 34+
    326		  61 20	74 6F 20 73 6C+
    327		  61 76	65 20 3D 29 20+
    328		  53 74	61 74 65 20 34+
    329		  20 21	21 21 0D 0A 24
    330	    0ACB  20 77	72 69 74 65 20+	 str041	 db	 ' write button', 0dh ,	0ah , 24h
    331		  62 75	74 74 6F 6E 0D+
    332		  0A 24
    333					 ;str22	 db	 '     Receive ', 0dh ,	0ah , 24h
    334	    0ADB  73 74	61 74 65 32 21+	 str2	 db	 'state2!', 0dh	, 0ah ,	24h
    335		  0D 0A	24
    336	    0AE5  52 65	63 65 69 76 65+	 str22	 db	 'Receive 2b and send a2 and receive 2a	state2!', 0dh ,	0ah , 24h
    337		  20 32	62 20 61 6E 64+
    338		  20 73	65 6E 64 20 61+
    339		  32 20	61 6E 64 20 72+
    340		  65 63	65 69 76 65 20+
    341		  32 61	20 73 74 61 74+
    342		  65 32	21 0D 0A 24
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 7
32cc.ASM



    343	    0B15  20 2D	4D 61 73 74 65+	 str11	 db	 ' -Master works!', 0dh	, 0ah ,	24h
    344		  72 20	77 6F 72 6B 73+
    345		  21 0D	0A 24
    346	    0B27  53 69	7A 65 20 6F 66+	 sheepField	 db	 'Size of field:   7  '
    347		  20 66	69 65 6C 64 3A+
    348		  20 20	20 37 20 20
    349	    0B3B  41 6D	6F 75 6E 74 20+	 sheep4	 db	 'Amount of:  ',0Dbh,0Dbh,0Dbh,0Dbh,' 1	 '
    350		  6F 66	3A 20 20 DB DB+
    351		  DB DB	20 31 20 20
    352	    0B4F  41 6D	6F 75 6E 74 20+	 sheep3	 db	 'Amount of:  ',0Dbh,0Dbh,0Dbh,'  2  '
    353		  6F 66	3A 20 20 DB DB+
    354		  DB 20	20 32 20 20
    355	    0B63  41 6D	6F 75 6E 74 20+	 sheep2	 db	 'Amount of:  ',0Dbh,0Dbh,'   5	 '
    356		  6F 66	3A 20 20 DB DB+
    357		  20 20	20 35 20 20
    358	    0B77  41 6D	6F 75 6E 74 20+	 sheep1		 db	 'Amount of:  ',0Dbh,'	  a  '
    359		  6F 66	3A 20 20 DB 20+
    360		  20 20	20 61 20 20
    361	    0B8B  4D 6F	75 73 65 73 20+	 mouseNotF	 db	 'Mouses Driver	Not Found'
    362		  44 72	69 76 65 72 20+
    363		  4E 6F	74 20 46 6F 75+
    364		  6E 64
    365	    0BA2  07 01	02 05 0A	 masp	 db	 07h,01h,02h,05h,0Ah
    366	    0BA7  0A 01	02 05 0A	 maxp	 db	 0Ah,01h,02h,05h,0Ah
    367	    0BAC  06 00	00 00 01	 minp	 db	 06h,00h,00h,00h,01h
    368
    369	    0BB1			 .code
    370
    371					 include macro.asm
1   372					 pushr	 macro	 registers
1   373						 irp	 reg, <registers>
1   374							 push	 reg
1   375						 endm
1   376					 endm	 pushr
1   377
1   378					 popr	 macro	 registers
1   379						 irp	 reg, <registers>
1   380							 pop	 reg
1   381						 endm
1   382					 endm	 popr
1   383
1   384					 movpp	 macro	 reg1, reg2
1   385						 push	 reg2
1   386						 pop	 reg1
1   387					 endm	 movpp
1   388
1   389
1   390					 newline macro
1   391						 pushr	 <ax, dx, ds>
1   392						 jmp	 @@tmp1
1   393					 msg	 db	 0ah, 0dh, '$'
1   394						 @@tmp1:
1   395						 movpp	 ds, cs
1   396						 lea	 dx, msg
1   397						 mov	 ah, 9h
1   398						 int	 21h
1   399						 popr	 <ds, dx, ax>
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 8
32cc.ASM



1   400					 endm newline
1   401
1   402					 sep macro
1   403						 pushr	 <ax, dx, ds>
1   404						 jmp	 @@tmp2
1   405						 msg2	 db	 '----', 0ah, 0dh, '$'
1   406						 @@tmp2:
1   407						 movpp	 ds, cs
1   408						 lea	 dx, msg2
1   409						 mov	 ah, 9h
1   410						 int	 21h
1   411						 popr	 <ds, dx, ax>
1   412					 endm sep
1   413	    0103  07*(00) 24		 buffer	 db	 7 dup (0), '$'
1   414
1   415						 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1   416						 ; Prints signed decimal number	to screen.
1   417						 ; Call:
1   418						 ; push	number
1   419						 ; call	prints
1   420						 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1   421
1   422	    010B			 prints	proc	 near
1   423	    010B  55				 push	 bp
1   424	    010C  8B EC				 mov	 bp, sp
1   425	    010E  50				 push	 ax
1   426	    010F  53				 push	 bx
1   427	    0110  51				 push	 cx
1   428	    0111  52				 push	 dx
1   429	    0112  56				 push	 si
1   430	    0113  1E				 push	 ds
1   431						 movpp	 ds, cs
2   432	    0114  0E				 push	 cs
2   433	    0115  1F				 pop	 ds
1   434
1   435	    0116  8B 46	04			 mov	 ax, [bp+4]
1   436	    0119  33 F6				 xor	 si, si
1   437	    011B  85 C0				 test	 ax, ax
1   438	    011D  79 03				 jns	 @@0
1   439	    011F  46				 inc	 si
1   440	    0120  F7 D8				 neg	 ax
1   441	    0122			 @@0:
1   442	    0122  BB 010Ar			 lea	 bx, buffer+7
1   443	    0125  B9 000A			 mov	 cx, 10
1   444
1   445	    0128			 @@1:
1   446	    0128  33 D2				 xor	 dx, dx
1   447	    012A  F7 F1				 div	 cx
1   448	    012C  83 C2	30			 add	 dx, '0'
1   449	    012F  4B				 dec	 bx
1   450	    0130  88 17				 mov	 [bx], dl
1   451	    0132  0B C0				 or	 ax, ax
1   452	    0134  75 F2				 jnz	 @@1
1   453
1   454	    0136  85 F6				 test	 si, si
1   455	    0138  74 04				 jz	 @@2
1   456	    013A  4B				 dec	 bx
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 9
32cc.ASM



1   457	    013B  C6 07	2D			 mov	 byte ptr [bx],	'-'
1   458	    013E			 @@2:
1   459	    013E  8B D3				 mov	 dx, bx
1   460	    0140  B4 09				 mov	 ah, 9
1   461	    0142  CD 21				 int	 21h
1   462
1   463	    0144  1F				 pop	 ds
1   464	    0145  5E				 pop	 si
1   465	    0146  5A				 pop	 dx
1   466	    0147  59				 pop	 cx
1   467	    0148  5B				 pop	 bx
1   468	    0149  58				 pop	 ax
1   469	    014A  5D				 pop	 bp
1   470	    014B  C2 0002			 ret	 2
1   471	    014E			 prints	 endp
1   472
1   473
    474					 include com.asm
1   475	    014E			 .code
1   476
1   477	    014E			 Ser_Ini proc near
1   478	    014E  50				 push ax ; сохранить регистры
1   479	    014F  52				 push dx
1   480	    0150  53				 push bx
1   481	    0151  06				 push es
1   482	    0152  E4 21				 in al,21h ; IMR 1-го контролера прерываний
1   483	    0154  0C 10				 or al,10h ; запретить прерывание IRQ4 от COM1
1   484	    0156  E6 21				 out 21h,al
1   485	    0158  B0 0C				 mov al,0Ch
1   486	    015A  B4 35				 mov ah,35h
1   487	    015C  CD 21				 int 21h ; взять вектор	Int 0Ch	в es:bx
1   488	    015E  89 1E	0408r			 mov Ser_ip,bx ; и сохранить его
1   489	    0162  8C 06	040Ar			 mov Ser_cs,es
1   490	    0166  B0 0C				 mov al,0Ch
1   491	    0168  BA 01ECr			 mov dx,offset Ser_int
1   492	    016B  1E				 push ds
1   493	    016C  8C CB				 mov bx,cs
1   494	    016E  8E DB				 mov ds,bx
1   495	    0170  B4 25				 mov ah,25h
1   496	    0172  CD 21				 int 21h ; установить Int 0Ch =	ds:dx
1   497	    0174  1F				 pop ds
1   498	    0175  07				 pop es
1   499	    0176  5B				 pop bx
1   500	    0177  FA				 cli ; запретить прерывания
1   501	    0178  E4 21				 in al,21h ; IMR 1-го контроллера прерываний
1   502	    017A  24 EF				 and al,not 10h
1   503	    017C  E6 21				 out 21h,al ; разрешить	прерывания от COM1
1   504	    017E  BA 03FB			 mov dx,3FBh ; регистр управления линией
1   505	    0181  EC				 in al,dx
1   506	    0182  0C 80				 or al,80h ; установить	бит DLAB
1   507	    0184  EE				 out dx,al
1   508	    0185  BA 03F8			 mov dx,3F8h
1   509	    0188  B0 0C				 mov al,0Ch
1   510	    018A  EE				 out dx,al ; младший байт для скорости 1200 бод
1   511	    018B  42				 inc dx
1   512	    018C  B0 00				 mov al,0
1   513	    018E  EE				 out dx,al ; старший байт скорости
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 10
32cc.ASM



1   514	    018F  BA 03FB			 mov dx,3FBh ; регистр управления линией
1   515	    0192  B0 1F				 mov al,00011111b ; 8 бит, 2 стоп-бита,	без четности
1   516	    0194  EE				 out dx,al
1   517	    0195  BA 03F9			 mov dx,3F9h ; регистр разрешения прерываний
1   518	    0198  B0 01				 mov al,1 ; разрешить прерывания по приему
1   519	    019A  EE				 out dx,al
1   520	    019B  90				 nop ; и чуть-чуть подождать
1   521	    019C  90				 nop
1   522	    019D  BA 03FC			 mov dx,3FCh ; регистр управления модемом
1   523	    01A0  B0 0B				 mov al,00001011b ; установить DTR, RTS	и OUT2
1   524	    01A2  EE				 out dx,al
1   525	    01A3  FB				 sti ; разрешить прерывания
1   526	    01A4  BA 03F8			 mov dx,3F8h ; регистр данных
1   527	    01A7  EC				 in al,dx ; сбросить буфер приема
1   528	    01A8  5A				 pop dx
1   529	    01A9  58				 pop ax
1   530	    01AA  C3			 ret
1   531	    01AB			 Ser_Ini endp
1   532					 ;ЙНННННННННННННННННННННННННННННННННННННННННННННННННННННННННННН»
1   533					 ;є Подпрограмма отключения стыка COM1.	є
1   534					 ;ИННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННј
1   535	    01AB			 Ser_Rst proc near
1   536	    01AB  50				 push ax ; сохранить регистры
1   537	    01AC  52				 push dx
1   538	    01AD			 Wait_Free:
1   539	    01AD  BA 03FD			 mov dx,3FDh ; регистр состояния линии
1   540	    01B0  EC				 in al,dx
1   541	    01B1  EB 00				 jmp short $+2 ; короткая задержка
1   542	    01B3  A8 60				 test al,60h ; передача	окончена?
1   543	    01B5  74 F6				 jz Wait_Free ;	ждем, если нет
1   544	    01B7  BA 03F9			 mov dx,3F9h ; регистр разрешения прерываний
1   545	    01BA  B0 00				 mov al,0 ; запретить прерывания
1   546	    01BC  EE				 out dx,al
1   547	    01BD  EB 00				 jmp short $+2 ; еще подождем...
1   548	    01BF  EB 00				 jmp short $+2
1   549	    01C1  BA 03FC			 mov dx,3FCh ; регистр управления модемом
1   550	    01C4  B0 03				 mov al,00000011b ; активировать DTR и RTS
1   551	    01C6  EE				 out dx,al
1   552	    01C7  EB 00				 jmp short $+2
1   553	    01C9  EB 00				 jmp short $+2
1   554	    01CB  53				 push bx
1   555	    01CC  B0 0C				 mov al,0Ch
1   556	    01CE  8B 16	0408r			 mov dx,Ser_ip
1   557	    01D2  1E				 push ds
1   558	    01D3  8B 1E	040Ar			 mov bx,Ser_cs
1   559	    01D7  8E DB				 mov ds,bx
1   560	    01D9  B4 25				 mov ah,25h
1   561	    01DB  CD 21				 int 21h ; восстановить	вектор Int 0Ch
1   562	    01DD  1F				 pop ds
1   563	    01DE  5B				 pop bx
1   564	    01DF  FA				 cli ; запрет прерываний
1   565	    01E0  E4 21				 in al,21h ; читать маску прерываний
1   566	    01E2  EB 00				 jmp short $+2
1   567	    01E4  0C 10				 or al,10h ; запретить IRQ4
1   568	    01E6  E6 21				 out 21h,al
1   569	    01E8  FB				 sti ; разрешение прерываний
1   570	    01E9  5A				 pop dx
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 11
32cc.ASM



1   571	    01EA  58				 pop ax
1   572	    01EB  C3			 ret
1   573	    01EC			 Ser_Rst endp
1   574					 ;ЙНННННННННННННННННННННННННННННННННННННННННННННННННННННННННННН»
1   575					 ;є Подпрограмма обработки прерываний от COM1. є
1   576					 ;ИННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННј
1   577	    01EC			 Ser_Int proc far
1   578	    01EC  50				 push ax
1   579	    01ED  52				 push dx
1   580	    01EE  1E				 push ds
1   581						 movpp	 ds,cs
2   582	    01EF  0E				 push	 cs
2   583	    01F0  1F				 pop	 ds
1   584	    01F1  BA 03FA			 mov dx,3FAh ; регистр идентификации прерываний
1   585	    01F4  EC				 in al,dx
1   586	    01F5  A2 040Er			 mov Int_Sts,al; сохраним его содержимое
1   587	    01F8  A8 01				 test al,1 ; есть отложенные прерывания?
1   588	    01FA  74 14				 jz Is_Int ; да
1   589	    01FC  8F 06	040Cr			 pop Save_ds ; нет, передаем управление
1   590	    0200  5A				 pop dx	; старому обработчику Int 0Ch
1   591	    0201  58				 pop ax
1   592	    0202  FF 36	040Ar			 push Ser_cs
1   593	    0206  FF 36	0408r			 push Ser_ip
1   594	    020A  FF 36	040Cr			 push Save_ds
1   595	    020E  1F				 pop ds
1   596	    020F  CB			 ret ; длинный переход
1   597	    0210			 Is_Int:
1   598	    0210  B0 64				 mov al,64h ; послать EOI для IRQ4
1   599	    0212  E6 20				 out 20h,al ; в	1-й контроллер прерываний
1   600	    0214  F6 06	040Er 04		 test Int_Sts,4	; прерывание по	приему?
1   601	    0219  75 03				 jnz Read_Char ; да
1   602	    021B			 No_Char:
1   603	    021B  FB				 sti ; нет, разрешить прерывания
1   604	    021C  EB 47				 jmp Int_Ret ; и закончить обработку Int 0Ch
1   605	    021E			 Read_Char:
1   606	    021E  BA 03FD			 mov dx,3FDh ; регистр состояния линии
1   607	    0221  EC				 in al,dx
1   608	    0222  24 02				 and al,2
1   609	    0224  A2 040Fr			 mov Overrun,al; ovvrrun<>0, если была потеря символа
1   610	    0227  BA 03F8			 mov dx,3F8h ; регистр данных
1   611	    022A  EC				 in al,dx ; вводим символ
1   612					 ;or al,al ; если принят нуль,
1   613					 ;jz No_Char ; то игнорируем его
1   614	    022B  53				 push bx
1   615	    022C  8A 26	040Fr			 mov ah,Overrun
1   616	    0230  0A E4				 or ah,ah ; предыдущий символ потерян?
1   617	    0232  74 02				 jz Save_Char ;	нет
1   618	    0234  8A E0				 mov ah,al ; да,
1   619					 ;mov al,7 ; заменяем его на звонок (07h)
1   620	    0236			 Save_Char:
1   621	    0236  8B 1E	0404r			 mov bx,Src_ptr; заносим символ	в буфер
1   622	    023A  88 07				 mov [bx],al
1   623	    023C  FF 06	0404r			 inc Src_ptr ; и обновляем счетчики
1   624	    0240  43				 inc bx
1   625	    0241  81 FB	0402r			 cmp bx,offset Src_ptr-2 ; если	конец буфера
1   626	    0245  72 06				 jb Ser_Int_1
1   627	    0247  C7 06	0404r 0002r		 mov Src_ptr,offset Source ; то	"зацикливаем" на начало
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 12
32cc.ASM



1   628	    024D			 Ser_Int_1:
1   629	    024D  81 3E	0406r 0400		 cmp Count,Buf_Size ; буфер полон?
1   630	    0253  73 04				 jae Ser_Int_2 ; да
1   631	    0255  FF 06	0406r			 inc Count ; нет, учесть символ
1   632	    0259			 Ser_Int_2:
1   633	    0259  0A E4				 or ah,ah ; если была потеря символа
1   634	    025B  74 06				 jz Ser_Int_3
1   635	    025D  8A C4				 mov al,ah ; то	занести	в буфер	сам символ
1   636	    025F  32 E4				 xor ah,ah
1   637	    0261  EB D3				 jmp short Save_Char
1   638	    0263			 Ser_Int_3:
1   639	    0263  5B				 pop bx
1   640	    0264  FB				 sti ; разрешить прерывания
1   641	    0265			 Int_Ret:
1   642	    0265  1F				 pop ds
1   643	    0266  5A				 pop dx
1   644	    0267  58				 pop ax
1   645	    0268  CF			 iret
1   646	    0269			 Ser_Int endp
1   647					 ;ЙНННННННННННННННННННННННННННННННННННННННННННННННННННННННННННН»
1   648					 ;є Подпрограмма вывода	символа	AL в порт. є
1   649					 ;є При	ошибке возвращает CF=1,	иначе CF=0. є
1   650					 ;ИННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННј
1   651	    0269			 Out_Chr proc near
1   652	    0269  50				 push ax
1   653	    026A  51				 push cx
1   654	    026B  52				 push dx
1   655	    026C  8A E0				 mov ah,al
1   656	    026E  2B C9				 sub cx,cx
1   657	    0270			 Wait_Line:
1   658	    0270  BA 03FD			 mov dx,3FDh ; регистр состояния линии
1   659	    0273  EC				 in al,dx
1   660	    0274  A8 20				 test al,20h ; стык готов к передаче?
1   661	    0276  75 0B				 jnz Output ; да
1   662	    0278  EB 00				 jmp short $+2
1   663	    027A  EB 00				 jmp short $+2
1   664	    027C  E2 F2				 loop Wait_Line	; нет, ждем
1   665	    027E  5A				 pop dx
1   666	    027F  59				 pop cx
1   667	    0280  58				 pop ax
1   668	    0281  F9				 stc ; нет готовности порта
1   669	    0282  C3			 ret
1   670	    0283			 Output:
1   671	    0283  8A C4				 mov al,ah
1   672	    0285  BA 03F8			 mov dx,3F8h ; регистр данных
1   673	    0288  EB 00				 jmp short $+2
1   674	    028A  EE				 out dx,al ; вывести символ
1   675	    028B  5A				 pop dx
1   676	    028C  59				 pop cx
1   677	    028D  58				 pop ax
1   678	    028E  F8				 clc ; нормальный возврат
1   679	    028F  C3			 ret
1   680	    0290			 Out_Chr endp
1   681					 ;ЙНННННННННННННННННННННННННННННННННННННННННННННННННННННННННННН»
1   682					 ;є Подпрограмма ввода символа из порта	в AL. є
1   683					 ;є Если буфер пуст, возвращает	CF=1, иначе CF=0. є
1   684
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 13
32cc.ASM



1   685	    0290			 Get_Chr proc near
1   686	    0290  83 3E	0406r 00		 cmp Count,0 ; буфер пуст?
1   687	    0295  75 02				 jne loc_1729 ;	нет
1   688	    0297  F9				 stc ; да, возврат по ошибке
1   689	    0298  C3			 ret
1   690	    0299			 loc_1729:
1   691	    0299  56				 push si
1   692	    029A  FA				 cli ; запретим	прерывания
1   693	    029B  8B 36	0404r			 mov si,Src_ptr
1   694	    029F  2B 36	0406r			 sub si,Count
1   695	    02A3  81 FE	0002r			 cmp si,offset Source
1   696	    02A7  73 04				 jae loc_1730
1   697	    02A9  81 C6	0400			 add si,Buf_Size
1   698	    02AD			 loc_1730:
1   699	    02AD  8A 04				 mov al,[si] ; выберем символ
1   700	    02AF  FF 0E	0406r			 dec Count ; и уменьшим	счечик
1   701	    02B3  FB				 sti ; разрешение прерываний
1   702	    02B4  5E				 pop si
1   703	    02B5  F8				 clc ; и нормальный возврат
1   704	    02B6  C3			 ret
1   705	    02B7			 Get_Chr endp
1   706
1   707
    708					 include mdraw.asm
1   709	    02B7			 drawField proc	near
1   710	    02B7  50				 push	 ax
1   711	    02B8  53				 push	 bx
1   712	    02B9  51				 push	 cx
1   713	    02BA  52				 push	 dx
1   714	    02BB  56				 push	 si
1   715	    02BC  57				 push	 di
1   716	    02BD  55				 push	 bp
1   717
1   718	    02BE  8A 0E	0421r			 mov	 cl,sizeField
1   719	    02C2  B8 0018			 mov	 ax,24
1   720	    02C5  F6 E1				 mul	 cl
1   721	    02C7  05 0004			 add	 ax,4
1   722	    02CA  A3 03A4r			 mov	 rvv,ax
1   723	    02CD  A3 0549r			 mov	 rightBord1f,ax
1   724
1   725	    02D0  8A 0E	0421r			 mov	 cl,sizeField
1   726	    02D4  B8 001C			 mov	 ax,2*0Eh
1   727	    02D7  F6 E1				 mul	 cl
1   728	    02D9  05 0031			 add	 ax,49
1   729	    02DC  A3 054Dr			 mov	 bottomBord,ax
1   730
1   731	    02DF  B4 0C				 mov	 ah,0Ch
1   732	    02E1  B0 1E				 mov	 al,00011110b
1   733	    02E3  32 FF				 xor	 bh,bh
1   734	    02E5  E8 007F			 call	 _dSquare
1   735
1   736	    02E8  A1 03A4r			 mov	 ax,rvv
1   737	    02EB  05 0128			 add	 ax,296
1   738	    02EE  A3 03A4r			 mov	 rvv,ax
1   739	    02F1  A3 0547r			 mov	 rightBord2f,ax
1   740
1   741	    02F4  B4 0C				 mov	 ah,0Ch
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 14
32cc.ASM



1   742	    02F6  B0 16				 mov	 al,00010110b
1   743	    02F8  C7 06	03A8r 012B		 mov	 rv,299
1   744	    02FE  E8 0066			 call	 _dSquare
1   745
1   746	    0301  B4 13				 mov	 ah,13h
1   747	    0303  B0 01				 mov	 al,01h
1   748	    0305  B3 3F				 mov	 bl,00111111b
1   749	    0307  B9 000A			 mov	 cx,10
1   750	    030A  B2 46				 mov	 dl,70
1   751	    030C  B6 03				 mov	 dh,3
1   752
1   753	    030E  BD 0741r			 lea	 bp,msgGB
1   754	    0311  CD 10				 int	 10h
1   755	    0313  B6 05				 mov	 dh,5
1   756	    0315  BD 074Br			 lea	 bp,msgFin
1   757	    0318  CD 10				 int	 10h
1   758	    031A  B6 07				 mov	 dh,7
1   759	    031C  BD 0755r			 lea	 bp,msgRS
1   760	    031F  CD 10				 int	 10h
1   761	    0321  B6 09				 mov	 dh,9
1   762	    0323  BD 0769r			 lea	 bp,msg4v
1   763	    0326  CD 10				 int	 10h
1   764	    0328  B6 0B				 mov	 dh,11
1   765	    032A  BD 0773r			 lea	 bp,msg4h
1   766	    032D  CD 10				 int	 10h
1   767	    032F  B6 0D				 mov	 dh,13
1   768	    0331  BD 077Dr			 lea	 bp,msg3v
1   769	    0334  CD 10				 int	 10h
1   770	    0336  B6 0F				 mov	 dh,15
1   771	    0338  BD 0787r			 lea	 bp,msg3h
1   772	    033B  CD 10				 int	 10h
1   773	    033D  B6 11				 mov	 dh,17
1   774	    033F  BD 0791r			 lea	 bp,msg2v
1   775	    0342  CD 10				 int	 10h
1   776	    0344  B6 13				 mov	 dh,19
1   777	    0346  BD 079Br			 lea	 bp,msg2h
1   778	    0349  CD 10				 int	 10h
1   779	    034B  B6 15				 mov	 dh,21
1   780	    034D  BD 07A5r			 lea	 bp,msg11
1   781	    0350  CD 10				 int	 10h
1   782	    0352  B6 17				 mov	 dh,23
1   783	    0354  BD 075Fr			 lea	 bp,msgRD
1   784	    0357  CD 10				 int	 10h
1   785
1   786	    0359  33 D2				 xor	 dx,dx
1   787	    035B  B4 02				 mov	 ah,02h
1   788	    035D  CD 10				 int	 10h
1   789
1   790
1   791	    035F  5D				 pop	 bp
1   792	    0360  5F				 pop	 di
1   793	    0361  5E				 pop	 si
1   794	    0362  5A				 pop	 dx
1   795	    0363  59				 pop	 cx
1   796	    0364  5B				 pop	 bx
1   797	    0365  58				 pop	 ax
1   798	    0366  C3			 ret
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 15
32cc.ASM



1   799
1   800	    0367			 _dSquare:
1   801	    0367  8B 16	054Fr			 mov	 dx,topBord
1   802	    036B			 _cci2:
1   803	    036B  8B 0E	03A8r			 mov	 cx,rv
1   804	    036F			 _cci:
1   805	    036F  CD 10				 int	 10h
1   806	    0371  42				 inc	 dx
1   807	    0372  CD 10				 int	 10h
1   808
1   809	    0374  4A				 dec	 dx
1   810	    0375  41				 inc	 cx
1   811	    0376  3B 0E	03A4r			 cmp	 cx,rvv
1   812	    037A  75 F3				 jne	 _cci
1   813	    037C  83 C2	1C			 add	 dx,2*0Eh
1   814	    037F  3B 16	054Dr			 cmp	 dx,bottomBord
1   815	    0383  7C E6				 jl	 _cci2
1   816
1   817	    0385  8B 0E	03A8r			 mov	 cx,rv
1   818	    0389			 _ddi2:
1   819	    0389  8B 16	054Fr			 mov	 dx,topBord
1   820	    038D			 _ddi:
1   821	    038D  CD 10				 int	 10h
1   822	    038F  41				 inc	 cx
1   823	    0390  CD 10				 int	 10h
1   824
1   825	    0392  49				 dec	 cx
1   826	    0393  42				 inc	 dx
1   827	    0394  3B 16	054Dr			 cmp	 dx,bottomBord
1   828	    0398  75 F3				 jne	 _ddi
1   829	    039A  83 C1	18			 add	 cx,18h
1   830	    039D  3B 0E	03A4r			 cmp	 cx,rvv
1   831	    03A1  7C E6				 jl	 _ddi2
1   832	    03A3  C3			 ret
1   833	    03A4  0000			 rvv	 dw	 0
1   834	    03A6  0000			 llv	 dw	 0
1   835	    03A8  0003			 rv	 dw	 3
1   836	    03AA			 drawField ENDP
1   837
1   838
1   839	    03AA			 drawKillMy proc
1   840					 ;рисуем попадания противника в	мои корабли
1   841	    03AA  50				 push	 ax
1   842	    03AB  53				 push	 bx
1   843	    03AC  51				 push	 cx
1   844	    03AD  52				 push	 dx
1   845	    03AE  55				 push	 bp
1   846
1   847	    03AF  33 C9				 xor	 cx,cx
1   848	    03B1  8A 0E	0624r			 mov	 cl,y
1   849	    03B5  B8 0002			 mov	 ax,2
1   850	    03B8  F6 E1				 mul	 cl
1   851	    03BA  48				 dec	 ax
1   852	    03BB  8A F0				 mov	 dh,al
1   853	    03BD  80 C6	03			 add	 dh,3
1   854	    03C0  88 36	03EAr			 mov	 koordy,dh
1   855
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 16
32cc.ASM



1   856	    03C4  8A 0E	0623r			 mov	 cl,x
1   857	    03C8  B8 0003			 mov	 ax,3
1   858	    03CB  F6 E1				 mul	 cl
1   859	    03CD  2D 0002			 sub	 ax,2
1   860	    03D0  8A D0				 mov	 dl,al
1   861	    03D2			 one:
1   862	    03D2  8A 36	03EAr			 mov	 dh,koordy
1   863	    03D6  B9 0002			 mov	 cx,2
1   864	    03D9  B8 1300			 mov	 ax,1300h
1   865	    03DC  BD 03E7r			 mov bp, offset	kill
1   866	    03DF  CD 10				 int	 10h
1   867
1   868	    03E1  5D				 pop	 bp
1   869	    03E2  5A				 pop	 dx
1   870	    03E3  59				 pop	 cx
1   871	    03E4  5B				 pop	 bx
1   872	    03E5  58				 pop	 ax
1   873
1   874	    03E6  C3				 ret
1   875
1   876	    03E7  02*(DB)		 kill		 db	 2 dup (219)
1   877	    03E9  00			 koordx	 db	 0
1   878	    03EA  00			 koordy	 db	 0
1   879	    03EB			 drawKillMy endp
1   880
1   881	    03EB			 drawKillOpponent proc
1   882					 ;рисуем свои попадпния	в корабли противника
1   883
1   884	    03EB  50				 push	 ax
1   885	    03EC  53				 push	 bx
1   886	    03ED  51				 push	 cx
1   887	    03EE  52				 push	 dx
1   888	    03EF  55				 push	 bp
1   889
1   890	    03F0  8A 0E	0624r			 mov	 cl,y
1   891	    03F4  B8 0002			 mov	 ax,2
1   892	    03F7  F6 E1				 mul	 cl
1   893	    03F9  48				 dec	 ax
1   894	    03FA  8A F0				 mov	 dh,al
1   895	    03FC  80 C6	03			 add	 dh,3
1   896	    03FF  88 36	043Dr			 mov	 koordOpy,dh
1   897	    0403  8A 0E	0623r			 mov	 cl,x
1   898	    0407  B8 0003			 mov	 ax,3
1   899	    040A  F6 E1				 mul	 cl
1   900	    040C  2D 0002			 sub	 ax,2
1   901	    040F  8A D0				 mov	 dl,al
1   902	    0411  80 C2	25			 add	 dl,37
1   903	    0414			 oneOp:
1   904	    0414  8A 36	043Dr			 mov	 dh,koordOpy
1   905	    0418  32 FF				 xor	 bh,bh
1   906	    041A  B3 3B				 mov	 bl,00111011b
1   907	    041C  B9 0001			 mov	 cx,1
1   908	    041F  B4 02				 mov	 ah,02h
1   909	    0421  CD 10				 int	 10h
1   910	    0423  B9 0002			 mov	 cx,2
1   911	    0426  B8 1300			 mov	 ax,1300h
1   912	    0429  BD 03E7r			 lea	 bp,kill
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 17
32cc.ASM



1   913	    042C  CD 10				 int	 10h
1   914
1   915	    042E  B6 18				 mov	 dh,24
1   916	    0430  B2 50				 mov	 dl,80
1   917	    0432  B4 02				 mov	 ah,02h
1   918	    0434  CD 10				 int	 10h
1   919
1   920	    0436  5D				 pop	 bp
1   921	    0437  5A				 pop	 dx
1   922	    0438  59				 pop	 cx
1   923	    0439  5B				 pop	 bx
1   924	    043A  58				 pop	 ax
1   925
1   926	    043B  C3				 ret
1   927	    043C  00			 koordOpx	 db	 0
1   928	    043D  00			 koordOpy	 db	 0
1   929	    043E			 drawKillOpponent endp
1   930
1   931
1   932	    043E			 drawMissOpponent proc
1   933					 ;рисуем промахи которые допустил сам
1   934
1   935	    043E  50				 push	 ax
1   936	    043F  53				 push	 bx
1   937	    0440  51				 push	 cx
1   938	    0441  52				 push	 dx
1   939	    0442  55				 push	 bp
1   940
1   941	    0443  8A 0E	0624r			 mov	 cl,y
1   942	    0447  B8 0002			 mov	 ax,2
1   943	    044A  F6 E1				 mul	 cl
1   944	    044C  FE C8				 dec	 al
1   945	    044E  8A F0				 mov	 dh,al
1   946	    0450  80 C6	03			 add	 dh,3
1   947	    0453  88 36	048Dr			 mov	 koordMissy,dh
1   948	    0457  8A 0E	0623r			 mov	 cl,x
1   949	    045B  B8 0003			 mov	 ax,3
1   950	    045E  F6 E1				 mul	 cl
1   951	    0460  2D 0002			 sub	 ax,2
1   952	    0463  8A D0				 mov	 dl,al
1   953	    0465  80 C2	26			 add	 dl,38
1   954
1   955	    0468  8A 36	048Dr			 mov	 dh,koordMissy
1   956	    046C  32 FF				 xor	 bh,bh
1   957	    046E  B3 3A				 mov	 bl,00111010b
1   958	    0470  B9 0001			 mov	 cx,1
1   959	    0473  B4 02				 mov	 ah,02h
1   960	    0475  CD 10				 int	 10h
1   961
1   962	    0477  B8 1300			 mov	 ax,1300h
1   963	    047A  BD 062Br			 lea	 bp,miss
1   964	    047D  CD 10				 int	 10h
1   965
1   966	    047F  B6 18				 mov	 dh,24
1   967	    0481  B2 50				 mov	 dl,80
1   968	    0483  B4 02				 mov	 ah,02h
1   969	    0485  CD 10				 int	 10h
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 18
32cc.ASM



1   970
1   971	    0487  5D				 pop	 bp
1   972	    0488  5A				 pop	 dx
1   973	    0489  59				 pop	 cx
1   974	    048A  5B				 pop	 bx
1   975	    048B  58				 pop	 ax
1   976
1   977	    048C  C3				 ret
1   978	    048D  00			 koordMissy	 db	 0
1   979	    048E			 drawMissOpponent endp
1   980
1   981	    048E			 drawMissMy proc
1   982					 ;рисуем промахи которые допустил противник
1   983
1   984	    048E  50				 push	 ax
1   985	    048F  53				 push	 bx
1   986	    0490  51				 push	 cx
1   987	    0491  52				 push	 dx
1   988	    0492  56				 push	 si
1   989	    0493  57				 push	 di
1   990	    0494  55				 push	 bp
1   991
1   992	    0495  33 C9				 xor	 cx , cx
1   993	    0497  8A 0E	0624r			 mov	 cl , y
1   994	    049B  33 C0				 xor	 ax , ax
1   995	    049D  B8 0002			 mov	 ax , 2
1   996	    04A0  F7 E1				 mul	 cx
1   997	    04A2  48				 dec	 ax
1   998	    04A3  8A F0				 mov	 dh , al
1   999	    04A5  80 C6	03			 add	 dh , 3
1  1000	    04A8  88 36	04E8r			 mov	 koordMissMy , dh
1  1001	    04AC  33 C9				 xor	 cx , cx
1  1002	    04AE  8A 0E	0623r			 mov	 cl , x
1  1003	    04B2  33 C0				 xor	 ax , ax
1  1004	    04B4  B8 0003			 mov	 ax , 3
1  1005	    04B7  F7 E1				 mul	 cx
1  1006	    04B9  2D 0002			 sub	 ax , 2
1  1007	    04BC  8A D0				 mov	 dl , al
1  1008
1  1009	    04BE  8A 36	04E8r			 mov	 dh , koordMissMy
1  1010	    04C2  B7 00				 mov	 bh , 0
1  1011	    04C4  B3 3A				 mov	 bl , 00111010b
1  1012	    04C6  B9 0001			 mov	 cx , 1
1  1013	    04C9  B4 02				 mov	 ah , 02h
1  1014	    04CB  CD 10				 int	 10h
1  1015	    04CD  B9 0001			 mov	 cx , 1
1  1016	    04D0  B8 1300			 mov	 ax , 1300h
1  1017	    04D3  BD 062Dr			 lea	 bp , miss1
1  1018	    04D6  CD 10				 int	 10h
1  1019
1  1020
1  1021	    04D8  B6 18				 mov	 dh , 24
1  1022	    04DA  B2 50				 mov	 dl , 80
1  1023	    04DC  B4 02				 mov	 ah , 02h
1  1024	    04DE  CD 10				 int	 10h
1  1025
1  1026	    04E0  5D				 pop	 bp
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 19
32cc.ASM



1  1027	    04E1  5F				 pop	 di
1  1028	    04E2  5E				 pop	 si
1  1029	    04E3  5A				 pop	 dx
1  1030	    04E4  59				 pop	 cx
1  1031	    04E5  5B				 pop	 bx
1  1032	    04E6  58				 pop	 ax
1  1033
1  1034	    04E7  C3				 ret
1  1035	    04E8  00			 koordMissMy	 db	 0
1  1036	    04E9			 drawMissMy endp
   1037					 include calc.asm
1  1038	    04E9			 calcPlaceShip proc
1  1039					 ;вычисляются координаты при расстановке кораблей т е первое поле
1  1040	    04E9  50				 push	 ax
1  1041	    04EA  53				 push	 bx
1  1042
1  1043	    04EB  A1 0625r			 mov	 ax,x1
1  1044	    04EE  B3 18				 mov	 bl,24
1  1045	    04F0  F6 F3				 div	 bl
1  1046	    04F2  FE C0				 inc	 al
1  1047	    04F4  A2 0623r			 mov	 x,al
1  1048	    04F7  A1 0627r			 mov	 ax,y1
1  1049	    04FA  B3 0E				 mov	 bl,14
1  1050	    04FC  F6 F3				 div	 bl
1  1051	    04FE  32 E4				 xor	 ah,ah
1  1052	    0500  2C 03				 sub	 al,3
1  1053	    0502  D0 E8				 shr	 al,1
1  1054	    0504  FE C0				 inc	 al
1  1055	    0506  A2 0624r			 mov	 y,al
1  1056
1  1057	    0509  5B				 pop	 bx
1  1058	    050A  58				 pop	 ax
1  1059	    050B  C3			 ret
1  1060	    050C			 calcPlaceShip endp
1  1061
1  1062	    050C			 calcAttackShip	 proc
1  1063					 ;вычисляются координаты нашей аттаки т	е куда <ы нажали т е второе поле
1  1064	    050C  50				 push	 ax
1  1065	    050D  53				 push	 bx
1  1066
1  1067	    050E  A1 0625r			 mov	 ax,x1
1  1068	    0511  C1 E8	03			 shr	 ax,3
1  1069	    0514  2D 0025			 sub	 ax,37
1  1070	    0517  B3 03				 mov	 bl,3
1  1071	    0519  F6 F3				 div	 bl
1  1072	    051B  40				 inc	 ax
1  1073	    051C  A2 0623r			 mov	 x,al
1  1074	    051F  A1 0627r			 mov	 ax,y1
1  1075	    0522  B3 0E				 mov	 bl,14
1  1076	    0524  F6 F3				 div	 bl
1  1077	    0526  2D 0003			 sub	 ax,3
1  1078					 ;	 mov	 bl,2
1  1079					 ;	 div	 bl
1  1080	    0529  D0 E8				 shr	 al, 1
1  1081	    052B  40				 inc	 ax
1  1082	    052C  A2 0624r			 mov	 y,al
1  1083
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 20
32cc.ASM



1  1084	    052F  5B				 pop	 bx
1  1085	    0530  58				 pop	 ax
1  1086	    0531  C3			 ret
1  1087	    0532			 calcAttackShip	 endp
1  1088
1  1089
1  1090	    0532			 calcCorrectVert4	 proc
1  1091
1  1092	    0532  50				 push	 ax
1  1093	    0533  53				 push	 bx
1  1094	    0534  51				 push	 cx
1  1095	    0535  52				 push	 dx
1  1096	    0536  56				 push	 si
1  1097	    0537  57				 push	 di
1  1098	    0538  55				 push	 bp
1  1099
1  1100	    0539  33 C9				 xor	 cx , cx
1  1101	    053B  8A 0E	0623r			 mov	 cl , x
1  1102	    053F  8B F1				 mov	 si , cx
1  1103	    0541  8A 0E	0624r			 mov	 cl , y
1  1104	    0545  8B E9				 mov	 bp , cx
1  1105	    0547  8A 0E	0421r			 mov	 cl , sizeField
1  1106	    054B  2B CD				 sub	 cx , bp
1  1107	    054D  83 F9	03			 cmp	 cx , 3
1  1108	    0550  7C 59				 jl	 okVert4
1  1109	    0552  33 C9				 xor	 cx , cx
1  1110	    0554  8A 0E	0624r			 mov	 cl , y
1  1111	    0558  33 D2				 xor	 dx , dx
1  1112	    055A  B8 000C			 mov	 ax , 12
1  1113	    055D  F7 E1				 mul	 cx
1  1114	    055F  8B E8				 mov	 bp , ax
1  1115	    0561  4E				 dec	 si
1  1116	    0562  83 ED	0C			 sub	 bp , 12
1  1117	    0565  33 C0				 xor	 ax , ax
1  1118	    0567  33 C9				 xor	 cx , cx
1  1119	    0569  B9 0006			 mov	 cx , 6
1  1120	    056C			 incsi4:
1  1121	    056C  80 BA	0422r 00		 cmp	 field[bp][si] , 0
1  1122	    0571  75 38				 jne	 okVert4
1  1123	    0573  46				 inc	 si
1  1124	    0574  40				 inc	 ax
1  1125	    0575  3D 0003			 cmp	 ax , 3
1  1126	    0578  7C F2				 jl	 incsi4
1  1127
1  1128	    057A  33 C0				 xor	 ax , ax
1  1129	    057C  83 C5	0C			 add	 bp , 12
1  1130	    057F  83 EE	03			 sub	 si , 3
1  1131	    0582  E2 E8				 loop	 incsi4
1  1132
1  1133	    0584  46				 inc	 si
1  1134	    0585  83 ED	18			 sub	 bp , 24
1  1135	    0588  C7 06	0551r 0001		 mov	 ok , 1
1  1136	    058E  C6 82	0422r 01		 mov	 field[bp][si] , 1
1  1137	    0593  83 ED	0C			 sub	 bp , 12
1  1138	    0596  C6 82	0422r 01		 mov	 field[bp][si] , 1
1  1139	    059B  83 ED	0C			 sub	 bp , 12
1  1140	    059E  C6 82	0422r 01		 mov	 field[bp][si] , 1
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 21
32cc.ASM



1  1141	    05A3  83 ED	0C			 sub	 bp , 12
1  1142	    05A6  C6 82	0422r 01		 mov	 field[bp][si] , 1
1  1143
1  1144	    05AB			 okVert4:
1  1145
1  1146	    05AB  5D				 pop	 bp
1  1147	    05AC  5F				 pop	 di
1  1148	    05AD  5E				 pop	 si
1  1149	    05AE  5A				 pop	 dx
1  1150	    05AF  59				 pop	 cx
1  1151	    05B0  5B				 pop	 bx
1  1152	    05B1  58				 pop	 ax
1  1153
1  1154	    05B2  C3				 ret
1  1155
1  1156	    05B3			 calcCorrectVert4	 endp
1  1157
1  1158	    05B3			 calcCorrectHor4 proc
1  1159
1  1160	    05B3  50				 push	 ax
1  1161	    05B4  53				 push	 bx
1  1162	    05B5  51				 push	 cx
1  1163	    05B6  52				 push	 dx
1  1164	    05B7  56				 push	 si
1  1165	    05B8  57				 push	 di
1  1166	    05B9  55				 push	 bp
1  1167
1  1168	    05BA  33 C9				 xor	 cx , cx
1  1169	    05BC  8A 0E	0623r			 mov	 cl , x
1  1170	    05C0  8B F1				 mov	 si , cx
1  1171	    05C2  8A 0E	0624r			 mov	 cl , y
1  1172	    05C6  33 D2				 xor	 dx , dx
1  1173	    05C8  B8 000C			 mov	 ax , 12
1  1174	    05CB  F7 E1				 mul	 cx
1  1175	    05CD  8B E8				 mov	 bp , ax
1  1176	    05CF  8A 0E	0421r			 mov	 cl , sizeField
1  1177	    05D3  2B CE				 sub	 cx , si
1  1178	    05D5  83 F9	03			 cmp	 cx , 3
1  1179	    05D8  7C 42				 jl	 okHor4
1  1180	    05DA  4E				 dec	 si
1  1181	    05DB  83 ED	0C			 sub	 bp , 12
1  1182	    05DE  33 C0				 xor	 ax , ax
1  1183	    05E0  B9 0003			 mov	 cx , 3
1  1184	    05E3			 incsih4:
1  1185	    05E3  80 BA	0422r 00		 cmp	 field[bp][si] , 0
1  1186	    05E8  75 32				 jne	 okHor4
1  1187	    05EA  46				 inc	 si
1  1188	    05EB  40				 inc	 ax
1  1189	    05EC  3D 0006			 cmp	 ax , 6
1  1190	    05EF  7C F2				 jl	 incsih4
1  1191
1  1192	    05F1  33 C0				 xor	 ax , ax
1  1193	    05F3  83 C5	0C			 add	 bp , 12
1  1194	    05F6  83 EE	06			 sub	 si , 6
1  1195	    05F9  E2 E8				 loop	 incsih4
1  1196
1  1197	    05FB  46				 inc	 si
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 22
32cc.ASM



1  1198	    05FC  83 ED	18			 sub	 bp , 24
1  1199	    05FF  C7 06	0551r 0001		 mov	 ok , 1
1  1200	    0605  C6 82	0422r 01		 mov	 field[bp][si] , 1
1  1201	    060A  46				 inc	 si
1  1202	    060B  C6 82	0422r 01		 mov	 field[bp][si] , 1
1  1203	    0610  46				 inc	 si
1  1204	    0611  C6 82	0422r 01		 mov	 field[bp][si] , 1
1  1205	    0616  46				 inc	 si
1  1206	    0617  C6 82	0422r 01		 mov	 field[bp][si] , 1
1  1207
1  1208	    061C			 okHor4:
1  1209
1  1210	    061C  5D				 pop	 bp
1  1211	    061D  5F				 pop	 di
1  1212	    061E  5E				 pop	 si
1  1213	    061F  5A				 pop	 dx
1  1214	    0620  59				 pop	 cx
1  1215	    0621  5B				 pop	 bx
1  1216	    0622  58				 pop	 ax
1  1217
1  1218	    0623  C3				 ret
1  1219
1  1220	    0624			 calcCorrectHor4 endp
1  1221
1  1222	    0624			 calcCorrectHor3 proc
1  1223
1  1224	    0624  50				 push	 ax
1  1225	    0625  53				 push	 bx
1  1226	    0626  51				 push	 cx
1  1227	    0627  52				 push	 dx
1  1228	    0628  56				 push	 si
1  1229	    0629  57				 push	 di
1  1230	    062A  55				 push	 bp
1  1231
1  1232	    062B  33 C9				 xor	 cx , cx
1  1233	    062D  8A 0E	0623r			 mov	 cl , x
1  1234	    0631  8B F1				 mov	 si , cx
1  1235	    0633  8A 0E	0624r			 mov	 cl , y
1  1236	    0637  33 D2				 xor	 dx , dx
1  1237	    0639  B8 000C			 mov	 ax , 12
1  1238	    063C  F7 E1				 mul	 cx
1  1239	    063E  8B E8				 mov	 bp , ax
1  1240	    0640  8A 0E	0421r			 mov	 cl , sizeField
1  1241	    0644  2B CE				 sub	 cx , si
1  1242	    0646  83 F9	02			 cmp	 cx , 2
1  1243	    0649  7C 3C				 jl	 okHor3
1  1244	    064B  4E				 dec	 si
1  1245	    064C  83 ED	0C			 sub	 bp , 12
1  1246	    064F  33 C0				 xor	 ax , ax
1  1247	    0651  B9 0003			 mov	 cx , 3
1  1248	    0654			 incsih3:
1  1249	    0654  80 BA	0422r 00		 cmp	 field[bp][si] , 0
1  1250	    0659  75 2C				 jne	 okHor3
1  1251	    065B  46				 inc	 si
1  1252	    065C  40				 inc	 ax
1  1253	    065D  3D 0005			 cmp	 ax , 5
1  1254	    0660  7C F2				 jl	 incsih3
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 23
32cc.ASM



1  1255
1  1256	    0662  33 C0				 xor	 ax , ax
1  1257	    0664  83 C5	0C			 add	 bp , 12
1  1258	    0667  83 EE	05			 sub	 si , 5
1  1259	    066A  E2 E8				 loop	 incsih3
1  1260
1  1261	    066C  46				 inc	 si
1  1262	    066D  83 ED	18			 sub	 bp , 24
1  1263	    0670  C7 06	0551r 0001		 mov	 ok , 1
1  1264	    0676  C6 82	0422r 01		 mov	 field[bp][si] , 1
1  1265	    067B  46				 inc	 si
1  1266	    067C  C6 82	0422r 01		 mov	 field[bp][si] , 1
1  1267	    0681  46				 inc	 si
1  1268	    0682  C6 82	0422r 01		 mov	 field[bp][si] , 1
1  1269
1  1270	    0687			 okHor3:
1  1271
1  1272	    0687  5D				 pop	 bp
1  1273	    0688  5F				 pop	 di
1  1274	    0689  5E				 pop	 si
1  1275	    068A  5A				 pop	 dx
1  1276	    068B  59				 pop	 cx
1  1277	    068C  5B				 pop	 bx
1  1278	    068D  58				 pop	 ax
1  1279
1  1280	    068E  C3				 ret
1  1281
1  1282	    068F			 calcCorrectHor3 endp
1  1283
1  1284	    068F			 calcCorrectVert3	 proc
1  1285
1  1286	    068F  50				 push	 ax
1  1287	    0690  53				 push	 bx
1  1288	    0691  51				 push	 cx
1  1289	    0692  52				 push	 dx
1  1290	    0693  56				 push	 si
1  1291	    0694  57				 push	 di
1  1292	    0695  55				 push	 bp
1  1293
1  1294	    0696  33 C9				 xor	 cx , cx
1  1295	    0698  8A 0E	0623r			 mov	 cl , x
1  1296	    069C  8B F1				 mov	 si , cx
1  1297	    069E  8A 0E	0624r			 mov	 cl , y
1  1298	    06A2  8B E9				 mov	 bp , cx
1  1299	    06A4  8A 0E	0421r			 mov	 cl , sizeField
1  1300	    06A8  2B CD				 sub	 cx , bp
1  1301	    06AA  83 F9	02			 cmp	 cx , 2
1  1302	    06AD  7C 4F				 jl	 okVert3
1  1303	    06AF  33 C9				 xor	 cx , cx
1  1304	    06B1  8A 0E	0624r			 mov	 cl , y
1  1305	    06B5  33 D2				 xor	 dx , dx
1  1306	    06B7  B8 000C			 mov	 ax , 12
1  1307	    06BA  F7 E1				 mul	 cx
1  1308	    06BC  8B E8				 mov	 bp , ax
1  1309	    06BE  4E				 dec	 si
1  1310	    06BF  83 ED	0C			 sub	 bp , 12
1  1311	    06C2  33 C0				 xor	 ax , ax
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 24
32cc.ASM



1  1312	    06C4  B9 0005			 mov	 cx , 5
1  1313	    06C7			 incsi3:
1  1314	    06C7  80 BA	0422r 00		 cmp	 field[bp][si] , 0
1  1315	    06CC  75 30				 jne	 okVert3
1  1316	    06CE  46				 inc	 si
1  1317	    06CF  40				 inc	 ax
1  1318	    06D0  3D 0003			 cmp	 ax , 3
1  1319	    06D3  7C F2				 jl	 incsi3
1  1320
1  1321	    06D5  33 C0				 xor	 ax , ax
1  1322	    06D7  83 C5	0C			 add	 bp , 12
1  1323	    06DA  83 EE	03			 sub	 si , 3
1  1324	    06DD  E2 E8				 loop	 incsi3
1  1325
1  1326	    06DF  46				 inc	 si
1  1327	    06E0  83 ED	18			 sub	 bp , 24
1  1328	    06E3  C7 06	0551r 0001		 mov	 ok , 1
1  1329	    06E9  C6 82	0422r 01		 mov	 field[bp][si] , 1
1  1330	    06EE  83 ED	0C			 sub	 bp , 12
1  1331	    06F1  C6 82	0422r 01		 mov	 field[bp][si] , 1
1  1332	    06F6  83 ED	0C			 sub	 bp , 12
1  1333	    06F9  C6 82	0422r 01		 mov	 field[bp][si] , 1
1  1334
1  1335	    06FE			 okVert3:
1  1336
1  1337	    06FE  5D				 pop	 bp
1  1338	    06FF  5F				 pop	 di
1  1339	    0700  5E				 pop	 si
1  1340	    0701  5A				 pop	 dx
1  1341	    0702  59				 pop	 cx
1  1342	    0703  5B				 pop	 bx
1  1343	    0704  58				 pop	 ax
1  1344
1  1345	    0705  C3				 ret
1  1346
1  1347	    0706			 calcCorrectVert3	 endp
1  1348
1  1349	    0706			 calcCorrectVert2	 proc
1  1350
1  1351	    0706  50				 push	 ax
1  1352	    0707  53				 push	 bx
1  1353	    0708  51				 push	 cx
1  1354	    0709  52				 push	 dx
1  1355	    070A  56				 push	 si
1  1356	    070B  57				 push	 di
1  1357	    070C  55				 push	 bp
1  1358
1  1359	    070D  33 C9				 xor	 cx , cx
1  1360	    070F  8A 0E	0623r			 mov	 cl , x
1  1361	    0713  8B F1				 mov	 si , cx
1  1362	    0715  8A 0E	0624r			 mov	 cl , y
1  1363	    0719  8B E9				 mov	 bp , cx
1  1364	    071B  8A 0E	0421r			 mov	 cl , sizeField
1  1365	    071F  2B CD				 sub	 cx , bp
1  1366	    0721  83 F9	01			 cmp	 cx , 1
1  1367	    0724  7C 47				 jl	 okVert2
1  1368	    0726  33 C9				 xor	 cx , cx
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 25
32cc.ASM



1  1369	    0728  8A 0E	0624r			 mov	 cl , y
1  1370	    072C  33 D2				 xor	 dx , dx
1  1371	    072E  B8 000C			 mov	 ax , 12
1  1372	    0731  F7 E1				 mul	 cx
1  1373	    0733  8B E8				 mov	 bp , ax
1  1374	    0735  4E				 dec	 si
1  1375	    0736  83 ED	0C			 sub	 bp , 12
1  1376	    0739  33 C0				 xor	 ax , ax
1  1377	    073B  B9 0004			 mov	 cx , 4
1  1378	    073E			 incsi2:
1  1379	    073E  80 BA	0422r 00		 cmp	 field[bp][si] , 0
1  1380	    0743  75 28				 jne	 okVert2
1  1381	    0745  46				 inc	 si
1  1382	    0746  40				 inc	 ax
1  1383	    0747  3D 0003			 cmp	 ax , 3
1  1384	    074A  7C F2				 jl	 incsi2
1  1385
1  1386	    074C  33 C0				 xor	 ax , ax
1  1387	    074E  83 C5	0C			 add	 bp , 12
1  1388	    0751  83 EE	03			 sub	 si , 3
1  1389	    0754  E2 E8				 loop	 incsi2
1  1390
1  1391	    0756  46				 inc	 si
1  1392	    0757  83 ED	18			 sub	 bp , 24
1  1393	    075A  C7 06	0551r 0001		 mov	 ok , 1
1  1394	    0760  C6 82	0422r 01		 mov	 field[bp][si] , 1
1  1395	    0765  83 ED	0C			 sub	 bp , 12
1  1396	    0768  C6 82	0422r 01		 mov	 field[bp][si] , 1
1  1397
1  1398	    076D			 okVert2:
1  1399
1  1400	    076D  5D				 pop	 bp
1  1401	    076E  5F				 pop	 di
1  1402	    076F  5E				 pop	 si
1  1403	    0770  5A				 pop	 dx
1  1404	    0771  59				 pop	 cx
1  1405	    0772  5B				 pop	 bx
1  1406	    0773  58				 pop	 ax
1  1407
1  1408	    0774  C3				 ret
1  1409
1  1410	    0775			 calcCorrectVert2	 endp
1  1411
1  1412	    0775			 calcCorrectHor2 proc
1  1413
1  1414	    0775  50				 push	 ax
1  1415	    0776  53				 push	 bx
1  1416	    0777  51				 push	 cx
1  1417	    0778  52				 push	 dx
1  1418	    0779  56				 push	 si
1  1419	    077A  57				 push	 di
1  1420	    077B  55				 push	 bp
1  1421
1  1422	    077C  33 C9				 xor	 cx , cx
1  1423	    077E  8A 0E	0623r			 mov	 cl , x
1  1424	    0782  8B F1				 mov	 si , cx
1  1425	    0784  8A 0E	0624r			 mov	 cl , y
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 26
32cc.ASM



1  1426	    0788  33 D2				 xor	 dx , dx
1  1427	    078A  B8 000C			 mov	 ax , 12
1  1428	    078D  F7 E1				 mul	 cx
1  1429	    078F  8B E8				 mov	 bp , ax
1  1430	    0791  8A 0E	0421r			 mov	 cl , sizeField
1  1431	    0795  2B CE				 sub	 cx , si
1  1432	    0797  83 F9	01			 cmp	 cx , 1
1  1433	    079A  7C 36				 jl	 okHor2
1  1434	    079C  4E				 dec	 si
1  1435	    079D  83 ED	0C			 sub	 bp , 12
1  1436	    07A0  33 C0				 xor	 ax , ax
1  1437	    07A2  B9 0003			 mov	 cx , 3
1  1438	    07A5			 incsi:
1  1439	    07A5  80 BA	0422r 00		 cmp	 field[bp][si] , 0
1  1440	    07AA  75 26				 jne	 okHor2
1  1441	    07AC  46				 inc	 si
1  1442	    07AD  40				 inc	 ax
1  1443	    07AE  3D 0004			 cmp	 ax , 4
1  1444	    07B1  7C F2				 jl	 incsi
1  1445
1  1446	    07B3  33 C0				 xor	 ax , ax
1  1447	    07B5  83 C5	0C			 add	 bp , 12
1  1448	    07B8  83 EE	04			 sub	 si , 4
1  1449	    07BB  E2 E8				 loop	 incsi
1  1450
1  1451	    07BD  46				 inc	 si
1  1452	    07BE  83 ED	18			 sub	 bp , 24
1  1453	    07C1  C7 06	0551r 0001		 mov	 ok , 1
1  1454	    07C7  C6 82	0422r 01		 mov	 field[bp][si] , 1
1  1455	    07CC  46				 inc	 si
1  1456	    07CD  C6 82	0422r 01		 mov	 field[bp][si] , 1
1  1457
1  1458	    07D2			 okHor2:
1  1459
1  1460	    07D2  5D				 pop	 bp
1  1461	    07D3  5F				 pop	 di
1  1462	    07D4  5E				 pop	 si
1  1463	    07D5  5A				 pop	 dx
1  1464	    07D6  59				 pop	 cx
1  1465	    07D7  5B				 pop	 bx
1  1466	    07D8  58				 pop	 ax
1  1467
1  1468	    07D9  C3				 ret
1  1469
1  1470	    07DA			 calcCorrectHor2 endp
1  1471
1  1472	    07DA			 calcCorrect1	 proc
1  1473
1  1474	    07DA  50				 push	 ax
1  1475	    07DB  53				 push	 bx
1  1476	    07DC  51				 push	 cx
1  1477	    07DD  52				 push	 dx
1  1478	    07DE  56				 push	 si
1  1479	    07DF  57				 push	 di
1  1480	    07E0  55				 push	 bp
1  1481
1  1482	    07E1  33 C9				 xor	 cx , cx
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 27
32cc.ASM



1  1483	    07E3  33 F6				 xor	 si , si
1  1484	    07E5  33 DB				 xor	 bx , bx
1  1485	    07E7  8A 0E	0623r			 mov	 cl , x
1  1486	    07EB  8B F1				 mov	 si , cx
1  1487	    07ED  8A 0E	0624r			 mov	 cl , y
1  1488	    07F1  33 D2				 xor	 dx , dx
1  1489	    07F3  B8 000C			 mov	 ax , 12
1  1490	    07F6  F7 E1				 mul	 cx
1  1491	    07F8  8B D8				 mov	 bx , ax
1  1492	    07FA  4E				 dec	 si
1  1493	    07FB  83 EB	0C			 sub	 bx , 12
1  1494	    07FE  33 C0				 xor	 ax , ax
1  1495	    0800  B9 0003			 mov	 cx , 3
1  1496	    0803			 decsi:
1  1497	    0803  80 B8	0422r 00		 cmp	 field[bx][si] , 0
1  1498	    0808  75 20				 jne	 ok1
1  1499	    080A  46				 inc	 si
1  1500	    080B  40				 inc	 ax
1  1501	    080C  3D 0003			 cmp	 ax , 3
1  1502	    080F  7C F2				 jl	 decsi
1  1503
1  1504	    0811  33 C0				 xor	 ax , ax
1  1505	    0813  83 C3	0C			 add	 bx , 12
1  1506	    0816  83 EE	03			 sub	 si , 3
1  1507	    0819  E2 E8				 loop	 decsi
1  1508
1  1509	    081B  46				 inc	 si
1  1510	    081C  83 EB	18			 sub	 bx , 24
1  1511	    081F  C7 06	0551r 0001		 mov	 ok , 1
1  1512	    0825  C6 80	0422r 01		 mov	 field[bx][si] , 1
1  1513	    082A			 ok1:
1  1514
1  1515	    082A  5D				 pop	 bp
1  1516	    082B  5F				 pop	 di
1  1517	    082C  5E				 pop	 si
1  1518	    082D  5A				 pop	 dx
1  1519	    082E  59				 pop	 cx
1  1520	    082F  5B				 pop	 bx
1  1521	    0830  58				 pop	 ax
1  1522
1  1523	    0831  C3				 ret
1  1524	    0832			 calcCorrect1	 endp
1  1525
1  1526	    0832			 calcNShip proc
1  1527					 ;вычисляе< количество клеток зани<ае<ые корaбля<и
1  1528	    0832  50				 push	 ax
1  1529	    0833  53				 push	 bx
1  1530
1  1531	    0834  32 E4				 xor	 ah,ah
1  1532	    0836  A0 041Br			 mov	 al,ship4
1  1533	    0839  B3 04				 mov	 bl,4
1  1534	    083B  F6 E3				 mul	 bl
1  1535	    083D  A2 0417r			 mov	 Nship,al
1  1536	    0840  33 C0				 xor	 ax,ax
1  1537	    0842  A0 041Ar			 mov	 al,ship3
1  1538	    0845  B3 03				 mov	 bl,3
1  1539	    0847  F6 E3				 mul	 bl
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 28
32cc.ASM



1  1540	    0849  00 06	0417r			 add	 Nship,al
1  1541	    084D  33 C0				 xor	 ax,ax
1  1542	    084F  A0 0419r			 mov	 al,ship2
1  1543	    0852  B3 02				 mov	 bl,2
1  1544	    0854  F6 E3				 mul	 bl
1  1545	    0856  00 06	0417r			 add	 Nship,al
1  1546	    085A  33 C0				 xor	 ax,ax
1  1547	    085C  A0 0418r			 mov	 al,ship1
1  1548	    085F  00 06	0417r			 add	 Nship,al
1  1549
1  1550	    0863  59				 pop	 cx
1  1551	    0864  5B				 pop	 bx
1  1552	    0865  C3			 ret
1  1553	    0866			 calcNShip endp
1  1554
1  1555	    0866			 calcStatus	 proc
1  1556	    0866  53				 push	 bx
1  1557	    0867  56				 push	 si
1  1558
1  1559	    0868  8B 1E	0989r			 mov	 bx,statusy
1  1560	    086C  8B 36	0987r			 mov	 si,statusx
1  1561	    0870  83 EB	0C			 sub	 bx,12
1  1562	    0873  80 B8	0422r 01		 cmp	 field[bx][si],1
1  1563	    0878  75 08				 jne	 status1
1  1564	    087A  C7 06	0985r 0000		 mov	 status,0 ; не убил а только попал
1  1565	    0880  EB 05				 jmp	 finstatus
1  1566	    0882			 status1:
1  1567	    0882  80 B8	0422r 02		 cmp	 field[bx][si],2
1  1568
1  1569	    0887			 finstatus:
1  1570	    0887  5E				 pop	 si
1  1571	    0888  5B				 pop	 bx
1  1572	    0889  C3			 ret
1  1573	    088A			 calcStatus	 endp
   1574					 include write.asm
1  1575
1  1576	    088A			 wrClean proc
1  1577	    088A  50				 push	 ax
1  1578	    088B  53				 push	 bx
1  1579	    088C  55				 push	 bp
1  1580
1  1581	    088D  B4 13				 mov	 ah,13h
1  1582	    088F  B0 01				 mov	 al,01h
1  1583	    0891  32 FF				 xor	 bh,bh
1  1584	    0893  BD 0582r			 lea	 bp,clean
1  1585	    0896  CD 10				 int	 10h
1  1586
1  1587	    0898  5D				 pop	 bp
1  1588	    0899  5B				 pop	 bx
1  1589	    089A  58				 pop	 ax
1  1590
1  1591	    089B  C3			 ret
1  1592	    089C			 wrClean endp
1  1593
1  1594
1  1595	    089C			 wrErrMsg	 proc
1  1596
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 29
32cc.ASM



1  1597	    089C  50				 push	 ax
1  1598	    089D  53				 push	 bx
1  1599	    089E  51				 push	 cx
1  1600	    089F  52				 push	 dx
1  1601	    08A0  55				 push	 bp
1  1602
1  1603	    08A1  B4 13				 mov	 ah,13h
1  1604	    08A3  B0 01				 mov	 al,01h
1  1605	    08A5  32 FF				 xor	 bh,bh
1  1606	    08A7  B3 3C				 mov	 bl,00111100b
1  1607	    08A9  B9 000D			 mov	 cx,13
1  1608	    08AC  32 D2				 xor	 dl,dl
1  1609	    08AE  B6 01				 mov	 dh,1
1  1610	    08B0  BD 08BBr			 mov	 bp,offset errmsg
1  1611	    08B3  CD 10				 int	 10h
1  1612
1  1613	    08B5  5D				 pop	 bp
1  1614	    08B6  5A				 pop	 dx
1  1615	    08B7  59				 pop	 cx
1  1616	    08B8  5B				 pop	 bx
1  1617	    08B9  58				 pop	 ax
1  1618
1  1619	    08BA  C3				 ret
1  1620	    08BB  4E 6F	74 20 63 6F 72+	 errmsg	 db 'Not correct!'
   1621		  72 65	63 74 21
1  1622	    08C7			 wrErrMsg	 endp
1  1623
1  1624	    08C7			 wrWin	 proc
1  1625	    08C7  50				 push	 ax
1  1626	    08C8  53				 push	 bx
1  1627	    08C9  51				 push	 cx
1  1628	    08CA  52				 push	 dx
1  1629	    08CB  55				 push	 bp
1  1630
1  1631	    08CC  B4 13				 mov	 ah,13h
1  1632	    08CE  B0 01				 mov	 al,01h
1  1633	    08D0  32 FF				 xor	 bh,bh
1  1634	    08D2  B3 3F				 mov	 bl,00111111b
1  1635	    08D4  B9 001A			 mov	 cx,26
1  1636	    08D7  33 D2				 xor	 dx,dx
1  1637	    08D9  BD 07C9r			 lea	 bp,mWin
1  1638	    08DC  CD 10				 int	 10h
1  1639
1  1640	    08DE  5D				 pop	 bp
1  1641	    08DF  5A				 pop	 dx
1  1642	    08E0  59				 pop	 cx
1  1643	    08E1  5B				 pop	 bx
1  1644	    08E2  58				 pop	 ax
1  1645
1  1646	    08E3  C3			 ret
1  1647	    08E4			 wrWin	 endp
1  1648
1  1649	    08E4			 wrWon	 proc
1  1650	    08E4  50				 push	 ax
1  1651	    08E5  53				 push	 bx
1  1652	    08E6  51				 push	 cx
1  1653	    08E7  52				 push	 dx
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 30
32cc.ASM



1  1654	    08E8  55				 push	 bp
1  1655
1  1656	    08E9  B4 13				 mov	 ah,13h
1  1657	    08EB  B0 01				 mov	 al,01h
1  1658	    08ED  32 FF				 xor	 bh,bh
1  1659	    08EF  B3 3F				 mov	 bl,00111111b
1  1660	    08F1  B9 001A			 mov	 cx,26
1  1661	    08F4  33 D2				 xor	 dx,dx
1  1662	    08F6  BD 07E3r			 lea	 bp,mWon
1  1663	    08F9  CD 10				 int	 10h
1  1664
1  1665	    08FB  5D				 pop	 bp
1  1666	    08FC  5A				 pop	 dx
1  1667	    08FD  59				 pop	 cx
1  1668	    08FE  5B				 pop	 bx
1  1669	    08FF  58				 pop	 ax
1  1670
1  1671	    0900  C3			 ret
1  1672	    0901			 wrWon	 endp
1  1673
1  1674
1  1675	    0901			 wrNic	 proc
1  1676
1  1677	    0901  50				 push	 ax
1  1678	    0902  53				 push	 bx
1  1679	    0903  51				 push	 cx
1  1680	    0904  52				 push	 dx
1  1681	    0905  56				 push	 si
1  1682	    0906  57				 push	 di
1  1683	    0907  55				 push	 bp
1  1684
1  1685	    0908  0E				 push	 cs
1  1686	    0909  07				 pop	 es
1  1687	    090A  B4 13				 mov	 ah,13h
1  1688	    090C  B0 01				 mov	 al,01h
1  1689	    090E  32 FF				 xor	 bh,bh
1  1690	    0910  B3 1C				 mov	 bl,00011100b
1  1691	    0912  B9 000A			 mov	 cx,10
1  1692	    0915  BA 0200			 mov	 dx,200h
1  1693	    0918  BD 0553r			 lea	 bp,myName
1  1694	    091B  CD 10				 int	 10h
1  1695
1  1696	    091D  B2 25				 mov	 dl,37
1  1697	    091F  BD 055Dr			 lea	 bp,opName
1  1698	    0922  CD 10				 int	 10h
1  1699
1  1700	    0924  5D				 pop	 bp
1  1701	    0925  5F				 pop	 di
1  1702	    0926  5E				 pop	 si
1  1703	    0927  5A				 pop	 dx
1  1704	    0928  59				 pop	 cx
1  1705	    0929  5B				 pop	 bx
1  1706	    092A  58				 pop	 ax
1  1707
1  1708	    092B  C3				 ret
1  1709	    092C			 wrNic	 endp
1  1710
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 31
32cc.ASM



1  1711	    092C			 vvodNic proc
1  1712	    092C  50				 push	 ax
1  1713	    092D  53				 push	 bx
1  1714	    092E  51				 push	 cx
1  1715	    092F  52				 push	 dx
1  1716	    0930  56				 push	 si
1  1717	    0931  57				 push	 di
1  1718	    0932  55				 push	 bp
1  1719
1  1720	    0933  B4 13				 mov	 ah,13h
1  1721	    0935  B0 01				 mov	 al,01h
1  1722	    0937  B7 00				 mov	 bh,0
1  1723	    0939  B3 0C				 mov	 bl,00001100b
1  1724	    093B  B9 001D			 mov	 cx,29
1  1725	    093E  33 D2				 xor	 dx,dx
1  1726	    0940  83 3E	0567r 01		 cmp	 master,1
1  1727	    0945  74 02				 je	 wwww
1  1728	    0947  0E				 push	 cs
1  1729	    0948  07				 pop	 es
1  1730	    0949			 wwww:
1  1731	    0949  BD 0724r			 lea	 bp,msgNic
1  1732	    094C  CD 10				 int	 10h
1  1733	    094E  33 F6				 xor	 si,si
1  1734	    0950			 writeNic:
1  1735	    0950  32 E4				 xor	 ah,ah
1  1736	    0952  CD 16				 int	 16h
1  1737	    0954  80 FC	1C			 cmp	 ah,1ch
1  1738	    0957  74 1F				 je	 cancle
1  1739	    0959  50				 push	 ax
1  1740	    095A  B4 09				 mov	 ah,09h
1  1741	    095C  B9 0001			 mov	 cx,1
1  1742	    095F  CD 10				 int	 10h
1  1743	    0961  58				 pop	 ax
1  1744	    0962  88 84	0553r			 mov	 myName[si],al
1  1745	    0966  46				 inc	 si
1  1746	    0967  83 FE	0B			 cmp	 si,11
1  1747	    096A  74 0C				 je	 cancle
1  1748	    096C  B4 03				 mov	 ah,03h
1  1749	    096E  CD 10				 int	 10h
1  1750	    0970  FE C2				 inc	 dl
1  1751	    0972  B4 02				 mov	 ah,02h
1  1752	    0974  CD 10				 int	 10h
1  1753	    0976  EB D8				 jmp	 writeNic
1  1754	    0978			 cancle:
1  1755	    0978  33 D2				 xor	 dx,dx
1  1756	    097A  B9 003C			 mov	 cx,60
1  1757	    097D  B4 13				 mov	 ah,13h
1  1758	    097F  B0 01				 mov	 al,01h
1  1759	    0981  BD 0582r			 lea	 bp,clean
1  1760	    0984			 _ccl2:
1  1761	    0984  CD 10				 int	 10h
1  1762	    0986  FE C6				 inc	 dh
1  1763	    0988  80 FE	06			 cmp	 dh,6
1  1764	    098B  75 F7				 jne	 _ccl2
1  1765
1  1766	    098D  5D				 pop	 bp
1  1767	    098E  5F				 pop	 di
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 32
32cc.ASM



1  1768	    098F  5E				 pop	 si
1  1769	    0990  5A				 pop	 dx
1  1770	    0991  59				 pop	 cx
1  1771	    0992  5B				 pop	 bx
1  1772	    0993  58				 pop	 ax
1  1773
1  1774	    0994  C3				 ret
1  1775	    0995			 vvodNic endp
1  1776
1  1777	    0995			 wrInf	 proc
1  1778
1  1779	    0995  50				 push	 ax
1  1780	    0996  53				 push	 bx
1  1781	    0997  51				 push	 cx
1  1782	    0998  52				 push	 dx
1  1783	    0999  56				 push	 si
1  1784	    099A  57				 push	 di
1  1785	    099B  55				 push	 bp
1  1786
1  1787	    099C  A0 041Br			 mov	 al,ship4
1  1788	    099F  04 30				 add	 al,'0'
1  1789	    09A1  A2 09DCr			 mov	 hh+4,al
1  1790	    09A4  A0 041Ar			 mov	 al,ship3
1  1791	    09A7  04 30				 add	 al,'0'
1  1792	    09A9  A2 09E3r			 mov	 hh+11,al
1  1793	    09AC  A0 0419r			 mov	 al,ship2
1  1794	    09AF  04 30				 add	 al,'0'
1  1795	    09B1  A2 09EAr			 mov	 hh+18,al
1  1796	    09B4  A0 0418r			 mov	 al,ship1
1  1797	    09B7  3C 0A				 cmp	 al,0ah
1  1798	    09B9  75 07				 jne	 _noah
1  1799	    09BB  B0 61				 mov	 al,'a'
1  1800	    09BD  A2 09F1r			 mov	 hh+25,al
1  1801	    09C0  EB 05				 jmp	 _z
1  1802	    09C2			 _noah:
1  1803	    09C2  04 30				 add	 al,'0'
1  1804	    09C4  A2 09F1r			 mov	 hh+25,al
1  1805	    09C7			 _z:
1  1806					 ;	 mov	 cx,27
1  1807					 ;	 xor	 dx,dx
1  1808					 ;	 xor	 bh,bh
1  1809					 ;	 mov	 bl,4
1  1810					 ;	 mov	 al,01h
1  1811					 ;	 mov	 ah,13h
1  1812					 ;	 lea	 bp,hh
1  1813					 ;	 int	 10h
1  1814	    09C7  33 C0				 xor	 ax,ax
1  1815	    09C9  B4 09				 mov	 ah,09h
1  1816	    09CB  BA 09D8r			 mov	 dx,offset hh
1  1817	    09CE  CD 21				 int	 21h
1  1818
1  1819	    09D0  5D				 pop	 bp
1  1820	    09D1  5F				 pop	 di
1  1821	    09D2  5E				 pop	 si
1  1822	    09D3  5A				 pop	 dx
1  1823	    09D4  59				 pop	 cx
1  1824	    09D5  5B				 pop	 bx
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 33
32cc.ASM



1  1825	    09D6  58				 pop	 ax
1  1826
1  1827	    09D7  C3				 ret
1  1828	    09D8  34 78	3A 3D 20 20 20+	 hh	 db	 '4x:=	 3x:=	2x:=   1x:=  ',0dh,0ah,24h
   1829		  33 78	3A 3D 20 20 20+
   1830		  32 78	3A 3D 20 20 20+
   1831		  31 78	3A 3D 20 20 0D+
   1832		  0A 24
1  1833	    09F6			 wrInf	 endp
1  1834
1  1835	    09F6			 wrWait	 proc
1  1836
1  1837	    09F6  50				 push	 ax
1  1838	    09F7  53				 push	 bx
1  1839	    09F8  51				 push	 cx
1  1840	    09F9  52				 push	 dx
1  1841	    09FA  55				 push	 bp
1  1842
1  1843	    09FB  B4 13				 mov	 ah,13h
1  1844	    09FD  B0 01				 mov	 al,01h
1  1845	    09FF  8A FF				 mov	 bh,bh
1  1846	    0A01  B3 3F				 mov	 bl,00111111b
1  1847	    0A03  B9 0032			 mov	 cx,50
1  1848	    0A06  33 D2				 xor	 dx,dx
1  1849	    0A08  BD 0A13r			 lea	 bp,wtm
1  1850	    0A0B  CD 10				 int	 10h
1  1851
1  1852
1  1853	    0A0D  5D				 pop	 bp
1  1854	    0A0E  5A				 pop	 dx
1  1855	    0A0F  59				 pop	 cx
1  1856	    0A10  5B				 pop	 bx
1  1857	    0A11  58				 pop	 ax
1  1858
1  1859	    0A12  C3				 ret
1  1860	    0A13  57 61	61 69 74 20 77+	 wtm	 db	 'Waait	wait...						'
   1861		  61 69	74 2E 2E 2E 20+
   1862		  20 20	20 20 20 20 20+
   1863		  20 20	20 20 20 20 20+
   1864		  20 20	20 20 20 20 20+
   1865		  20 20	20 20 20 20 20+
   1866		  20 20	20 20 20 20 20+
   1867		  20 20	20 20 20
1  1868	    0A49			 wrWait	 endp
1  1869
1  1870	    0A49			 wrHod	 proc
1  1871
1  1872	    0A49  50				 push	 ax
1  1873	    0A4A  53				 push	 bx
1  1874	    0A4B  51				 push	 cx
1  1875	    0A4C  52				 push	 dx
1  1876	    0A4D  55				 push	 bp
1  1877	    0A4E  16				 push	 ss
1  1878	    0A4F  1E				 push	 ds
1  1879	    0A50  56				 push	 si
1  1880	    0A51  57				 push	 di
1  1881
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 34
32cc.ASM



1  1882	    0A52  B4 13				 mov	 ah,13h
1  1883	    0A54  B0 01				 mov	 al,01h
1  1884	    0A56  32 FF				 xor	 bh,bh
1  1885	    0A58  B3 3F				 mov	 bl,00111111b
1  1886	    0A5A  B9 0032			 mov	 cx,50
1  1887	    0A5D  33 D2				 xor	 dx,dx
1  1888
1  1889	    0A5F  BD 0A6Er			 lea	 bp,gggggg
1  1890	    0A62  CD 10				 int	 10h
1  1891
1  1892	    0A64  5F				 pop	 di
1  1893	    0A65  5E				 pop	 si
1  1894	    0A66  1F				 pop	 ds
1  1895	    0A67  17				 pop	 ss
1  1896	    0A68  5D				 pop	 bp
1  1897	    0A69  5A				 pop	 dx
1  1898	    0A6A  59				 pop	 cx
1  1899	    0A6B  5B				 pop	 bx
1  1900	    0A6C  58				 pop	 ax
1  1901
1  1902	    0A6D  C3			 ret
1  1903	    0A6E  59 6F	75 72 20 68 6F+	 gggggg	 db	 'Your hod  ) Cmn)					    '
   1904		  64 20	20 29 20 43 6D+
   1905		  6E 29	20 20 20 20 20+
   1906		  20 20	20 20 20 20 20+
   1907		  20 20	20 20 20 20 20+
   1908		  20 20	20 20 20 20 20+
   1909		  20 20	20 20 20 20 20+
   1910		  20 20	20 20 20 20 20+
   1911		  20 20
1  1912
1  1913	    0AA8			 wrHod	 endp
1  1914
1  1915
   1916
   1917					 ;=============Timer===========;
   1918	    0AA8			 Int_08h:
   1919	    0AA8  FA				 cli
   1920	    0AA9  50				 push	 ax
   1921
   1922	    0AAA  FF 06	0569r			 inc	 McountIn	 ;time from last receive
   1923	    0AAE  FF 06	056Dr			 inc	 McountOut	 ;time from last send
   1924	    0AB2  83 3E	056Dr 0A		 cmp	 McountOut,10
   1925	    0AB7  7C 12				 jl	 _no
   1926	    0AB9  80 3E	098Dr 01		 cmp	 cansenda,1
   1927	    0ABE  75 05				 jne	 _waitc
   1928	    0AC0  B0 AA				 mov	 al,0aah
   1929	    0AC2  E8 F7A4			 call	 Out_Chr
   1930	    0AC5			 _waitc:
   1931	    0AC5  C7 06	056Dr 0000		 mov	 McountOut,0
   1932	    0ACB			 _no:
   1933	    0ACB  83 3E	0569r 3C		 cmp	 McountIn,60
   1934	    0AD0  7E 0C				 jle	 _nofin
   1935	    0AD2  C7 06	0575r 0001		 mov	 Mflagerr,1
   1936	    0AD8  C7 06	0569r 0000		 mov	 McountIn,0
   1937	    0ADE			 _nofin:
   1938	    0ADE  58				 pop	 ax
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 35
32cc.ASM



   1939	    0ADF  EA				 db 0EAh
   1940	    0AE0  0000 0000		 Int_08h_old	 dw	 0,0
   1941
   1942					 ;=========Start==========;
   1943	    0AE4			 _1:
   1944	    0AE4  E8 0AD4			 call	 _inp
   1945
   1946	    0AE7  33 C0				 xor	 ax,ax
   1947	    0AE9  50				 push	 ax
   1948	    0AEA  1F				 pop	 ds
   1949	    0AEB  39 06	00CC			 cmp	 [ds:0CCh],ax
   1950	    0AEF  0E				 push	 cs
   1951	    0AF0  1F				 pop	 ds
   1952	    0AF1  74 24				 je	 _mouseNF
   1953
   1954	    0AF3  B8 0000			 mov	 ax,0
   1955	    0AF6  CD 33				 int	 33h
   1956	    0AF8  3D 0000			 cmp	 ax,0
   1957	    0AFB  74 1A				 je	 _mouseNF
   1958
   1959	    0AFD  B8 0001			 mov	 ax,01h
   1960	    0B00  CD 33				 int	 33h
   1961
   1962	    0B02  B8 000C			 mov	 ax,0Ch
   1963	    0B05  BA 165Dr			 mov	 dx,offset _obr1
   1964	    0B08  B9 0002			 mov	 cx,2
   1965	    0B0B  CD 33				 int	 33h
   1966	    0B0D			 _choosep:
   1967	    0B0D  B4 00				 mov	 ah,00h
   1968	    0B0F  CD 16				 int	 16h
   1969	    0B11  3C 1B				 cmp	 al,1Bh
   1970	    0B13  75 F8				 jnz	 _choosep
   1971	    0B15  EB 08				 jmp	 _vvNick
   1972	    0B17			 _mouseNF:
   1973	    0B17  BA 0B8Br			 mov	 dx,offset mouseNotF
   1974	    0B1A  B4 09				 mov	 ah,09h
   1975	    0B1C  CD 21				 int	 21h
   1976	    0B1E  C3				 ret
   1977	    0B1F			 _vvNick:
   1978	    0B1F  B8 0002			 mov	 ax,2
   1979	    0B22  CD 33				 int	 33h
   1980	    0B24  33 C9				 xor	 cx,cx
   1981	    0B26  B8 000C			 mov	 ax,0Ch
   1982	    0B29  CD 33				 int	 33h
   1983	    0B2B  B4 00				 mov	 ah,0
   1984	    0B2D  B0 03				 mov	 al,3h
   1985	    0B2F  CD 10				 int	 10h
   1986
   1987	    0B31  A0 0BA2r			 mov	 al,masp[0]
   1988	    0B34  A2 0421r			 mov	 sizeField,al
   1989	    0B37  A0 0BA3r			 mov	 al,masp[1]
   1990	    0B3A  A2 041Br			 mov	 ship4,al
   1991	    0B3D  A0 0BA4r			 mov	 al,masp[2]
   1992	    0B40  A2 041Ar			 mov	 ship3,al
   1993	    0B43  A0 0BA5r			 mov	 al,masp[3]
   1994	    0B46  A2 0419r			 mov	 ship2,al
   1995	    0B49  A0 0BA6r			 mov	 al,masp[4]
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 36
32cc.ASM



   1996	    0B4C  A2 0418r			 mov	 ship1,al
   1997
   1998	    0B4F  E8 FDDA			 call	 vvodNic
   1999	    0B52  E8 0A3C			 call	 _intset
   2000	    0B55  E8 0A56			 call	 _vset
   2001	    0B58  E8 0A20			 call	 _ms
   2002	    0B5B  E8 F5F0			 call	 Ser_Ini
   2003
   2004					 ;############Masster
   2005					 ;	 xor	 ax,ax
   2006					 ;	 mov	 ah,09h
   2007					 ;	 mov	 dx,offset str11
   2008					 ;	 int	 21h
   2009	    0B5E			 _State0:				 ;wait for answer 01 on	owr aa
   2010	    0B5E  E8 F72F			 call	 Get_Chr
   2011	    0B61  72 FB				 jc	 _State0
   2012	    0B63  3C 01				 cmp	 al,01h
   2013	    0B65  75 F7				 jne	 _State0
   2014	    0B67  C7 06	0569r 0000		 mov McountIn,0
   2015	    0B6D  B0 A1				 mov	 al,0a1h
   2016	    0B6F  E8 F6F7			 call	 Out_Chr
   2017
   2018	    0B72			 _State01:
   2019	    0B72  E8 F71B			 call	 Get_Chr
   2020	    0B75  72 FB				 jc	 _State01
   2021	    0B77  3C 01				 cmp	 al,01h
   2022	    0B79  75 08				 jne	 _State01_1a
   2023	    0B7B  C7 06	0569r 0000		 mov	 McountIn,0
   2024	    0B81  EB EF				 jmp	 _State01
   2025	    0B83			 _State01_1a:
   2026	    0B83  3C 1A				 cmp	 al,1ah
   2027	    0B85  74 02				 je	 State1
   2028	    0B87  EB E9				 jmp _State01
   2029	    0B89			 State1:
   2030	    0B89  C7 06	0569r 0000		 mov	 McountIn,0
   2031
   2032	    0B8F  C6 06	098Dr 00		 mov	 cansenda,0
   2033	    0B94  B0 B1				 mov	 al,0b1h
   2034	    0B96  E8 F6D0			 call	 Out_Chr
   2035	    0B99  B0 0A				 mov	 al,10
   2036	    0B9B  E8 F6CB			 call	 Out_Chr
   2037	    0B9E  33 F6				 xor	 si,si
   2038	    0BA0			 _State11:
   2039	    0BA0  8A 84	0553r			 mov	 al,myName[si]
   2040	    0BA4  E8 F6C2			 call	 Out_Chr
   2041	    0BA7  46				 inc	 si
   2042	    0BA8  83 FE	0A			 cmp	 si,10
   2043	    0BAB  75 F3				 jne	 _State11
   2044	    0BAD  C6 06	098Dr 01		 mov	 cansenda,1
   2045
   2046	    0BB2			 _State1:
   2047	    0BB2  80 3E	0990r 02		 cmp	 state,2
   2048	    0BB7  7C 47				 jl	 _State2and1
   2049	    0BB9  83 3E	0867r 01		 cmp	 okFin,1
   2050	    0BBE  75 08				 jne	 _State21
   2051	    0BC0  B0 A6				 mov	 al,0a6h
   2052	    0BC2  E8 F6A4			 call	 Out_Chr
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 37
32cc.ASM



   2053	    0BC5  E9 07D2			 jmp	 Condition6
   2054	    0BC8			 _State21:
   2055	    0BC8  83 3E	0865r 01		 cmp	 okGB,1
   2056	    0BCD  75 08				 jne	 _State22
   2057	    0BCF  B0 A7				 mov	 al,0a7h
   2058	    0BD1  E8 F695			 call	 Out_Chr
   2059	    0BD4  E9 0806			 jmp	 Condition7
   2060	    0BD7			 _State22:
   2061	    0BD7  83 3E	0869r 01		 cmp	 okRS,1
   2062	    0BDC  75 08				 jne	 _State23
   2063	    0BDE  B0 A5				 mov	 al,0a5h
   2064	    0BE0  E8 F686			 call	 Out_Chr
   2065	    0BE3  E9 0720			 jmp	 Condition5
   2066	    0BE6			 _State23:
   2067	    0BE6  80 3E	0990r 03		 cmp	 state,3
   2068	    0BEB  74 13				 je	 _State2and1
   2069	    0BED  83 3E	086Br 01		 cmp	 okRD,1
   2070	    0BF2  75 0C				 jne	 _State2and1
   2071	    0BF4  B0 A3				 mov	 al,0a3h
   2072	    0BF6  E8 F670			 call	 Out_Chr
   2073	    0BF9  C6 06	0990r 03		 mov	 state,3;;wait for 3a and go to	the state 3
   2074					 ;	 xor	 ax,ax
   2075					 ;	 mov	 ah,09h
   2076					 ;	 mov	 dx,offset str011
   2077					 ;	 int	 21h
   2078
   2079	    0BFE  EB B2				 jmp	 _State1
   2080						 ;;wait	for 3a and go to the state 3
   2081
   2082
   2083	    0C00			 _State2and1:
   2084	    0C00  E8 F68D			 call	 Get_Chr
   2085	    0C03  72 AD				 jc	 _State1
   2086
   2087	    0C05  3C 01				 cmp	 al,01h
   2088	    0C07  75 08				 jne	 _State2_3a
   2089	    0C09  C7 06	0569r 0000		 mov	 McountIn,0
   2090	    0C0F  EB A1				 jmp	 _State1
   2091	    0C11			 _State2_3a:
   2092	    0C11  80 3E	0990r 03		 cmp	 state,3
   2093	    0C16  75 18				 jne	 _State2_a4
   2094	    0C18  80 3E	0991r 01		 cmp	 wstate4,1
   2095	    0C1D  74 11				 je	 _State2_a4
   2096	    0C1F  3C 3A				 cmp	 al,03ah
   2097	    0C21  75 0D				 jne	 _State2_a4
   2098	    0C23  C7 06	0569r 0000		 mov	 McountIn,0
   2099					 ;	 xor	 ax,ax
   2100					 ;	 mov	 ah,09h
   2101					 ;	 mov	 dx,offset str010
   2102					 ;	 int	 21h
   2103	    0C29  C6 06	0991r 01		 mov	 wstate4,1
   2104						 ;wait a4 from slave
   2105	    0C2E  EB 82				 jmp	 _State1
   2106	    0C30			 _State2_a4:
   2107	    0C30  80 3E	0991r 01		 cmp	 wstate4,1
   2108	    0C35  75 12				 jne	 _State1_a6
   2109	    0C37  3C A4				 cmp	 al,0a4h
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 38
32cc.ASM



   2110	    0C39  75 0E				 jne	 _State1_a6
   2111	    0C3B  C7 06	0569r 0000		 mov	 McountIn,0
   2112	    0C41  B0 4A				 mov	 al,04ah
   2113	    0C43  E8 F623			 call	 Out_Chr
   2114	    0C46  E9 017C			 jmp	 State4
   2115	    0C49			 _State1_a6:
   2116	    0C49  3C A6				 cmp	 al,0a6h
   2117	    0C4B  75 0E				 jne	 _State1_a7
   2118	    0C4D  C7 06	0569r 0000		 mov	 MCountIn,0
   2119	    0C53  B0 6A				 mov	 al,06ah
   2120	    0C55  E8 F611			 call	 Out_Chr
   2121	    0C58  E9 073F			 jmp	 Condition6
   2122	    0C5B			 _State1_a7:
   2123	    0C5B  3C A7				 cmp	 al,0a7h
   2124	    0C5D  75 0E				 jne	 _State1_a8
   2125	    0C5F  C7 06	0569r 0000		 mov	 MCountIn,0
   2126	    0C65  B0 7A				 mov	 al,07ah
   2127	    0C67  E8 F5FF			 call	 Out_Chr
   2128	    0C6A  E9 0770			 jmp	 Condition7
   2129	    0C6D			 _State1_a8:
   2130	    0C6D  3C A8				 cmp	 al,0a8h
   2131	    0C6F  75 0E				 jne	 _State1_2a
   2132	    0C71  C7 06	0569r 0000		 mov	 MCountIn,0
   2133	    0C77  B0 8A				 mov	 al,08ah
   2134	    0C79  E8 F5ED			 call	 Out_Chr
   2135	    0C7C  E9 0816			 jmp	 Condition8
   2136	    0C7F			 _State1_2a:
   2137	    0C7F  80 3E	0990r 00		 cmp	 state,0
   2138	    0C84  75 07				 jne	 _State1_b1
   2139	    0C86  3C 2A				 cmp	 al,02ah
   2140	    0C88  75 03				 jne	 _State1_b1
   2141	    0C8A  E9 010B			 jmp	 _State2
   2142	    0C8D			 _State1_b1:
   2143	    0C8D  3C B1				 cmp	 al,0b1h
   2144	    0C8F  75 4A				 jne	 _State12
   2145	    0C91  C7 06	0569r 0000		 mov	 McountIn,0
   2146	    0C97  C6 06	098Dr 00		 mov	 cansenda,0
   2147	    0C9C			 _State1_b11:
   2148	    0C9C  E8 F5F1			 call	 Get_Chr
   2149	    0C9F  72 FB				 jc	 _State1_b11
   2150	    0CA1  C7 06	0569r 0000		 mov	 McountIn,0
   2151	    0CA7  A2 098Fr			 mov	 lgth,al
   2152	    0CAA  33 F6				 xor	 si,si
   2153	    0CAC			 _State1_b12:
   2154	    0CAC  E8 F5E1			 call	 Get_Chr
   2155	    0CAF  72 FB				 jc	 _State1_b12
   2156	    0CB1  88 84	055Dr			 mov	 opName[si],al
   2157	    0CB5  C7 06	0569r 0000		 mov	 McountIn,0
   2158	    0CBB  46				 inc	 si
   2159	    0CBC  83 FE	0A			 cmp	 si,10
   2160	    0CBF  7C 02				 jl	 _State1_b13
   2161	    0CC1  EB 08				 jmp	 _State1_b14
   2162	    0CC3			 _State1_b13:
   2163	    0CC3  8B D6				 mov	 dx,si
   2164	    0CC5  3A 16	098Fr			 cmp	 dl,lgth
   2165	    0CC9  7C E1				 jl	 _State1_b12
   2166	    0CCB			 _State1_b14:
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 39
32cc.ASM



   2167	    0CCB  E8 FC33			 call	 wrNic
   2168	    0CCE  B0 1B				 mov	 al,01bh
   2169	    0CD0  E8 F596			 call	 Out_Chr
   2170	    0CD3  C6 06	098Dr 01		 mov	 cansenda,1
   2171	    0CD8  E9 FED7			 jmp	 _State1
   2172	    0CDB			 _State12:
   2173	    0CDB  3C 1B				 cmp	 al,01bh
   2174	    0CDD  74 69				 je	 _State1_b2
   2175	    0CDF			 _State1_2b:
   2176	    0CDF  80 3E	098Er 00		 cmp	 b2,0
   2177	    0CE4  0F 84	FECA			 je	 _State1
   2178	    0CE8  80 3E	098Er 01		 cmp	 b2,1
   2179	    0CED  0F 85	FEC1			 jne	 _State1
   2180	    0CF1  80 3E	0990r 00		 cmp	 state,0
   2181	    0CF6  0F 85	FEB8			 jne	 _State1
   2182	    0CFA  3C 2B				 cmp	 al,02bh
   2183	    0CFC  0F 85	FEB2			 jne	 _State1
   2184
   2185					 ;	 xor	 ax,ax
   2186					 ;	 mov	 ah,09h
   2187					 ;	 mov	 dx,offset str1
   2188					 ;	 int	 21h
   2189	    0D00  C6 06	098Dr 00		 mov	 cansenda,0
   2190	    0D05  C7 06	0569r 0000		 mov	 McountIn,0
   2191	    0D0B  33 DB				 xor	 bx,bx
   2192	    0D0D			 _State1_2b1:
   2193	    0D0D  E8 F580			 call	 Get_Chr
   2194	    0D10  72 FB				 jc	 _State1_2b1
   2195	    0D12  C7 06	0569r 0000		 mov	 McountIn,0
   2196	    0D18  88 87	0542r			 mov	 allPar[bx],al
   2197	    0D1C  43				 inc	 bx
   2198	    0D1D  83 FB	05			 cmp	 bx,5
   2199	    0D20  75 EB				 jne	 _State1_2b1
   2200	    0D22  C6 06	098Dr 01		 mov	 cansenda,1
   2201	    0D27  33 F6				 xor	 si,si
   2202	    0D29			 _comp:
   2203	    0D29  8A 84	0542r			 mov	 al,allPar[si]
   2204	    0D2D  38 84	0BA2r			 cmp	 masp[si],al
   2205	    0D31  0F 85	0760			 jne	 Condition8
   2206	    0D35  46				 inc	 si
   2207	    0D36  83 FE	05			 cmp	 si,5
   2208	    0D39  75 EE				 jne	 _comp
   2209	    0D3B  B0 A2				 mov	 al,0a2h
   2210	    0D3D  E8 F529			 call	 Out_Chr
   2211
   2212					 ;		 xor	 ax,ax
   2213					 ;	 mov	 ah,09h
   2214					 ;	 mov	 dx,offset str22
   2215					 ;	 int	 21h
   2216
   2217	    0D40  C6 06	098Er 02		 mov	 b2,2
   2218	    0D45  E9 FE6A			 jmp	 _State1
   2219	    0D48			 _State1_b2:
   2220	    0D48  C7 06	0569r 0000		 mov	 McountIn,0
   2221	    0D4E  80 3E	098Er 00		 cmp	 b2,0
   2222	    0D53  0F 85	FE5B			 jne	 _State1
   2223	    0D57  C6 06	098Er 01		 mov	 b2,1
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 40
32cc.ASM



   2224	    0D5C  C6 06	098Dr 00		 mov	 cansenda,0
   2225	    0D61  B0 B2				 mov	 al,0b2h
   2226	    0D63  E8 F503			 call	 Out_Chr
   2227	    0D66  A0 0421r			 mov	 al,sizeField
   2228	    0D69  E8 F4FD			 call	 Out_Chr
   2229	    0D6C  A0 041Br			 mov	 al,ship4
   2230	    0D6F  A2 0420r			 mov	 hship4,al
   2231	    0D72  E8 F4F4			 call	 Out_Chr
   2232	    0D75  A0 041Ar			 mov	 al,ship3
   2233	    0D78  A2 041Fr			 mov	 hship3,al
   2234	    0D7B  E8 F4EB			 call	 Out_Chr
   2235	    0D7E  A0 0419r			 mov	 al,ship2
   2236	    0D81  A2 041Er			 mov	 hship2,al
   2237	    0D84  E8 F4E2			 call	 Out_Chr
   2238	    0D87  A0 0418r			 mov	 al,ship1
   2239	    0D8A  A2 041Dr			 mov	 hship1,al
   2240	    0D8D  E8 F4D9			 call	 Out_Chr
   2241	    0D90  C6 06	098Dr 01		 mov	 cansenda,1
   2242
   2243					 ;	 xor	 ax,ax
   2244					 ;	 mov	 ah,09h
   2245					 ;	 mov	 dx,offset str0
   2246					 ;	 int	 21h
   2247	    0D95  E9 FE1A			 jmp	 _State1
   2248
   2249	    0D98			 _State2:
   2250
   2251	    0D98  C7 06	0569r 0000		 mov	 McountIn,0
   2252	    0D9E  E8 F516			 call	 drawField
   2253	    0DA1  E8 FBF1			 call	 wrInf
   2254	    0DA4  E8 FA8B			 call	 calcNShip
   2255
   2256	    0DA7  A0 0417r			 mov	 al,Nship
   2257	    0DAA  A2 041Cr			 mov	 hNship,al
   2258
   2259	    0DAD  B8 0001			 mov	 ax,01h
   2260	    0DB0  CD 33				 int	 33h
   2261	    0DB2  B8 000C			 mov	 ax,000Ch
   2262	    0DB5  B9 0002			 mov	 cx,02h
   2263	    0DB8  BA 1719r			 mov	 dx,offset ObrRasstS
   2264	    0DBB  CD 33				 int 33h
   2265
   2266					 ;hang mouse ,state2,wait pushing button RD
   2267	    0DBD  C6 06	0990r 02		 mov	 state,2
   2268	    0DC2  E9 FDED			 jmp	 _State1
   2269
   2270
   2271					 ;	 jmp	 _State1
   2272					 ;###############++Game++############;
   2273	    0DC5			 State4:
   2274	    0DC5  B8 0002			 mov	 ax,02h
   2275	    0DC8  CD 33				 int 33h
   2276
   2277	    0DCA  B8 000C			 mov	 ax,000Ch
   2278	    0DCD  B9 0000			 mov	 cx,0
   2279	    0DD0  CD 33				 int 33h
   2280
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 41
32cc.ASM



   2281	    0DD2  B2 46				 mov	 dl,70
   2282	    0DD4  B6 05				 mov	 dh,5
   2283	    0DD6  B9 000A			 mov	 cx,10
   2284	    0DD9  C6 06	096Dr 00		 mov	 pp,0
   2285	    0DDE			 clean4:
   2286	    0DDE  B9 000A			 mov	 cx,10
   2287	    0DE1  80 C6	02			 add	 dh,2
   2288	    0DE4  B2 46				 mov	 dl,70
   2289	    0DE6  E8 FAA1			 call	 wrClean
   2290	    0DE9  80 06	096Dr 01		 add	 pp,1
   2291	    0DEE  80 3E	096Dr 09		 cmp	 pp,9
   2292	    0DF3  7C E9				 jl	 clean4
   2293
   2294	    0DF5  33 C0				 xor	 ax, ax
   2295	    0DF7  CD 33				 int	 33h
   2296
   2297	    0DF9  B8 000C			 mov	 ax,000Ch
   2298	    0DFC  B9 0002			 mov	 cx,0002h
   2299	    0DFF  BA 1B1Er			 mov	 dx,offset Game
   2300	    0E02  CD 33				 int 33h
   2301
   2302	    0E04  B8 0001			 mov	 ax,01h
   2303	    0E07  CD 33				 int	 33h
   2304
   2305	    0E09  E8 FC3D			 call	 wrHod
   2306
   2307	    0E0C  C7 06	0983r 0001		 mov	 myHod,1
   2308
   2309	    0E12			 MCondition41:
   2310	    0E12  83 3E	098Br 01		 cmp	 fyes,1
   2311	    0E17  0F 85	02A0			 jne	 Mnext40
   2312
   2313	    0E1B  E8 F6EE			 call	 calcAttackShip
   2314
   2315	    0E1E  52				 push	 dx
   2316	    0E1F  B2 21				 mov	 dl, '!'
   2317	    0E21  E8 0D7E			 call	 print_dl
   2318	    0E24  5A				 pop	 dx
   2319
   2320	    0E25  B8 0002			 mov	 ax,02h
   2321	    0E28  CD 33				 int	 33h
   2322	    0E2A  C6 06	098Dr 00		 mov	 cansenda,0
   2323
   2324	    0E2F  C6 06	0416r 01		 mov	 hidec,1
   2325
   2326	    0E34  B0 C0				 mov	 al,0c0h
   2327	    0E36  E8 F430			 call	 Out_Chr
   2328	    0E39  A0 0623r			 mov	 al,x
   2329	    0E3C  E8 F42A			 call	 Out_Chr
   2330	    0E3F  A0 0624r			 mov	 al,y
   2331	    0E42  E8 F424			 call	 Out_Chr
   2332	    0E45  C6 06	098Dr 01		 mov	 cansenda,1
   2333	    0E4A			 Mansw:
   2334	    0E4A  E8 F443			 call	 Get_Chr
   2335	    0E4D  72 FB				 jc	 Mansw
   2336	    0E4F  3C 01				 cmp	 al,1
   2337	    0E51  75 08				 jne	 Mansww
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 42
32cc.ASM



   2338	    0E53  C7 06	0569r 0000		 mov	 McountIn,0
   2339	    0E59  EB EF				 jmp	 Mansw
   2340	    0E5B			 Mansww:
   2341	    0E5B  C7 06	0569r 0000		 mov	 McountIn,0
   2342	    0E61  3C 0C				 cmp	 al,00ch
   2343	    0E63  75 37				 jne	 Mansw1
   2344	    0E65  C7 06	0983r 0000		 mov	 myHod,0
   2345	    0E6B  C7 06	098Br 0000		 mov	 fyes,0
   2346	    0E71  E8 FB82			 call	 wrWait
   2347	    0E74  32 E4				 xor	 ah,ah
   2348	    0E76  A0 0623r			 mov	 al,x
   2349	    0E79  8B F0				 mov	 si,ax
   2350	    0E7B  33 C0				 xor	 ax,ax
   2351	    0E7D  32 FF				 xor	 bh,bh
   2352	    0E7F  33 D2				 xor	 dx,dx
   2353	    0E81  8A 1E	0624r			 mov	 bl,y
   2354	    0E85  B8 000C			 mov	 ax,12
   2355	    0E88  F7 E3				 mul	 bx
   2356	    0E8A  C6 80	04B2r 02		 mov	 fieldOp[bx][si],2
   2357	    0E8F  E8 F5AC			 call	 drawMissOpponent
   2358
   2359	    0E92  52				 push	 dx
   2360	    0E93  B2 2D				 mov	 dl, '-'
   2361	    0E95  E8 0D0A			 call	 print_dl
   2362	    0E98  5A				 pop	 dx
   2363
   2364	    0E99  E9 021F			 jmp	 Mnext40
   2365	    0E9C			 Mansw1:
   2366					 ;	 cmp	 sss,03ch
   2367	    0E9C  3C 3C				 cmp	 al,03ch
   2368	    0E9E  75 19				 jne	 Mansw2
   2369	    0EA0  C7 06	0983r 0000		 mov	 myHod,0
   2370	    0EA6  C7 06	098Br 0000		 mov	 fyes,0
   2371	    0EAC  E8 FB47			 call	 wrWait
   2372
   2373	    0EAF  52				 push	 dx
   2374	    0EB0  B2 2F				 mov	 dl, '/'
   2375	    0EB2  E8 0CED			 call	 print_dl
   2376	    0EB5  5A				 pop	 dx
   2377
   2378	    0EB6  E9 0202			 jmp	 Mnext40
   2379	    0EB9			 Mansw2:
   2380	    0EB9  3C 1C				 cmp	 al,01ch
   2381	    0EBB  0F 85	009F			 jne	 Mansw3
   2382	    0EBF  E8 F529			 call	 drawKillOpponent
   2383
   2384	    0EC2  52				 push	 dx
   2385	    0EC3  B2 2B				 mov	 dl, '+'
   2386	    0EC5  E8 0CDA			 call	 print_dl
   2387	    0EC8  5A				 pop	 dx
   2388
   2389	    0EC9  80 2E	0417r 01		 sub	 Nship,1
   2390	    0ECE  32 E4				 xor	 ah,ah
   2391	    0ED0  A0 0623r			 mov	 al,x
   2392	    0ED3  8B F0				 mov	 si,ax
   2393	    0ED5  33 C0				 xor	 ax,ax
   2394	    0ED7  32 FF				 xor	 bh,bh
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 43
32cc.ASM



   2395	    0ED9  33 D2				 xor	 dx,dx
   2396	    0EDB  8A 1E	0624r			 mov	 bl,y
   2397	    0EDF  B8 000C			 mov	 ax,12
   2398	    0EE2  F7 E3				 mul	 bx
   2399	    0EE4  8B D8				 mov	 bx,ax
   2400	    0EE6  C6 80	04B2r 01		 mov	 fieldOp[bx][si],1
   2401	    0EEB  83 EB	0C			 sub	 bx,12
   2402	    0EEE  83 EE	01			 sub	 si,1
   2403	    0EF1  80 2E	0623r 01		 sub	 x,1
   2404	    0EF6  80 2E	0624r 01		 sub	 y,1
   2405	    0EFB  80 B8	04B2r 05		 cmp	 fieldOp[bx][si],5
   2406	    0F00  74 08				 je	 Mansw21
   2407	    0F02  C6 80	04B2r 02		 mov	 fieldOp[bx][si],2
   2408	    0F07  E8 F534			 call	 drawMissOpponent
   2409	    0F0A			 Mansw21:
   2410	    0F0A  83 C6	02			 add	 si,2
   2411	    0F0D  80 06	0623r 02		 add	 x,2
   2412	    0F12  80 B8	04B2r 05		 cmp	 fieldOp[bx][si],5
   2413	    0F17  74 08				 je	 Mansw23
   2414	    0F19  C6 80	04B2r 02		 mov	 fieldOp[bx][si],2
   2415	    0F1E  E8 F51D			 call	 drawMissOpponent
   2416	    0F21			 Mansw23:
   2417	    0F21  83 C3	18			 add	 bx,24
   2418	    0F24  80 06	0624r 02		 add	 y,2
   2419	    0F29  80 B8	04B2r 05		 cmp	 fieldOp[bx][si],5
   2420	    0F2E  74 08				 je	 Mansw24
   2421	    0F30  C6 80	04B2r 02		 mov	 fieldOp[bx][si],2
   2422	    0F35  E8 F506			 call	 drawMissOpponent
   2423	    0F38			 Mansw24:
   2424	    0F38  83 EE	02			 sub	 si,2
   2425	    0F3B  80 2E	0623r 02		 sub	 x,2
   2426	    0F40  80 B8	04B2r 05		 cmp	 fieldOp[bx][si],5
   2427	    0F45  74 08				 je	 hhh
   2428	    0F47  C6 80	04B2r 02		 mov	 fieldOp[bx][si],2
   2429	    0F4C  E8 F4EF			 call	 drawMissOpponent
   2430	    0F4F			 hhh:
   2431	    0F4F  C7 06	0983r 0001		 mov	 myHod,1
   2432	    0F55  C7 06	098Br 0000		 mov	 fyes,0
   2433	    0F5B  E9 015D			 jmp	 Mnext40
   2434	    0F5E			 Mansw3:
   2435	    0F5E  3C 2C				 cmp	 al,02ch
   2436	    0F60  0F 85	FEE6			 jne	 Mansw	 ;хотя по идее это ошибка
   2437	    0F64  E8 F484			 call	 drawKillOpponent
   2438
   2439	    0F67  52				 push	 dx
   2440	    0F68  B2 2A				 mov	 dl, '*'
   2441	    0F6A  E8 0C35			 call	 print_dl
   2442	    0F6D  5A				 pop	 dx
   2443
   2444	    0F6E  80 2E	0417r 01		 sub	 Nship,1
   2445	    0F73  33 C0				 xor	 ax,ax
   2446	    0F75  A0 0623r			 mov	 al,x
   2447	    0F78  8B F0				 mov	 si,ax
   2448	    0F7A  33 C0				 xor	 ax,ax
   2449	    0F7C  33 DB				 xor	 bx,bx
   2450	    0F7E  33 D2				 xor	 dx,dx
   2451	    0F80  8A 1E	0624r			 mov	 bl,y
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 44
32cc.ASM



   2452	    0F84  B8 000C			 mov	 ax,12
   2453	    0F87  F7 E3				 mul	 bx
   2454	    0F89  8B D8				 mov	 bx,ax
   2455	    0F8B  C6 80	04B2r 01		 mov	 fieldOp[bx][si],1
   2456	    0F90  83 EB	0C			 sub	 bx,12
   2457	    0F93  83 EE	01			 sub	 si,1
   2458	    0F96  80 2E	0623r 01		 sub	 x,1
   2459	    0F9B  80 2E	0624r 01		 sub	 y,1
   2460	    0FA0  80 B8	04B2r 05		 cmp	 fieldOp[bx][si],5
   2461	    0FA5  74 08				 je	 Mansw31
   2462	    0FA7  C6 80	04B2r 02		 mov	 fieldOp[bx][si],2
   2463	    0FAC  E8 F48F			 call	 drawMissOpponent
   2464	    0FAF			 Mansw31:
   2465	    0FAF  83 C6	02			 add	 si,2
   2466	    0FB2  80 06	0623r 02		 add	 x,2
   2467	    0FB7  80 B8	04B2r 05		 cmp	 fieldOp[bx][si],5
   2468	    0FBC  74 08				 je	 Mansw33
   2469	    0FBE  C6 80	04B2r 02		 mov	 fieldOp[bx][si],2
   2470	    0FC3  E8 F478			 call	 drawMissOpponent
   2471	    0FC6			 Mansw33:
   2472	    0FC6  83 C3	18			 add	 bx,24
   2473	    0FC9  80 06	0624r 02		 add	 y , 2
   2474	    0FCE  80 B8	04B2r 05		 cmp	 fieldOp[bx][si] , 5
   2475	    0FD3  74 08				 je	 Mansw34
   2476	    0FD5  C6 80	04B2r 02		 mov	 fieldOp[bx][si] , 2
   2477	    0FDA  E8 F461			 call	 drawMissOpponent
   2478	    0FDD			 Mansw34:
   2479	    0FDD  83 EE	02			 sub	 si , 2
   2480	    0FE0  80 2E	0623r 02		 sub	 x , 2
   2481	    0FE5  80 B8	04B2r 05		 cmp	 fieldOp[bx][si] , 5
   2482	    0FEA  74 08				 je	 Mansw35
   2483	    0FEC  C6 80	04B2r 02		 mov	 fieldOp[bx][si] , 2
   2484	    0FF1  E8 F44A			 call	 drawMissOpponent
   2485	    0FF4			 Mansw35:
   2486	    0FF4  83 C6	01			 add	 si , 1
   2487	    0FF7  80 06	0623r 01		 add	 x , 1
   2488	    0FFC  83 EB	0C			 sub	 bx , 12
   2489	    0FFF  80 2E	0624r 01		 sub	 y , 1
   2490	    1004  8B C6				 mov	 ax , si
   2491	    1006  A2 096Fr			 mov	 xxx , al
   2492	    1009  A0 0624r			 mov	 al , y
   2493	    100C  A2 0970r			 mov	 yyy , al
   2494	    100F			 Mansw36:
   2495	    100F  83 EB	0C			 sub	 bx , 12
   2496	    1012  80 2E	0624r 01		 sub	 y , 1
   2497	    1017  80 B8	04B2r 01		 cmp	 fieldOp[bx][si] , 1
   2498	    101C  74 F1				 je	 Mansw36
   2499	    101E  80 B8	04B2r 00		 cmp	 fieldOp[bx][si] , 0
   2500	    1023  75 08				 jne	 Mansw37
   2501	    1025  C6 80	04B2r 02		 mov	 fieldOp[bx][si] , 2
   2502	    102A  E8 F411			 call	 drawMissOpponent
   2503	    102D			 Mansw37:
   2504	    102D  33 C0				 xor	 ax , ax
   2505	    102F  A0 0970r			 mov	 al , yyy
   2506	    1032  A2 0624r			 mov	 y , al
   2507	    1035  BB 000C			 mov	 bx , 12
   2508	    1038  F7 E3				 mul	 bx
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 45
32cc.ASM



   2509	    103A  8B D8				 mov	 bx , ax
   2510	    103C			 Mansw371:
   2511	    103C  83 C3	0C			 add	 bx , 12
   2512	    103F  80 06	0624r 01		 add	 y , 1
   2513	    1044  80 B8	04B2r 01		 cmp	 fieldOp[bx][si] , 1
   2514	    1049  74 F1				 je	 Mansw371
   2515	    104B  80 B8	04B2r 00		 cmp	 fieldOp[bx][si] , 0
   2516	    1050  75 08				 jne	 Mansw38
   2517	    1052  C6 80	04B2r 02		 mov	 fieldOp[bx][si] , 2
   2518	    1057  E8 F3E4			 call	 drawMissOpponent
   2519	    105A			 Mansw38:
   2520	    105A  33 C0				 xor	 ax , ax
   2521	    105C  A0 0970r			 mov	 al , yyy
   2522	    105F  A2 0624r			 mov	 y , al
   2523	    1062  BB 000C			 mov	 bx , 12
   2524	    1065  F7 E3				 mul	 bx
   2525	    1067  8B D8				 mov	 bx , ax
   2526	    1069			 Mansw381:
   2527	    1069  83 C6	01			 add	 si , 1
   2528	    106C  80 06	0623r 01		 add	 x , 1
   2529	    1071  80 B8	04B2r 01		 cmp	 fieldOp[bx][si] , 1
   2530	    1076  74 F1				 je	 Mansw381
   2531	    1078  80 B8	04B2r 00		 cmp	 fieldOp[bx][si] , 0
   2532	    107D  75 08				 jne	 Mansw39
   2533	    107F  C6 80	04B2r 02		 mov	 fieldOp[bx][si] , 2
   2534	    1084  E8 F3B7			 call	 drawMissOpponent
   2535	    1087			 Mansw39:
   2536	    1087  33 C0				 xor	 ax , ax
   2537	    1089  A0 096Fr			 mov	 al , xxx
   2538	    108C  A2 0623r			 mov	 x , al
   2539	    108F  8B F0				 mov	 si , ax
   2540	    1091			 Mansw391:
   2541	    1091  83 EE	01			 sub	 si , 1
   2542	    1094  80 2E	0623r 01		 sub	 x , 1
   2543	    1099  80 B8	04B2r 01		 cmp	 fieldOp[bx][si] , 1
   2544	    109E  74 F1				 je	 Mansw391
   2545	    10A0  80 B8	04B2r 00		 cmp	 fieldOp[bx][si] , 0
   2546	    10A5  75 08				 jne	 hhhh
   2547	    10A7  C6 80	04B2r 02		 mov	 fieldOp[bx][si] , 2
   2548	    10AC  E8 F38F			 call	 drawMissOpponent
   2549	    10AF			 hhhh:
   2550	    10AF  C7 06	0983r 0001		 mov	 myHod,1
   2551	    10B5  C7 06	098Br 0000		 mov	 fyes,0
   2552	    10BB			 Mnext40:
   2553	    10BB  80 3E	0416r 01		 cmp	 hidec,1
   2554	    10C0  75 11				 jne	 Mnext40w
   2555	    10C2  B8 0001			 mov	 ax,01h
   2556	    10C5  CD 33				 int	 33h
   2557
   2558	    10C7  52				 push	 dx
   2559	    10C8  B2 7A				 mov	 dl, 'z'
   2560	    10CA  E8 0AD5			 call	 print_dl
   2561	    10CD  5A				 pop	 dx
   2562
   2563	    10CE  C6 06	0416r 00		 mov	 hidec,0
   2564	    10D3			 Mnext40w:
   2565	    10D3  83 3E	0867r 01		 cmp	 okFin,1
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 46
32cc.ASM



   2566	    10D8  75 08				 jne	 Mnext41
   2567	    10DA  B0 A6				 mov	 al,0A6h
   2568	    10DC  E8 F18A			 call	 Out_Chr
   2569	    10DF  E9 02B8			 jmp	 Condition6
   2570	    10E2			 Mnext41:
   2571	    10E2  83 3E	0865r 01		 cmp	 okGB,1
   2572	    10E7  75 08				 jne	 Mnext42
   2573	    10E9  B0 A7				 mov	 al,0A7h
   2574	    10EB  E8 F17B			 call	 Out_Chr
   2575	    10EE  E9 02EC			 jmp	 Condition7
   2576	    10F1			 Mnext42:
   2577	    10F1  80 3E	0417r 00		 cmp	 Nship,	0
   2578	    10F6  75 26				 jne	 Mnext43
   2579	    10F8  C7 06	0983r 0000		 mov	 myHod,0
   2580	    10FE  B0 A9				 mov	 al,0a9h
   2581	    1100  E8 F166			 call	 Out_Chr
   2582	    1103			 Mnext421:
   2583	    1103  E8 F18A			 call	 Get_Chr
   2584	    1106  72 FB				 jc	 Mnext421;;;;;;;;;;;;;;&&&&или куда там	все сольется
   2585	    1108  3C 01				 cmp	 al,1
   2586	    110A  75 08				 jne	 Mnext421w
   2587	    110C  C7 06	0569r 0000		 mov	 McountIn,0
   2588	    1112  EB EF				 jmp	 Mnext421
   2589	    1114			 Mnext421w:
   2590	    1114  3C 9A				 cmp	 al,9ah
   2591	    1116  75 EB				 jne	 Mnext421 ; хотя по идее ошибка
   2592	    1118  E8 F7AC			 call	 wrWin
   2593	    111B  E9 01D4			 jmp	 Condition9
   2594	    111E			 Mnext43:
   2595	    111E  E8 F16F			 call	 Get_Chr
   2596	    1121  0F 82	FCED			 jc	 MCondition41
   2597	    1125  3C 01				 cmp	 al,01h
   2598	    1127  75 09				 jne	 MnextS41
   2599	    1129  C7 06	0569r 0000		 mov	 McountIn , 0
   2600	    112F  E9 FCE0			 jmp	 MCondition41
   2601	    1132			 MnextS41:
   2602	    1132  3C A6				 cmp	 al,0a6h
   2603	    1134  75 0E				 jne	 MnextS42
   2604	    1136  C7 06	0569r 0000		 mov	 McountIn , 0
   2605	    113C  B0 6A				 mov	 al, 06ah
   2606	    113E  E8 F128			 call	 Out_Chr
   2607	    1141  E9 0256			 jmp	 Condition6
   2608	    1144			 MnextS42:
   2609	    1144  3C A7				 cmp	 al, 0a7h
   2610	    1146  75 0E				 jne	 MnextS43
   2611	    1148  C7 06	0569r 0000		 mov	 McountIn , 0
   2612	    114E  B0 7A				 mov	 al , 07ah
   2613	    1150  E8 F116			 call	 Out_Chr
   2614	    1153  E9 0287			 jmp	 Condition7
   2615	    1156			 MnextS43:
   2616	    1156  3C A8				 cmp	 al, 0a8h
   2617	    1158  75 14				 jne	 MnextS44
   2618	    115A  C7 06	0569r 0000		 mov	 McountIn , 0
   2619	    1160  B0 8A				 mov	 al , 08ah
   2620	    1162  E8 F104			 call	 Out_Chr
   2621	    1165  C7 06	0981r 0001		 mov	 myErr , 1
   2622	    116B  E9 0327			 jmp	 Condition8
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 47
32cc.ASM



   2623	    116E			 MnextS44:
   2624	    116E  3C C0				 cmp	 al, 0c0h
   2625	    1170  0F 85	0110			 jne	 Mnext49
   2626	    1174  C7 06	0569r 0000		 mov	 McountIn , 0
   2627	    117A			 Mnext441:
   2628	    117A  E8 F113			 call	 Get_Chr
   2629	    117D  72 FB				 jc	 Mnext441
   2630	    117F  A2 0000r			 mov	 xx , al
   2631	    1182  A2 0623r			 mov	 x , al
   2632	    1185  C7 06	0569r 0000		 mov	 McountIn , 0
   2633	    118B			 Mnext442:
   2634	    118B  E8 F102			 call	 Get_Chr
   2635	    118E  72 FB				 jc	 Mnext442
   2636	    1190  A2 0001r			 mov	 yy , al
   2637	    1193  A2 0624r			 mov	 y , al
   2638	    1196  C7 06	0569r 0000		 mov	 McountIn , 0
   2639	    119C  33 C0				 xor	 ax , ax
   2640	    119E  33 DB				 xor	 bx , bx
   2641	    11A0  B8 000C			 mov	 ax , 12
   2642	    11A3  8A 1E	0001r			 mov	 bl , yy
   2643	    11A7  F7 E3				 mul	 bx
   2644	    11A9  8B D8				 mov	 bx , ax
   2645	    11AB  33 C0				 xor	 ax , ax
   2646	    11AD  A0 0000r			 mov	 al , xx
   2647	    11B0  8B F0				 mov	 si , ax
   2648	    11B2  80 B8	0422r 00		 cmp	 field[bx][si] , 0
   2649	    11B7  75 19				 jne	 Mnext443
   2650	    11B9  C7 06	0983r 0001		 mov	 myHod , 1
   2651	    11BF  E8 F887			 call	 wrHod
   2652	    11C2  C6 80	0422r 03		 mov	 field[bx][si] , 3
   2653	    11C7  E8 F2C4			 call	 drawMissMy
   2654	    11CA  B0 0C				 mov	 al , 00ch
   2655	    11CC  E8 F09A			 call	 Out_Chr
   2656	    11CF  E9 FC40			 jmp	 MCondition41
   2657	    11D2			 Mnext443:
   2658	    11D2  80 B8	0422r 02		 cmp	 field[bx][si] , 2
   2659	    11D7  75 13				 jne	 Mnext444
   2660	    11D9  C7 06	0983r 0001		 mov	 myHod , 1
   2661	    11DF  E8 F867			 call	 wrHod
   2662	    11E2  33 C0				 xor	 ax , ax
   2663	    11E4  B0 3C				 mov	 al , 03ch
   2664	    11E6  E8 F080			 call	 Out_Chr
   2665	    11E9  E9 FC26			 jmp	 MCondition41
   2666	    11EC			 Mnext444:
   2667	    11EC  80 B8	0422r 03		 cmp	 field[bx][si] , 3
   2668	    11F1  75 12				 jne	 Mnext445
   2669	    11F3  B0 3C				 mov	 al , 03ch
   2670	    11F5  50				 push	 ax
   2671	    11F6  E8 F070			 call	 Out_Chr
   2672	    11F9  C7 06	0983r 0001		 mov	 myHod , 1
   2673	    11FF  E8 F847			 call	 wrHod
   2674	    1202  E9 FC0D			 jmp	 MCondition41
   2675	    1205			 Mnext445:
   2676	    1205  C6 80	0422r 02		 mov	 field[bx][si] , 2
   2677	    120A  53				 push	 bx
   2678	    120B  B3 3C				 mov	 bl , 00111100b
   2679	    120D  E8 F19A			 call	 drawKillMy
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 48
32cc.ASM



   2680	    1210  5B				 pop	 bx
   2681	    1211			 Mnext4451:
   2682	    1211  83 EB	0C			 sub	 bx , 12
   2683	    1214  80 B8	0422r 01		 cmp	 field[bx][si] , 1
   2684	    1219  74 61				 je	 Mnext48
   2685	    121B  80 B8	0422r 02		 cmp	 field[bx][si] , 2
   2686	    1220  74 EF				 je	 Mnext4451
   2687	    1222			 Mnext446:
   2688	    1222  33 C0				 xor	 ax , ax
   2689	    1224  33 D2				 xor	 dx , dx
   2690	    1226  A0 0001r			 mov	 al , yy
   2691	    1229  BB 000C			 mov	 bx , 12
   2692	    122C  F7 E3				 mul	 bx
   2693	    122E  8B D8				 mov	 bx , ax
   2694	    1230			 Mnext4461:
   2695	    1230  83 C3	0C			 add	 bx , 12
   2696	    1233  80 B8	0422r 01		 cmp	 field[bx][si] , 1
   2697	    1238  74 42				 je	 Mnext48
   2698	    123A  80 B8	0422r 02		 cmp	 field[bx][si] , 2
   2699	    123F  74 EF				 je	 Mnext4461
   2700	    1241			 Mnext447:
   2701	    1241  33 C0				 xor	 ax , ax
   2702	    1243  33 D2				 xor	 dx , dx
   2703	    1245  A0 0001r			 mov	 al , yy
   2704	    1248  BB 000C			 mov	 bx , 12
   2705	    124B  F7 E3				 mul	 bx
   2706	    124D  8B D8				 mov	 bx , ax
   2707	    124F			 Mnext4471:
   2708	    124F  4E				 dec	 si
   2709	    1250  80 B8	0422r 01		 cmp	 field[bx][si] , 1
   2710	    1255  74 25				 je	 Mnext48
   2711	    1257  80 B8	0422r 02		 cmp	 field[bx][si] , 2
   2712	    125C  74 F1				 je	 Mnext4471
   2713	    125E			 Mnext448:
   2714	    125E  33 D2				 xor	 dx , dx
   2715	    1260  A0 0000r			 mov	 al , xx
   2716	    1263  8B F0				 mov	 si , ax
   2717	    1265			 Mnext4481:
   2718	    1265  46				 inc	 si
   2719	    1266  80 B8	0422r 01		 cmp	 field[bx][si] , 1
   2720	    126B  74 0F				 je	 Mnext48
   2721	    126D  80 B8	0422r 02		 cmp	 field[bx][si] , 2
   2722	    1272  74 F1				 je	 Mnext4481
   2723	    1274  B0 2C				 mov	 al , 2ch
   2724	    1276  E8 EFF0			 call	 Out_Chr
   2725	    1279  E9 FB96			 jmp	 MCondition41
   2726
   2727	    127C			 Mnext48:
   2728	    127C  B0 1C				 mov	 al , 1ch
   2729	    127E  E8 EFE8			 call	 Out_Chr
   2730	    1281  E9 FB8E			 jmp	 MCondition41
   2731
   2732	    1284			 Mnext49:
   2733	    1284  3C A9				 cmp	 al, 0a9h
   2734	    1286  75 0A				 jne	 Mnext4a
   2735	    1288  B0 9A				 mov	 al , 09ah
   2736	    128A  E8 EFDC			 call	 Out_Chr
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 49
32cc.ASM



   2737	    128D  E8 F654			 call	 wrWon
   2738	    1290  EB 60				 jmp	 Condition9
   2739	    1292			 Mnext4a:
   2740	    1292  3C B1				 cmp	 al, 0b1h
   2741	    1294  75 48				 jne	 Mnext4b
   2742	    1296  C7 06	0569r 0000		 mov	 McountIn , 0
   2743	    129C			 Mnext4a1:
   2744	    129C  E8 EFF1			 call	 Get_Chr
   2745	    129F  72 FB				 jc	 Mnext4a1
   2746	    12A1  C7 06	0569r 0000		 mov	 McountIn , 0
   2747	    12A7  A2 096Dr			 mov	 pp , al
   2748	    12AA  BE 0000			 mov	 si , 0
   2749	    12AD			 Mnext4a2:
   2750	    12AD  E8 EFE0			 call	 Get_Chr
   2751	    12B0  72 FB				 jc	 Mnext4a2
   2752	    12B2  C7 06	0569r 0000		 mov	 McountIn , 0
   2753	    12B8  88 84	055Dr			 mov	 opName[si] , al
   2754	    12BC  46				 inc	 si
   2755	    12BD  83 FE	0A			 cmp	 si , 10
   2756	    12C0  7C 0A				 jl	 Mnext4a21
   2757	    12C2  E8 F63C			 call	 wrNic
   2758	    12C5  B0 1B				 mov	 al , 01bh
   2759	    12C7  E8 EF9F			 call	 Out_Chr
   2760	    12CA  EB 12				 jmp	 Mnext4b
   2761	    12CC			 Mnext4a21:
   2762	    12CC  33 D2				 xor	 dx , dx
   2763	    12CE  8B D6				 mov	 dx , si
   2764	    12D0  3A 16	096Dr			 cmp	 dl , pp
   2765	    12D4  7C D7				 jl	 Mnext4a2
   2766	    12D6  E8 F628			 call	 wrNic
   2767	    12D9  B0 1B				 mov	 al , 01bh
   2768	    12DB  E8 EF8B			 call	 Out_Chr
   2769	    12DE			 Mnext4b:
   2770	    12DE  3C 1B				 cmp	 al, 1bh
   2771	    12E0  75 09				 jne	 Mnext4c
   2772	    12E2  C7 06	0569r 0000		 mov	 McountIn,0
   2773	    12E8  E9 FB27			 jmp	 MCondition41
   2774	    12EB			 Mnext4c:
   2775	    12EB  0F 82	FB23			 jc	 MCondition41
   2776	    12EF  E9 FB20			 jmp	 MCondition41
   2777
   2778
   2779
   2780
   2781	    12F2			 Condition9:
   2782	    12F2  33 C0				 xor	 ax,ax
   2783	    12F4  B4 09				 mov	 ah,09h
   2784	    12F6  BA 09DEr			 mov	 dx,offset cond9
   2785	    12F9  CD 21				 int	 21h
   2786
   2787	    12FB  B8 000C			 mov	 ax , 000Ch
   2788	    12FE  B9 0000			 mov	 cx , 0000h ; удалить обработчик событий мыши
   2789	    1301  CD 33				 int	 33h
   2790
   2791	    1303  E9 0254			 jmp	 fin
   2792	    1306			 Condition5:
   2793	    1306  33 C0				 xor	 ax,ax
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 50
32cc.ASM



   2794	    1308  B4 09				 mov	 ah,09h
   2795	    130A  BA 09A6r			 mov	 dx,offset cond5
   2796	    130D  CD 21				 int	 21h
   2797
   2798	    130F  E8 EF7E			 call	 Get_Chr
   2799	    1312  3C 5A				 cmp	 al,5ah
   2800	    1314  75 F0				 jne	 Condition5
   2801
   2802	    1316  B8 A000			 mov	 ax , 0a000h
   2803	    1319  8E C0				 mov	 es , ax
   2804	    131B  33 C0				 xor	 ax , ax
   2805	    131D  B0 00				 mov	 al , 0h
   2806	    131F  B9 7000			 mov	 cx , 07000h
   2807	    1322  33 FF				 xor	 di , di
   2808	    1324  F3> AA			 rep	 stosb
   2809
   2810	    1326  C7 06	0869r 0000		 mov	 okRS ,	0
   2811	    132C  C7 06	086Br 0000		 mov	 okRD ,	0
   2812	    1332  C7 06	0867r 0000		 mov	 OkFin , 0
   2813	    1338  C7 06	0865r 0000		 mov	 OkGB ,	0
   2814	    133E  C7 06	0971r 0000		 mov	 fh4 , 0
   2815	    1344  C7 06	0973r 0000		 mov	 fv4 , 0
   2816	    134A  C7 06	0975r 0000		 mov	 fh3 , 0
   2817	    1350  C7 06	0977r 0000		 mov	 fv3 , 0
   2818	    1356  C7 06	0979r 0000		 mov	 fh2 , 0
   2819	    135C  C7 06	097Br 0000		 mov	 fv2 , 0
   2820	    1362  C7 06	097Dr 0000		 mov	 f1 , 0
   2821
   2822	    1368  BB 000C			 mov	 bx , 12
   2823	    136B  BE 0001			 mov	 si , 1
   2824	    136E  B9 0009			 mov	 cx , 9
   2825	    1371			 cycle1:
   2826	    1371  C6 80	0422r 00		 mov	 field[bx][si] , 0
   2827	    1376  C6 80	04B2r 00		 mov	 fieldOp[bx][si] , 0
   2828	    137B  46				 inc	 si
   2829	    137C  83 FE	0B			 cmp	 si , 11
   2830	    137F  7C F0				 jl	 cycle1
   2831	    1381  83 EE	0A			 sub	 si , 10
   2832	    1384  83 C3	0C			 add	 bx , 12
   2833	    1387  83 FB	78			 cmp	 bx , 120
   2834	    138A  7E E5				 jle	 cycle1
   2835
   2836	    138C  C6 06	0416r 00		 mov	 hidec,0
   2837	    1391  C7 06	0569r 0000		 mov	 McountIn , 0
   2838
   2839	    1397  E9 F7EF			 jmp	 State1
   2840
   2841	    139A			 Condition6:
   2842	    139A  33 C0				 xor	 ax,ax
   2843	    139C  B4 09				 mov	 ah,09h
   2844	    139E  BA 09B4r			 mov	 dx,offset cond6
   2845	    13A1  CD 21				 int	 21h
   2846	    13A3  B8 000C			 mov	 ax , 000Ch
   2847	    13A6  B9 0000			 mov	 cx , 0000h ; удалить обработчик событий мыши
   2848	    13A9  CD 33				 int	 33h
   2849
   2850	    13AB  B2 00				 mov	 dl , 0
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 51
32cc.ASM



   2851	    13AD  B6 00				 mov	 dh , 0
   2852	    13AF  B9 0050			 mov	 cx , 80
   2853	    13B2  E8 F4D5			 call	 wrClean
   2854
   2855	    13B5  83 3E	0867r 01		 cmp	 okFin , 1
   2856	    13BA  75 05				 jne	 noI
   2857	    13BC  BD 084Br			 lea	 bp , msgShur1
   2858	    13BF  EB 03				 jmp	 II
   2859	    13C1			 noI:
   2860	    13C1  BD 0831r			 lea	 bp , msgShur
   2861	    13C4			 II:
   2862	    13C4  B4 13				 mov	 ah, 13h
   2863	    13C6  B0 01				 mov	 al , 01h
   2864	    13C8  B7 00				 mov	 bh , 0
   2865	    13CA  B3 3B				 mov	 bl , 00111011b
   2866	    13CC  B9 001A			 mov	 cx , 26
   2867	    13CF  B2 00				 mov	 dl , 0
   2868	    13D1  B6 00				 mov	 dh , 0
   2869	    13D3  CD 10				 int	 10h
   2870	    13D5  C6 06	0416r 00		 mov	 hidec,0
   2871	    13DA  E9 FF15			 jmp	 Condition9
   2872
   2873	    13DD			 Condition7:
   2874	    13DD  33 C0				 xor	 ax,ax
   2875	    13DF  B4 09				 mov	 ah,09h
   2876	    13E1  BA 09C2r			 mov	 dx,offset cond7
   2877	    13E4  CD 21				 int	 21h
   2878
   2879	    13E6  B8 000C			 mov	 ax , 000Ch
   2880	    13E9  B9 0000			 mov	 cx , 0000h ; удалить обработчик событий мыши
   2881	    13EC  CD 33				 int	 33h
   2882
   2883	    13EE  83 3E	0865r 01		 cmp	 okGB ,	1
   2884	    13F3  0F 84	0163			 je	 fin
   2885
   2886	    13F7  B8 A000			 mov	 ax , 0a000h
   2887	    13FA  8E C0				 mov	 es , ax
   2888	    13FC  33 C0				 xor	 ax , ax
   2889	    13FE  B0 00				 mov	 al , 0h
   2890	    1400  B9 7000			 mov	 cx , 07000h
   2891	    1403  33 FF				 xor	 di , di
   2892	    1405  F3> AA			 rep	 stosb
   2893
   2894	    1407  B4 13				 mov	 ah, 13h
   2895	    1409  B0 01				 mov	 al , 01h
   2896	    140B  B7 00				 mov	 bh , 0
   2897	    140D  B3 3B				 mov	 bl , 00111011b
   2898	    140F  B9 001A			 mov	 cx , 26
   2899	    1412  B2 00				 mov	 dl , 0
   2900	    1414  B6 00				 mov	 dh , 0
   2901	    1416  BD 07AFr			 lea	 bp , mGB
   2902	    1419  CD 10				 int	 10h
   2903
   2904	    141B  C7 06	0869r 0000		 mov	 okRS ,	0
   2905	    1421  C7 06	086Br 0000		 mov	 okRD ,	0
   2906	    1427  C7 06	0867r 0000		 mov	 OkFin , 0
   2907	    142D  C7 06	0865r 0000		 mov	 OkGB ,	0
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 52
32cc.ASM



   2908	    1433  C7 06	0971r 0000		 mov	 fh4 , 0
   2909	    1439  C7 06	0973r 0000		 mov	 fv4 , 0
   2910	    143F  C7 06	0975r 0000		 mov	 fh3 , 0
   2911	    1445  C7 06	0977r 0000		 mov	 fv3 , 0
   2912	    144B  C7 06	0979r 0000		 mov	 fh2 , 0
   2913	    1451  C7 06	097Br 0000		 mov	 fv2 , 0
   2914	    1457  C7 06	097Dr 0000		 mov	 f1 , 0
   2915
   2916	    145D  BB 000C			 mov	 bx , 12
   2917	    1460  BE 0001			 mov	 si , 1
   2918	    1463  B9 0009			 mov	 cx , 9
   2919	    1466			 cycle2:
   2920	    1466  C6 80	0422r 00		 mov	 field[bx][si] , 0
   2921	    146B  C6 80	04B2r 00		 mov	 fieldOp[bx][si] , 0
   2922	    1470  46				 inc	 si
   2923	    1471  83 FE	0B			 cmp	 si , 11
   2924	    1474  7C F0				 jl	 cycle2
   2925	    1476  83 EE	0A			 sub	 si , 10
   2926	    1479  83 C3	0C			 add	 bx , 12
   2927	    147C  83 FB	78			 cmp	 bx , 120
   2928	    147F  7E E5				 jle	 cycle2
   2929
   2930	    1481  C7 06	0575r 0000		 mov	 Mflagerr , 0
   2931	    1487  C7 06	0569r 0000		 mov	 McountIn , 0
   2932
   2933	    148D  C6 06	0416r 00		 mov	 hidec,0
   2934	    1492  E9 F6C9			 jmp	 _State0
   2935
   2936	    1495			 Condition8:
   2937	    1495  33 C0				 xor	 ax,ax
   2938	    1497  B4 09				 mov	 ah,09h
   2939	    1499  BA 09D0r			 mov	 dx,offset cond8
   2940	    149C  CD 21				 int	 21h
   2941
   2942	    149E  B8 000C			 mov	 ax , 000Ch
   2943	    14A1  B9 0000			 mov	 cx , 0000h ; удалить обработчик событий мыши
   2944	    14A4  CD 33				 int	 33h
   2945
   2946	    14A6  83 3E	0981r 01		 cmp	 myErr , 1
   2947	    14AB  74 05				 je	 mr
   2948	    14AD  BD 0817r			 lea	 bp , opErrProt
   2949	    14B0  EB 03				 jmp	 nmr
   2950	    14B2			 mr:
   2951	    14B2  BD 07FDr			 lea	 bp , myErrProt
   2952	    14B5			 nmr:
   2953	    14B5  B4 13				 mov	 ah, 13h
   2954	    14B7  B0 01				 mov	 al , 01h
   2955	    14B9  B7 00				 mov	 bh , 0
   2956	    14BB  B3 3B				 mov	 bl , 00111011b
   2957	    14BD  B9 001A			 mov	 cx , 26
   2958	    14C0  B2 00				 mov	 dl , 0
   2959	    14C2  B6 00				 mov	 dh , 0
   2960	    14C4  CD 10				 int	 10h
   2961	    14C6			 ohoho:
   2962	    14C6  B8 0003			 mov	 ax , 03h
   2963	    14C9  CD 33				 int	 33h
   2964	    14CB  80 E3	02			 and	 bl , 0010b
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 53
32cc.ASM



   2965	    14CE  80 FB	02			 cmp	 bl , 0010b
   2966	    14D1  75 F3				 jne	 ohoho
   2967
   2968	    14D3  B8 A000			 mov	 ax , 0a000h
   2969	    14D6  8E C0				 mov	 es , ax
   2970	    14D8  33 C0				 xor	 ax , ax
   2971	    14DA  B0 00				 mov	 al , 0h
   2972	    14DC  B9 7000			 mov	 cx , 07000h
   2973	    14DF  33 FF				 xor	 di , di
   2974	    14E1  F3> AA			 rep	 stosb
   2975
   2976	    14E3  C7 06	0869r 0000		 mov	 okRS ,	0
   2977	    14E9  C7 06	086Br 0000		 mov	 okRD ,	0
   2978	    14EF  C7 06	0867r 0000		 mov	 OkFin , 0
   2979	    14F5  C7 06	0865r 0000		 mov	 OkGB ,	0
   2980	    14FB  C7 06	0971r 0000		 mov	 fh4 , 0
   2981	    1501  C7 06	0973r 0000		 mov	 fv4 , 0
   2982	    1507  C7 06	0975r 0000		 mov	 fh3 , 0
   2983	    150D  C7 06	0977r 0000		 mov	 fv3 , 0
   2984	    1513  C7 06	0979r 0000		 mov	 fh2 , 0
   2985	    1519  C7 06	097Br 0000		 mov	 fv2 , 0
   2986	    151F  C7 06	097Dr 0000		 mov	 f1 , 0
   2987
   2988	    1525  BB 000C			 mov	 bx , 12
   2989	    1528  BE 0001			 mov	 si , 1
   2990	    152B  B9 0009			 mov	 cx , 9
   2991	    152E			 cycle3:
   2992	    152E  C6 80	0422r 00		 mov	 field[bx][si] , 0
   2993	    1533  C6 80	04B2r 00		 mov	 fieldOp[bx][si] , 0
   2994	    1538  46				 inc	 si
   2995	    1539  83 FE	0B			 cmp	 si , 11
   2996	    153C  7C F0				 jl	 cycle3
   2997	    153E  83 EE	0A			 sub	 si , 10
   2998	    1541  83 C3	0C			 add	 bx , 12
   2999	    1544  E2 E8				 loop	 cycle3
   3000	    1546  C6 06	0416r 00	 mov	 hidec,0
   3001	    154B  C7 06	0575r 0000		 mov	 Mflagerr , 0
   3002	    1551  C7 06	0569r 0000		 mov	 McountIn , 0
   3003
   3004	    1557  E9 F604			 jmp	 _State0
   3005					 ;###############++Final and Err States++############;
   3006	    155A			 fin:
   3007	    155A  E8 EC4E			 call	 Ser_Rst
   3008	    155D  B8 0003			 mov	 ax, 0003h
   3009	    1560  CD 10				 int	 10h
   3010	    1562			 @@exit:
   3011	    1562  B8 2508			 mov	 ax , 2508h
   3012	    1565  0E				 push	 cs	 ;
   3013	    1566  1F				 pop	 ds
   3014	    1567  2E: 8B 16 0AE0r		 mov	 dx , word ptr cs:[Int_08h_old]
   3015	    156C  CD 21				 int	 21h
   3016	    156E  2E: 8E 06 002C		 mov	 es , word ptr cs:[2Ch]	;Получим сегмент окружения DOS.
   3017	    1573  B4 49				 mov	 ah , 49h		;Функция освобождения памяти.
   3018	    1575  CD 21				 int	 21h
   3019					 ;	 int 20h
   3020	    1577  BC FFFE			 mov	 sp, 0FFFEh
   3021
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 54
32cc.ASM



   3022	    157A			 @@d:
   3023
   3024	    157A  C3			 ret
   3025
   3026	    157B			 _ms:
   3027	    157B  BE 0082			 mov	 si,0082h
   3028	    157E			 _2:
   3029	    157E  AC				 lodsb
   3030	    157F  46				 inc	 si
   3031	    1580  3C 20				 cmp	 al,20h
   3032	    1582  74 FA				 je	 _2
   3033	    1584  3C 0D				 cmp	 al,0dh
   3034	    1586  74 08				 je	 _d1
   3035	    1588  3C 6D				 cmp	 al,6dh
   3036	    158A  75 04				 jne	 _d1
   3037	    158C  FF 06	0567r			 inc	 master
   3038	    1590			 _d1:
   3039	    1590  C3			 ret
   3040	    1591			 _intset:
   3041	    1591  33 C0				 xor	 ax,ax
   3042	    1593  50				 push	 ax
   3043	    1594  1F				 pop	 ds
   3044	    1595  BE 0020			 mov	 si,8h*4
   3045	    1598  BF 0AE0r			 mov	 di,offset Int_08h_old
   3046	    159B  A5				 movsw
   3047	    159C  A5				 movsw
   3048	    159D  1E				 push	 ds
   3049	    159E  07				 pop	 es
   3050	    159F  0E				 push	 cs
   3051	    15A0  1F				 pop	 ds
   3052
   3053	    15A1  B8 0AA8r			 mov	 ax,offset Int_08h
   3054	    15A4  BF 0020			 mov	 di,8h*4
   3055	    15A7  FA				 cli
   3056	    15A8  AB				 stosw
   3057	    15A9  0E				 push	 cs
   3058	    15AA  58				 pop	 ax
   3059	    15AB  AB				 stosw
   3060	    15AC  FB				 sti
   3061	    15AD  C3			 ret
   3062	    15AE			 _vset:
   3063	    15AE  B0 10				 mov	 al,10h
   3064	    15B0  32 E4				 xor	 ah,ah
   3065	    15B2  CD 10				 int	 10h
   3066	    15B4  8A C4				 mov	 al,ah
   3067	    15B6  B4 05				 mov	 ah,05h
   3068	    15B8  CD 10				 int	 10h
   3069	    15BA  C3			 ret
   3070
   3071	    15BB			 _inp:
   3072	    15BB  32 E4				 xor	 ah,ah
   3073	    15BD  B0 10				 mov	 al,10h
   3074	    15BF  CD 10				 int	 10h
   3075
   3076	    15C1  B4 13				 mov	 ah,13h
   3077	    15C3  B0 01				 mov	 al,01h
   3078	    15C5  32 FF				 xor	 bh,bh
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 55
32cc.ASM



   3079	    15C7  B3 24				 mov	 bl,24h
   3080					 ;	 mov	 cx,14
   3081					 ;	 mov	 dx,0707h
   3082					 ;	 mov	 bp,offset namae
   3083					 ;	 int	 10h
   3084	    15C9  BD 0B27r			 mov	 bp,offset sheepField
   3085	    15CC  B9 0014			 mov	 cx,20
   3086	    15CF  BA 0A11			 mov	 dx,0A11h
   3087	    15D2  CD 10				 int	 10h
   3088	    15D4  BD 0B3Br			 mov	 bp,offset sheep4
   3089	    15D7  B6 0D				 mov	 dh,0dh
   3090	    15D9  CD 10				 int	 10h
   3091	    15DB  BD 0B4Fr			 mov	 bp,offset sheep3
   3092	    15DE  B6 10				 mov	 dh,10h
   3093	    15E0  CD 10				 int	 10h
   3094	    15E2  BD 0B63r			 mov	 bp,offset sheep2
   3095	    15E5  B6 13				 mov	 dh,13h
   3096	    15E7  CD 10				 int	 10h
   3097	    15E9  BD 0B77r			 mov	 bp,offset sheep1
   3098	    15EC  B6 16				 mov	 dh,16h
   3099	    15EE  CD 10				 int	 10h
   3100	    15F0  B4 02				 mov	 ah,02h
   3101	    15F2  BA 0922			 mov	 dx,0922h
   3102	    15F5  CD 10				 int	 10h
   3103	    15F7  B9 0001			 mov	 cx,1
   3104	    15FA  B4 0A				 mov	 ah,0Ah
   3105	    15FC  B0 1E				 mov	 al,1Eh
   3106	    15FE  CD 10				 int	 10h
   3107	    1600  B4 02				 mov	 ah,02h
   3108	    1602  B6 0C				 mov	 dh,0Ch
   3109	    1604  CD 10				 int	 10h
   3110	    1606  B4 0A				 mov	 ah,0Ah
   3111	    1608  CD 10				 int	 10h
   3112	    160A  B4 02				 mov	 ah,02h
   3113	    160C  B6 0F				 mov	 dh,0Fh
   3114	    160E  CD 10				 int	 10h
   3115	    1610  B4 0A				 mov	 ah,0Ah
   3116	    1612  CD 10				 int	 10h
   3117	    1614  B4 02				 mov	 ah,02h
   3118	    1616  B6 12				 mov	 dh,12h
   3119	    1618  CD 10				 int	 10h
   3120	    161A  B4 0A				 mov	 ah,0Ah
   3121	    161C  CD 10				 int	 10h
   3122	    161E  B4 02				 mov	 ah,02h
   3123	    1620  B6 15				 mov	 dh,15h
   3124	    1622  CD 10				 int	 10h
   3125	    1624  B4 0A				 mov	 ah,0Ah
   3126	    1626  CD 10				 int	 10h
   3127
   3128	    1628  B4 02				 mov	 ah,02h
   3129	    162A  B6 0B				 mov	 dh,0Bh
   3130	    162C  CD 10				 int	 10h
   3131	    162E  B0 1F				 mov	 al,1Fh
   3132	    1630  B4 0A				 mov	 ah,0Ah
   3133	    1632  CD 10				 int	 10h
   3134	    1634  B4 02				 mov	 ah,02h
   3135	    1636  B6 0E				 mov	 dh,0Eh
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 56
32cc.ASM



   3136	    1638  CD 10				 int	 10h
   3137	    163A  B4 0A				 mov	 ah,0Ah
   3138	    163C  CD 10				 int	 10h
   3139	    163E  B4 02				 mov	 ah,02h
   3140	    1640  B6 11				 mov	 dh,11h
   3141	    1642  CD 10				 int	 10h
   3142	    1644  B4 0A				 mov	 ah,0Ah
   3143	    1646  CD 10				 int	 10h
   3144	    1648  B4 02				 mov	 ah,02h
   3145	    164A  B6 14				 mov	 dh,14h
   3146	    164C  CD 10				 int	 10h
   3147	    164E  B4 0A				 mov	 ah,0ah
   3148	    1650  CD 10				 int	 10h
   3149	    1652  B4 02				 mov	 ah,02h
   3150	    1654  B6 17				 mov	 dh,17h
   3151	    1656  CD 10				 int	 10h
   3152	    1658  B4 0A				 mov	 ah,0Ah
   3153	    165A  CD 10				 int	 10h
   3154
   3155	    165C  C3			 ret
   3156					 ;;****	 obr wrDAta data parametrs****;;
   3157	    165D			 _obr1:
   3158	    165D  1E				 push ds
   3159	    165E  0E				 push cs
   3160	    165F  1F				 pop ds
   3161	    1660  50				 push	 ax
   3162	    1661  53				 push	 bx
   3163	    1662  51				 push	 cx
   3164	    1663  52				 push	 dx
   3165
   3166	    1664  A9 0002			 test	 ax, 00000010b
   3167	    1667  75 03				 jnz	 _ndo
   3168	    1669  E9 00A2			 jmp	 _endo
   3169	    166C			 _ndo:
   3170	    166C  B8 0002			 mov	 ax, 2
   3171	    166F  CD 33				 int	 33h
   3172
   3173	    1671  C1 E9	03			 shr	 cx, 3
   3174	    1674  8B C2				 mov	 ax,dx
   3175	    1676  B2 0E				 mov	 dl,14
   3176	    1678  F6 F2				 div	 dl
   3177	    167A  8A D0				 mov	 dl,al
   3178	    167C  B6 00				 mov	 dh,0
   3179
   3180	    167E  83 F9	22			 cmp	 cx,22h
   3181	    1681  74 03				 je	 _nd
   3182	    1683  E9 0088			 jmp	 _endo
   3183	    1686			 _nd:
   3184	    1686  83 FA	09			 cmp	 dx,09h
   3185	    1689  73 03				 jae	 _nd1
   3186	    168B  E9 0080			 jmp	 _endo
   3187	    168E			 _nd1:
   3188	    168E  83 FA	17			 cmp	 dx,17h
   3189	    1691  77 7B				 ja	 _endo
   3190	    1693  B3 03				 mov	 bl,3
   3191	    1695  8B C2				 mov	 ax,dx
   3192	    1697  F6 F3				 div	 bl
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 57
32cc.ASM



   3193	    1699  80 FC	01			 cmp	 ah,1
   3194	    169C  74 70				 je	 _endo
   3195	    169E  2A C3				 sub	 al,bl
   3196	    16A0  8A D8				 mov	 bl,al
   3197	    16A2  32 FF				 xor	 bh,bh
   3198	    16A4  8A 8F	0BA2r			 mov	 cl,masp[bx]
   3199	    16A8  80 FC	00			 cmp	 ah,0
   3200	    16AB  75 1F				 jne	 _sub
   3201
   3202	    16AD  3A 8F	0BA7r			 cmp	 cl,maxp[bx]
   3203	    16B1  74 5B				 je	 _endo
   3204
   3205	    16B3  FE C1				 inc	 cl
   3206	    16B5  88 8F	0BA2r			 mov	 masp[bx],cl
   3207	    16B9  5A				 pop	 dx
   3208	    16BA  59				 pop	 cx
   3209	    16BB  51				 push	 cx
   3210	    16BC  52				 push	 dx
   3211	    16BD  53				 push	 bx
   3212
   3213	    16BE  8B C2				 mov	 ax,dx
   3214	    16C0  B2 0E				 mov	 dl,14
   3215	    16C2  F6 F2				 div	 dl
   3216	    16C4  8A D0				 mov	 dl,al
   3217	    16C6  B6 00				 mov	 dh,0
   3218	    16C8  FE C2				 inc	 dl
   3219	    16CA  EB 1D				 jmp	 _endo1
   3220	    16CC			 _sub:
   3221	    16CC  3A 8F	0BACr			 cmp	 cl,minp[bx]
   3222	    16D0  74 3C				 je	 _endo
   3223
   3224	    16D2  FE C9				 dec	 cl
   3225	    16D4  88 8F	0BA2r			 mov	 masp[bx],cl
   3226	    16D8  5A				 pop	 dx
   3227	    16D9  59				 pop	 cx
   3228	    16DA  51				 push	 cx
   3229	    16DB  52				 push	 dx
   3230	    16DC  53				 push	 bx
   3231
   3232	    16DD  8B C2				 mov	 ax,dx
   3233	    16DF  B2 0E				 mov	 dl,14
   3234	    16E1  F6 F2				 div	 dl
   3235	    16E3  8A D0				 mov	 dl,al
   3236	    16E5  B6 00				 mov	 dh,0
   3237	    16E7  FE CA				 dec	 dl
   3238	    16E9			 _endo1:
   3239	    16E9  C1 E9	03			 shr	 cx,3
   3240	    16EC  B4 02				 mov	 ah,02h
   3241	    16EE  8A F2				 mov	 dh,dl
   3242	    16F0  8A D1				 mov	 dl,cl
   3243	    16F2  32 FF				 xor	 bh,bh
   3244	    16F4  CD 10				 int	 10h
   3245
   3246	    16F6  5B				 pop	 bx
   3247	    16F7  8A 87	0BA2r			 mov	 al,masp[bx]
   3248	    16FB  04 30				 add	 al,30h
   3249	    16FD  3C 3A				 cmp	 al,3ah
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 58
32cc.ASM



   3250	    16FF  75 02				 jne	 _na
   3251	    1701  B0 61				 mov	 al,'a'
   3252	    1703			 _na:
   3253	    1703  B3 04				 mov	 bl,4
   3254	    1705  32 FF				 xor	 bh,bh
   3255	    1707  B4 0A				 mov	 ah,0Ah
   3256	    1709  B9 0001			 mov	 cx,1
   3257	    170C  CD 10				 int	 10h
   3258	    170E			 _endo:
   3259
   3260	    170E  B8 0001			 mov	 ax, 1
   3261	    1711  CD 33				 int	 33h
   3262	    1713  1F				 pop	 ds
   3263	    1714  5A				 pop	 dx
   3264	    1715  59				 pop	 cx
   3265	    1716  5B				 pop	 bx
   3266	    1717  58				 pop	 ax
   3267	    1718  CB				 retf
   3268
   3269					 ;!!!!!!!!!!!!!!
   3270	    1719			 ObrRasstS:
   3271
   3272	    1719  50				 push	 ax
   3273	    171A  53				 push	 bx
   3274	    171B  51				 push	 cx
   3275	    171C  52				 push	 dx
   3276	    171D  56				 push	 si
   3277	    171E  57				 push	 di
   3278	    171F  55				 push	 bp
   3279
   3280	    1720  51				 push	 cx
   3281	    1721  52				 push	 dx
   3282	    1722  B0 01				 mov	 al , 01h
   3283	    1724  B7 00				 mov	 bh , 0
   3284	    1726  B4 13				 mov	 ah , 13h
   3285	    1728  B9 0050			 mov	 cx , 80
   3286	    172B  B2 00				 mov	 dl , 0
   3287	    172D  B6 01				 mov	 dh , 1
   3288	    172F  BD 0582r			 lea	 bp , clean
   3289	    1732  CD 10				 int	 10h
   3290	    1734  5A				 pop	 dx
   3291	    1735  59				 pop	 cx
   3292						 ;mov	 cx , 80
   3293						 ;mov	 dl , 0
   3294						 ;mov	 dh , 1
   3295						 ;call	 wrClean
   3296	    1736  89 0E	0625r			 mov	 x1 , cx
   3297	    173A  89 16	0627r			 mov	 y1 , dx
   3298	    173E  3B 0E	0549r			 cmp	 cx , rightBord1f
   3299	    1742  0F 8F	01C9			 jg	 mm
   3300	    1746  3B 16	054Fr			 cmp	 dx , topBord
   3301	    174A  0F 8C	03C3			 jl	 uff
   3302	    174E  3B 16	054Dr			 cmp	 dx , bottomBord
   3303	    1752  0F 8F	01B9			 jg	 mm
   3304
   3305
   3306	    1756  89 0E	0625r			 mov	 x1 , cx
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 59
32cc.ASM



   3307	    175A  89 16	0627r			 mov	 y1 , dx
   3308	    175E  E8 ED88			 call	 calcPlaceShip
   3309	    1761  B8 0002			 mov	 ax , 02h
   3310	    1764  CD 33				 int	 33h
   3311	    1766  83 3E	0971r 01		 cmp	 fh4 , 1
   3312	    176B  75 40				 jne	 g
   3313	    176D  C7 06	0551r 0000		 mov	 ok , 0
   3314	    1773  E8 EE3D			 call calcCorrectHor4
   3315	    1776  83 3E	0551r 01		 cmp	 ok , 1
   3316	    177B  0F 85	038F			 jne	 uncor
   3317	    177F  E8 EC28			 call drawKillMy
   3318	    1782  80 06	0623r 01		 add	 x , 1
   3319	    1787  E8 EC20			 call drawKillMy
   3320	    178A  80 06	0623r 01		 add	 x , 1
   3321	    178F  E8 EC18			 call drawKillMy
   3322	    1792  80 06	0623r 01		 add	 x , 1
   3323	    1797  E8 EC10			 call drawKillMy
   3324	    179A  C7 06	0971r 0000		 mov	 fh4 , 0
   3325	    17A0  80 2E	041Cr 04		 sub	 hNship	, 4
   3326	    17A5  80 2E	0420r 01		 sub	 hship4	, 1
   3327	    17AA  E9 0364			 jmp	 uff
   3328	    17AD			 g:
   3329	    17AD  83 3E	0973r 01		 cmp	 fv4 , 1
   3330	    17B2  75 40				 jne	 gg
   3331	    17B4  C7 06	0551r 0000		 mov	 ok , 0
   3332	    17BA  E8 ED75			 call calcCorrectVert4
   3333	    17BD  83 3E	0551r 01		 cmp	 ok , 1
   3334	    17C2  0F 85	0348			 jne	 uncor
   3335	    17C6  E8 EBE1			 call drawKillMy
   3336	    17C9  80 06	0624r 01		 add	 y , 1
   3337	    17CE  E8 EBD9			 call drawKillMy
   3338	    17D1  80 06	0624r 01		 add	 y , 1
   3339	    17D6  E8 EBD1			 call drawKillMy
   3340	    17D9  80 06	0624r 01		 add	 y , 1
   3341	    17DE  E8 EBC9			 call drawKillMy
   3342	    17E1  C7 06	0973r 0000		 mov	 fv4 , 0
   3343	    17E7  80 2E	041Cr 04		 sub	 hNship	, 4
   3344	    17EC  80 2E	0420r 01		 sub	 hship4	, 1
   3345	    17F1  E9 031D			 jmp	 uff
   3346	    17F4			 gg:
   3347	    17F4  83 3E	0975r 01		 cmp	 fh3 , 1
   3348	    17F9  75 38				 jne	 g3
   3349	    17FB  C7 06	0551r 0000		 mov	 ok , 0
   3350	    1801  E8 EE20			 call calcCorrectHor3
   3351	    1804  83 3E	0551r 01		 cmp	 ok , 1
   3352	    1809  0F 85	0301			 jne	 uncor
   3353	    180D  E8 EB9A			 call drawKillMy
   3354	    1810  80 06	0623r 01		 add	 x , 1
   3355	    1815  E8 EB92			 call drawKillMy
   3356	    1818  80 06	0623r 01		 add	 x , 1
   3357	    181D  E8 EB8A			 call drawKillMy
   3358	    1820  C7 06	0975r 0000		 mov	 fh3 , 0
   3359	    1826  80 2E	041Cr 03		 sub	 hNship	, 3
   3360	    182B  80 2E	041Fr 01		 sub	 hship3	, 1
   3361	    1830  E9 02DE			 jmp	 uff
   3362	    1833			 g3:
   3363	    1833  83 3E	0977r 01		 cmp	 fv3 , 1
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 60
32cc.ASM



   3364	    1838  75 38				 jne	 gg3
   3365	    183A  C7 06	0551r 0000		 mov	 ok , 0
   3366	    1840  E8 EE4C			 call calcCorrectVert3
   3367	    1843  83 3E	0551r 01		 cmp	 ok , 1
   3368	    1848  0F 85	02C2			 jne	 uncor
   3369	    184C  E8 EB5B			 call drawKillMy
   3370	    184F  80 06	0624r 01		 add	 y , 1
   3371	    1854  E8 EB53			 call drawKillMy
   3372	    1857  80 06	0624r 01		 add	 y , 1
   3373	    185C  E8 EB4B			 call drawKillMy
   3374	    185F  C7 06	0977r 0000		 mov	 fv3 , 0
   3375	    1865  80 2E	041Cr 03		 sub	 hNship	, 3
   3376	    186A  80 2E	041Fr 01		 sub	 hship3	, 1
   3377	    186F  E9 029F			 jmp	 uff
   3378	    1872			 gg3:
   3379	    1872  83 3E	0979r 01		 cmp	 fh2 , 1
   3380	    1877  75 30				 jne	 g2
   3381	    1879  C7 06	0551r 0000		 mov	 ok , 0
   3382	    187F  E8 EEF3			 call calcCorrectHor2
   3383	    1882  83 3E	0551r 01		 cmp	 ok , 1
   3384	    1887  0F 85	0283			 jne	 uncor
   3385	    188B  E8 EB1C			 call drawKillMy
   3386	    188E  80 06	0623r 01		 add	 x , 1
   3387	    1893  E8 EB14			 call drawKillMy
   3388	    1896  C7 06	0979r 0000		 mov	 fh2 , 0
   3389	    189C  80 2E	041Cr 02		 sub	 hNship	, 2
   3390	    18A1  80 2E	041Er 01		 sub	 hship2	, 1
   3391	    18A6  E9 0268			 jmp	 uff
   3392	    18A9			 g2:
   3393	    18A9  83 3E	097Br 01		 cmp	 fv2 , 1
   3394	    18AE  75 30				 jne	 gg2
   3395	    18B0  C7 06	0551r 0000		 mov	 ok , 0
   3396	    18B6  E8 EE4D			 call calcCorrectVert2
   3397	    18B9  83 3E	0551r 01		 cmp	 ok , 1
   3398	    18BE  0F 85	024C			 jne	 uncor
   3399	    18C2  E8 EAE5			 call drawKillMy
   3400	    18C5  80 06	0624r 01		 add	 y , 1
   3401	    18CA  E8 EADD			 call drawKillMy
   3402	    18CD  C7 06	097Br 0000		 mov	 fv2 , 0
   3403	    18D3  80 2E	041Cr 02		 sub	 hNship	, 2
   3404	    18D8  80 2E	041Er 01		 sub	 hship2	, 1
   3405	    18DD  E9 0231			 jmp	 uff
   3406	    18E0			 gg2:
   3407	    18E0  83 3E	097Dr 01		 cmp	 f1 , 1
   3408	    18E5  75 28				 jne	 mm
   3409	    18E7  C7 06	0551r 0000		 mov	 ok , 0
   3410	    18ED  E8 EEEA			 call calcCorrect1
   3411	    18F0  83 3E	0551r 01		 cmp	 ok , 1
   3412	    18F5  0F 85	0215			 jne	 uncor
   3413	    18F9  E8 EAAE			 call drawKillMy
   3414	    18FC  C7 06	097Dr 0000		 mov	 f1 , 0
   3415	    1902  80 2E	041Cr 01		 sub	 hNship	, 1
   3416	    1907  80 2E	041Dr 01		 sub	 hship1	, 1
   3417	    190C  E9 0202			 jmp	 uff
   3418	    190F			 mm:
   3419
   3420	    190F  81 3E	0625r 0230		 cmp	 x1 , 560
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 61
32cc.ASM



   3421	    1915  0F 8C	01F8			 jl	 uff
   3422	    1919  83 3E	0627r 38		 cmp	 y1 , 56
   3423	    191E  7F 09				 jg	 noGB
   3424	    1920  C7 06	0865r 0001		 mov	 okGB ,	1
   3425	    1926  E9 01E8			 jmp	 uff
   3426	    1929			 noGB:
   3427	    1929  83 3E	0627r 54		 cmp	 y1 , 84
   3428	    192E  7F 09				 jg	 noFinn
   3429	    1930  C7 06	0867r 0001		 mov	 okFin , 1
   3430	    1936  E9 01D8			 jmp	 uff
   3431	    1939			 noFinn:
   3432	    1939  83 3E	0627r 70		 cmp	 y1 , 112
   3433	    193E  7F 09				 jg	 noRS
   3434	    1940  C7 06	0869r 0001		 mov	 okRS ,	1
   3435	    1946  E9 01C8			 jmp	 uff
   3436	    1949			 noRS:
   3437	    1949  81 3E	0627r 008C		 cmp	 y1 , 140
   3438	    194F  7F 36				 jg	 no4v
   3439	    1951  80 3E	0420r 00		 cmp	 hship4	, 0
   3440	    1956  0F 8E	01B7			 jle	 uff
   3441	    195A  C7 06	0973r 0001		 mov	 fv4 , 1
   3442	    1960  C7 06	0971r 0000		 mov	 fh4 , 0
   3443	    1966  C7 06	0977r 0000		 mov	 fv3 , 0
   3444	    196C  C7 06	0975r 0000		 mov	 fh3 , 0
   3445	    1972  C7 06	097Br 0000		 mov	 fv2 , 0
   3446	    1978  C7 06	0979r 0000		 mov	 fh2 , 0
   3447	    197E  C7 06	097Dr 0000		 mov	 f1 , 0
   3448	    1984  E9 018A			 jmp	 uff
   3449	    1987			 no4v:
   3450	    1987  81 3E	0627r 00A8		 cmp	 y1 , 168
   3451	    198D  7F 36				 jg	 no4h
   3452	    198F  80 3E	0420r 00		 cmp	 hship4	, 0
   3453	    1994  0F 8E	0179			 jle	 uff
   3454	    1998  C7 06	0973r 0000		 mov	 fv4 , 0
   3455	    199E  C7 06	0971r 0001		 mov	 fh4 , 1
   3456	    19A4  C7 06	0977r 0000		 mov	 fv3 , 0
   3457	    19AA  C7 06	0975r 0000		 mov	 fh3 , 0
   3458	    19B0  C7 06	097Br 0000		 mov	 fv2 , 0
   3459	    19B6  C7 06	0979r 0000		 mov	 fh2 , 0
   3460	    19BC  C7 06	097Dr 0000		 mov	 f1 , 0
   3461	    19C2  E9 014C			 jmp	 uff
   3462	    19C5			 no4h:
   3463	    19C5  81 3E	0627r 00C4		 cmp	 y1 , 196
   3464	    19CB  7F 36				 jg	 no3v
   3465	    19CD  80 3E	041Fr 00		 cmp	 hship3	, 0
   3466	    19D2  0F 8E	013B			 jle	 uff
   3467	    19D6  C7 06	0973r 0000		 mov	 fv4 , 0
   3468	    19DC  C7 06	0971r 0000		 mov	 fh4 , 0
   3469	    19E2  C7 06	0977r 0001		 mov	 fv3 , 1
   3470	    19E8  C7 06	0975r 0000		 mov	 fh3 , 0
   3471	    19EE  C7 06	097Br 0000		 mov	 fv2 , 0
   3472	    19F4  C7 06	0979r 0000		 mov	 fh2 , 0
   3473	    19FA  C7 06	097Dr 0000		 mov	 f1 , 0
   3474	    1A00  E9 010E			 jmp	 uff
   3475	    1A03			 no3v:
   3476	    1A03  81 3E	0627r 00E0		 cmp	 y1 , 224
   3477	    1A09  7F 36				 jg	 no3h
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 62
32cc.ASM



   3478	    1A0B  80 3E	041Fr 00		 cmp	 hship3	, 0
   3479	    1A10  0F 8E	00FD			 jle	 uff
   3480	    1A14  C7 06	0973r 0000		 mov	 fv4 , 0
   3481	    1A1A  C7 06	0971r 0000		 mov	 fh4 , 0
   3482	    1A20  C7 06	0977r 0000		 mov	 fv3 , 0
   3483	    1A26  C7 06	0975r 0001		 mov	 fh3 , 1
   3484	    1A2C  C7 06	097Br 0000		 mov	 fv2 , 0
   3485	    1A32  C7 06	0979r 0000		 mov	 fh2 , 0
   3486	    1A38  C7 06	097Dr 0000		 mov	 f1 , 0
   3487	    1A3E  E9 00D0			 jmp	 uff
   3488	    1A41			 no3h:
   3489	    1A41  81 3E	0627r 00FC		 cmp	 y1 , 252
   3490	    1A47  7F 36				 jg	 no2v
   3491	    1A49  80 3E	041Er 00		 cmp	 hship2	, 0
   3492	    1A4E  0F 8E	00BF			 jle	 uff
   3493	    1A52  C7 06	0973r 0000		 mov	 fv4 , 0
   3494	    1A58  C7 06	0971r 0000		 mov	 fh4 , 0
   3495	    1A5E  C7 06	0977r 0000		 mov	 fv3 , 0
   3496	    1A64  C7 06	0975r 0000		 mov	 fh3 , 0
   3497	    1A6A  C7 06	097Br 0001		 mov	 fv2 , 1
   3498	    1A70  C7 06	0979r 0000		 mov	 fh2 , 0
   3499	    1A76  C7 06	097Dr 0000		 mov	 f1 , 0
   3500	    1A7C  E9 0092			 jmp	 uff
   3501	    1A7F			 no2v:
   3502	    1A7F  81 3E	0627r 0118		 cmp	 y1 , 280
   3503	    1A85  7F 35				 jg	 no2h
   3504	    1A87  80 3E	041Er 00		 cmp	 hship2	, 0
   3505	    1A8C  0F 8E	0081			 jle	 uff
   3506	    1A90  C7 06	0973r 0000		 mov	 fv4 , 0
   3507	    1A96  C7 06	0971r 0000		 mov	 fh4 , 0
   3508	    1A9C  C7 06	0977r 0000		 mov	 fv3 , 0
   3509	    1AA2  C7 06	0975r 0000		 mov	 fh3 , 0
   3510	    1AA8  C7 06	097Br 0000		 mov	 fv2 , 0
   3511	    1AAE  C7 06	0979r 0001		 mov	 fh2 , 1
   3512	    1AB4  C7 06	097Dr 0000		 mov	 f1 , 0
   3513	    1ABA  EB 55				 jmp	 uff
   3514	    1ABC			 no2h:
   3515	    1ABC  81 3E	0627r 0134		 cmp	 y1 , 308
   3516	    1AC2  7F 33				 jg	 no11
   3517	    1AC4  80 3E	041Dr 00		 cmp	 hship1	, 0
   3518	    1AC9  7E 46				 jle	 uff
   3519	    1ACB  C7 06	0973r 0000		 mov	 fv4 , 0
   3520	    1AD1  C7 06	0971r 0000		 mov	 fh4 , 0
   3521	    1AD7  C7 06	0977r 0000		 mov	 fv3 , 0
   3522	    1ADD  C7 06	0975r 0000		 mov	 fh3 , 0
   3523	    1AE3  C7 06	097Br 0000		 mov	 fv2 , 0
   3524	    1AE9  C7 06	0979r 0000		 mov	 fh2 , 0
   3525	    1AEF  C7 06	097Dr 0001		 mov	 f1 , 1
   3526	    1AF5  EB 1A				 jmp	 uff
   3527	    1AF7			 no11:
   3528	    1AF7  81 3E	0627r 0150		 cmp	 y1 , 336
   3529	    1AFD  7F 12				 jg	 uff
   3530	    1AFF  80 3E	041Cr 00		 cmp	 hNship	, 0
   3531	    1B04  75 08				 jne	 uncor
   3532	    1B06  C7 06	086Br 0001		 mov	 okRD ,	1
   3533	    1B0C  EB 03				 jmp	 uff
   3534	    1B0E			 uncor:
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 63
32cc.ASM



   3535	    1B0E  E8 ED8B			 call	 wrErrMsg
   3536	    1B11			 uff:
   3537	    1B11  B8 0001			 mov	 ax , 01h
   3538	    1B14  CD 33				 int	 33h
   3539
   3540	    1B16  5D				 pop	 bp
   3541	    1B17  5F				 pop	 di
   3542	    1B18  5E				 pop	 si
   3543	    1B19  5A				 pop	 dx
   3544	    1B1A  59				 pop	 cx
   3545	    1B1B  5B				 pop	 bx
   3546	    1B1C  58				 pop	 ax
   3547	    1B1D  CB			 retf
   3548
   3549						 ;@@@@@@
   3550	    1B1E			 Game:
   3551	    1B1E  1E			 push	 ds
   3552	    1B1F  0E			 push	 cs
   3553	    1B20  1F			 pop		 ds
   3554	    1B21  50				 push	 ax
   3555	    1B22  53				 push	 bx
   3556	    1B23  51				 push	 cx
   3557	    1B24  52				 push	 dx
   3558	    1B25  56				 push	 si
   3559	    1B26  57				 push	 di
   3560	    1B27  55				 push	 bp
   3561
   3562	    1B28  52				 push	 dx
   3563	    1B29  B2 4D				 mov	 dl, 'M'
   3564	    1B2B  E8 0074			 call	 print_dl
   3565	    1B2E  5A				 pop	 dx
   3566
   3567	    1B2F  3B 0E	0547r			 cmp	 cx,rightBord2f
   3568	    1B33  7F 3F				 jg	 mmg
   3569	    1B35  3B 16	054Fr			 cmp	 dx,topBord
   3570	    1B39  7C 59				 jl	 uffg
   3571	    1B3B  3B 16	054Dr			 cmp	 dx,bottomBord
   3572	    1B3F  7F 33				 jg	 mmg
   3573	    1B41  3B 0E	054Br			 cmp	 cx,leftBord2f
   3574	    1B45  7C 2D				 jl	 mmg
   3575
   3576	    1B47  52				 push	 dx
   3577	    1B48  B2 6F				 mov	 dl, 'o'
   3578	    1B4A  E8 0055			 call	 print_dl
   3579	    1B4D  5A				 pop	 dx
   3580
   3581	    1B4E  83 3E	0983r 01		 cmp	 myHod,1
   3582	    1B53  75 3F				 jne	 uffg
   3583
   3584	    1B55  52				 push	 dx
   3585	    1B56  B2 65				 mov	 dl, 'e'
   3586	    1B58  E8 0047			 call	 print_dl
   3587	    1B5B  5A				 pop	 dx
   3588
   3589	    1B5C  C7 06	098Br 0001		 mov	 fyes,1
   3590	    1B62  C7 06	0983r 0000		 mov	 myHod,0
   3591	    1B68  89 0E	0625r			 mov	 x1,cx
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 64
32cc.ASM



   3592	    1B6C  89 16	0627r			 mov	 y1,dx
   3593	    1B70  EB 22				 jmp	 uffg
   3594
   3595
   3596	    1B72  EB 20				 jmp	 uffg
   3597
   3598	    1B74			 mmg:
   3599	    1B74  81 F9	0230			 cmp	 cx,560
   3600	    1B78  7C 1A				 jl	 uffg
   3601	    1B7A  83 FA	38			 cmp	 dx,56
   3602	    1B7D  7F 08				 jg	 noGBg
   3603	    1B7F  C7 06	0865r 0001		 mov	 okGB,1
   3604	    1B85  EB 8A				 jmp	 uff
   3605	    1B87			 noGBg:
   3606	    1B87  83 FA	54			 cmp	 dx,84
   3607	    1B8A  7F 08				 jg	 uffg
   3608	    1B8C  C7 06	0867r 0001		 mov	 okFin,1
   3609	    1B92  EB 00				 jmp	 uffg
   3610	    1B94			 uffg:
   3611	    1B94  B8 0001			 mov	 ax,01h
   3612	    1B97  CD 33				 int	 33h
   3613	    1B99  1F				 pop		 ds
   3614	    1B9A  5D				 pop	 bp
   3615	    1B9B  5F				 pop	 di
   3616	    1B9C  5E				 pop	 si
   3617	    1B9D  5A				 pop	 dx
   3618	    1B9E  59				 pop	 cx
   3619	    1B9F  5B				 pop	 bx
   3620	    1BA0  58				 pop	 ax
   3621	    1BA1  CB			 retf
   3622					 ;@@@@@@
   3623
   3624	    1BA2			 print_dl:
   3625	    1BA2  50				 push	 ax
   3626	    1BA3  52				 push	 dx
   3627	    1BA4  B4 02				 mov	 ah, 2
   3628	    1BA6  CD 21				 int	 21h
   3629	    1BA8  5A				 pop	 dx
   3630	    1BA9  58				 pop	 ax
   3631	    1BAA  C3				 ret
   3632
   3633					 end	 _start
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 65
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "01/08/11"
??FILENAME			  Text	 "32cc	  "
??TIME				  Text	 "01:43:30"
??VERSION			  Number 030A
@32BIT				  Text	 0
@@0				  Near	 DGROUP:0122
@@1				  Near	 DGROUP:0128
@@2				  Near	 DGROUP:013E
@@D				  Near	 DGROUP:157A
@@EXIT				  Near	 DGROUP:1562
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0F0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 32CC
@INTERFACE			  Text	 00H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
ALLPAR				  Byte	 DGROUP:0542
B2				  Byte	 DGROUP:098E
BOTTOMBORD			  Word	 DGROUP:054D
BUFFER				  Byte	 DGROUP:0103
BUF_SIZE			  Number 0400
CALCATTACKSHIP			  Near	 DGROUP:050C
CALCCORRECT1			  Near	 DGROUP:07DA
CALCCORRECTHOR2			  Near	 DGROUP:0775
CALCCORRECTHOR3			  Near	 DGROUP:0624
CALCCORRECTHOR4			  Near	 DGROUP:05B3
CALCCORRECTVERT2		  Near	 DGROUP:0706
CALCCORRECTVERT3		  Near	 DGROUP:068F
CALCCORRECTVERT4		  Near	 DGROUP:0532
CALCNSHIP			  Near	 DGROUP:0832
CALCPLACESHIP			  Near	 DGROUP:04E9
CALCSTATUS			  Near	 DGROUP:0866
CANCLE				  Near	 DGROUP:0978
CANSENDA			  Byte	 DGROUP:098D
CLEAN				  Byte	 DGROUP:0582
CLEAN1				  Byte	 DGROUP:05D2
CLEAN4				  Near	 DGROUP:0DDE
COND5				  Byte	 DGROUP:09A6
COND6				  Byte	 DGROUP:09B4
COND7				  Byte	 DGROUP:09C2
COND8				  Byte	 DGROUP:09D0
COND9				  Byte	 DGROUP:09DE
CONDITION5			  Near	 DGROUP:1306
CONDITION6			  Near	 DGROUP:139A
CONDITION7			  Near	 DGROUP:13DD
CONDITION8			  Near	 DGROUP:1495
CONDITION9			  Near	 DGROUP:12F2
COUNT				  Word	 DGROUP:0406
CYCLE1				  Near	 DGROUP:1371
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 66
Symbol Table



CYCLE2				  Near	 DGROUP:1466
CYCLE3				  Near	 DGROUP:152E
DATABITS			  Byte	 DGROUP:0412
DECSI				  Near	 DGROUP:0803
DIVISOR				  Word	 DGROUP:0410
DRAWFIELD			  Near	 DGROUP:02B7
DRAWKILLMY			  Near	 DGROUP:03AA
DRAWKILLOPPONENT		  Near	 DGROUP:03EB
DRAWMISSMY			  Near	 DGROUP:048E
DRAWMISSOPPONENT		  Near	 DGROUP:043E
ERRMSG				  Byte	 DGROUP:08BB
ERRTIME				  Word	 DGROUP:0573
EXIT				  Word	 DGROUP:057E
F1				  Word	 DGROUP:097D
FH2				  Word	 DGROUP:0979
FH3				  Word	 DGROUP:0975
FH4				  Word	 DGROUP:0971
FIELD				  Byte	 DGROUP:0422
FIELDM				  Byte	 DGROUP:08E3
FIELDOP				  Byte	 DGROUP:04B2
FIN				  Near	 DGROUP:155A
FINSTATUS			  Near	 DGROUP:0887
FV2				  Word	 DGROUP:097B
FV3				  Word	 DGROUP:0977
FV4				  Word	 DGROUP:0973
FVECT				  Byte	 DGROUP:057B
FYES				  Word	 DGROUP:098B
G				  Near	 DGROUP:17AD
G2				  Near	 DGROUP:18A9
G3				  Near	 DGROUP:1833
GAME				  Near	 DGROUP:1B1E
GET_CHR				  Near	 DGROUP:0290
GG				  Near	 DGROUP:17F4
GG2				  Near	 DGROUP:18E0
GG3				  Near	 DGROUP:1872
GGGGGG				  Byte	 DGROUP:0A6E
HH				  Byte	 DGROUP:09D8
HHH				  Near	 DGROUP:0F4F
HHHH				  Near	 DGROUP:10AF
HIDEC				  Byte	 DGROUP:0416
HNSHIP				  Byte	 DGROUP:041C
HOR				  Byte	 DGROUP:0580
HSHIP1				  Byte	 DGROUP:041D
HSHIP2				  Byte	 DGROUP:041E
HSHIP2HM			  Byte	 DGROUP:08C9
HSHIP2VM			  Byte	 DGROUP:08D6
HSHIP3				  Byte	 DGROUP:041F
HSHIP3HM			  Byte	 DGROUP:08AE
HSHIP3VM			  Byte	 DGROUP:08BC
HSHIP4				  Byte	 DGROUP:0420
HSHIP4HM			  Byte	 DGROUP:0894
HSHIP4VM			  Byte	 DGROUP:08A1
HSHIPM				  Byte	 DGROUP:08F1
II				  Near	 DGROUP:13C4
INCSI				  Near	 DGROUP:07A5
INCSI2				  Near	 DGROUP:073E
INCSI3				  Near	 DGROUP:06C7
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 67
Symbol Table



INCSI4				  Near	 DGROUP:056C
INCSIH3				  Near	 DGROUP:0654
INCSIH4				  Near	 DGROUP:05E3
INT_08H				  Near	 DGROUP:0AA8
INT_08H_OLD			  Word	 DGROUP:0AE0
INT_RET				  Near	 DGROUP:0265
INT_STS				  Byte	 DGROUP:040E
IS_INT				  Near	 DGROUP:0210
KILL				  Byte	 DGROUP:03E7
KOORDMISSMY			  Byte	 DGROUP:04E8
KOORDMISSY			  Byte	 DGROUP:048D
KOORDOPX			  Byte	 DGROUP:043C
KOORDOPY			  Byte	 DGROUP:043D
KOORDX				  Byte	 DGROUP:03E9
KOORDY				  Byte	 DGROUP:03EA
LEFTBORD2F			  Word	 DGROUP:054B
LGTH				  Byte	 DGROUP:098F
LLV				  Word	 DGROUP:03A6
LOC_1729			  Near	 DGROUP:0299
LOC_1730			  Near	 DGROUP:02AD
MANSW				  Near	 DGROUP:0E4A
MANSW1				  Near	 DGROUP:0E9C
MANSW2				  Near	 DGROUP:0EB9
MANSW21				  Near	 DGROUP:0F0A
MANSW23				  Near	 DGROUP:0F21
MANSW24				  Near	 DGROUP:0F38
MANSW3				  Near	 DGROUP:0F5E
MANSW31				  Near	 DGROUP:0FAF
MANSW33				  Near	 DGROUP:0FC6
MANSW34				  Near	 DGROUP:0FDD
MANSW35				  Near	 DGROUP:0FF4
MANSW36				  Near	 DGROUP:100F
MANSW37				  Near	 DGROUP:102D
MANSW371			  Near	 DGROUP:103C
MANSW38				  Near	 DGROUP:105A
MANSW381			  Near	 DGROUP:1069
MANSW39				  Near	 DGROUP:1087
MANSW391			  Near	 DGROUP:1091
MANSWW				  Near	 DGROUP:0E5B
MASP				  Byte	 DGROUP:0BA2
MASTER				  Word	 DGROUP:0567
MAXP				  Byte	 DGROUP:0BA7
MCONDITION41			  Near	 DGROUP:0E12
MCOUNTIN			  Word	 DGROUP:0569
MCOUNTOUT			  Word	 DGROUP:056D
MFLAGERR			  Word	 DGROUP:0575
MGB				  Byte	 DGROUP:07AF
MINP				  Byte	 DGROUP:0BAC
MISS				  Byte	 DGROUP:062B
MISS1				  Byte	 DGROUP:062D
MM				  Near	 DGROUP:190F
MMG				  Near	 DGROUP:1B74
MNEXT40				  Near	 DGROUP:10BB
MNEXT40W			  Near	 DGROUP:10D3
MNEXT41				  Near	 DGROUP:10E2
MNEXT42				  Near	 DGROUP:10F1
MNEXT421			  Near	 DGROUP:1103
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 68
Symbol Table



MNEXT421W			  Near	 DGROUP:1114
MNEXT43				  Near	 DGROUP:111E
MNEXT441			  Near	 DGROUP:117A
MNEXT442			  Near	 DGROUP:118B
MNEXT443			  Near	 DGROUP:11D2
MNEXT444			  Near	 DGROUP:11EC
MNEXT445			  Near	 DGROUP:1205
MNEXT4451			  Near	 DGROUP:1211
MNEXT446			  Near	 DGROUP:1222
MNEXT4461			  Near	 DGROUP:1230
MNEXT447			  Near	 DGROUP:1241
MNEXT4471			  Near	 DGROUP:124F
MNEXT448			  Near	 DGROUP:125E
MNEXT4481			  Near	 DGROUP:1265
MNEXT48				  Near	 DGROUP:127C
MNEXT49				  Near	 DGROUP:1284
MNEXT4A				  Near	 DGROUP:1292
MNEXT4A1			  Near	 DGROUP:129C
MNEXT4A2			  Near	 DGROUP:12AD
MNEXT4A21			  Near	 DGROUP:12CC
MNEXT4B				  Near	 DGROUP:12DE
MNEXT4C				  Near	 DGROUP:12EB
MNEXTS41			  Near	 DGROUP:1132
MNEXTS42			  Near	 DGROUP:1144
MNEXTS43			  Near	 DGROUP:1156
MNEXTS44			  Near	 DGROUP:116E
MOUSENOTF			  Byte	 DGROUP:0B8B
MR				  Near	 DGROUP:14B2
MSG1				  Byte	 DGROUP:0632
MSG11				  Byte	 DGROUP:07A5
MSG2				  Byte	 DGROUP:065D
MSG2H				  Byte	 DGROUP:079B
MSG2V				  Byte	 DGROUP:0791
MSG3				  Byte	 DGROUP:068E
MSG3H				  Byte	 DGROUP:0787
MSG3V				  Byte	 DGROUP:077D
MSG4				  Byte	 DGROUP:06C4
MSG4H				  Byte	 DGROUP:0773
MSG4V				  Byte	 DGROUP:0769
MSG5				  Byte	 DGROUP:06F4
MSGFIN				  Byte	 DGROUP:074B
MSGGB				  Byte	 DGROUP:0741
MSGNIC				  Byte	 DGROUP:0724
MSGRD				  Byte	 DGROUP:075F
MSGRS				  Byte	 DGROUP:0755
MSGSHUR				  Byte	 DGROUP:0831
MSGSHUR1			  Byte	 DGROUP:084B
MWIN				  Byte	 DGROUP:07C9
MWON				  Byte	 DGROUP:07E3
MYERR				  Word	 DGROUP:0981
MYERRPROT			  Byte	 DGROUP:07FD
MYHOD				  Word	 DGROUP:0983
MYNAME				  Byte	 DGROUP:0553
NMR				  Near	 DGROUP:14B5
NO11				  Near	 DGROUP:1AF7
NO2H				  Near	 DGROUP:1ABC
NO2V				  Near	 DGROUP:1A7F
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 69
Symbol Table



NO3H				  Near	 DGROUP:1A41
NO3V				  Near	 DGROUP:1A03
NO4H				  Near	 DGROUP:19C5
NO4V				  Near	 DGROUP:1987
NOFINN				  Near	 DGROUP:1939
NOGB				  Near	 DGROUP:1929
NOGBG				  Near	 DGROUP:1B87
NOI				  Near	 DGROUP:13C1
NORS				  Near	 DGROUP:1949
NO_CHAR				  Near	 DGROUP:021B
NSHIP				  Byte	 DGROUP:0417
OBRRASSTS			  Near	 DGROUP:1719
OHOHO				  Near	 DGROUP:14C6
OK				  Word	 DGROUP:0551
OK1				  Near	 DGROUP:082A
OKFIN				  Word	 DGROUP:0867
OKFINM				  Byte	 DGROUP:0881
OKGB				  Word	 DGROUP:0865
OKGBM				  Byte	 DGROUP:0889
OKHOR2				  Near	 DGROUP:07D2
OKHOR3				  Near	 DGROUP:0687
OKHOR4				  Near	 DGROUP:061C
OKRD				  Word	 DGROUP:086B
OKRDM				  Byte	 DGROUP:086D
OKRS				  Word	 DGROUP:0869
OKRSM				  Byte	 DGROUP:0876
OKVERT2				  Near	 DGROUP:076D
OKVERT3				  Near	 DGROUP:06FE
OKVERT4				  Near	 DGROUP:05AB
ONE				  Near	 DGROUP:03D2
ONEOP				  Near	 DGROUP:0414
OPERRPROT			  Byte	 DGROUP:0817
OPNAME				  Byte	 DGROUP:055D
OUTPUT				  Near	 DGROUP:0283
OUT_CHR				  Near	 DGROUP:0269
OVERRUN				  Byte	 DGROUP:040F
PAGES				  Byte	 DGROUP:0631
PARITY				  Byte	 DGROUP:0413
PP				  Byte	 DGROUP:096D
PRINTS				  Near	 DGROUP:010B
PRINT_DL			  Near	 DGROUP:1BA2
RATE				  Byte	 DGROUP:0415
READ_CHAR			  Near	 DGROUP:021E
RIGHTBORD1F			  Word	 DGROUP:0549
RIGHTBORD2F			  Word	 DGROUP:0547
RV				  Word	 DGROUP:03A8
RVV				  Word	 DGROUP:03A4
SAVEMODE			  Byte	 DGROUP:0630
SAVE_CHAR			  Near	 DGROUP:0236
SAVE_DS				  Word	 DGROUP:040C
SCOUNTIN			  Word	 DGROUP:056B
SCOUNTOUT			  Word	 DGROUP:056F
SER_CS				  Word	 DGROUP:040A
SER_INI				  Near	 DGROUP:014E
SER_INT				  Far	 DGROUP:01EC
SER_INT_1			  Near	 DGROUP:024D
SER_INT_2			  Near	 DGROUP:0259
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 70
Symbol Table



SER_INT_3			  Near	 DGROUP:0263
SER_IP				  Word	 DGROUP:0408
SER_RST				  Near	 DGROUP:01AB
SFLAGERR			  Word	 DGROUP:0579
SFLAGSYN			  Word	 DGROUP:0577
SHEEP1				  Byte	 DGROUP:0B77
SHEEP2				  Byte	 DGROUP:0B63
SHEEP3				  Byte	 DGROUP:0B4F
SHEEP4				  Byte	 DGROUP:0B3B
SHEEPFIELD			  Byte	 DGROUP:0B27
SHIP1				  Byte	 DGROUP:0418
SHIP2				  Byte	 DGROUP:0419
SHIP3				  Byte	 DGROUP:041A
SHIP4				  Byte	 DGROUP:041B
SIZEFIELD			  Byte	 DGROUP:0421
SOURCE				  Byte	 DGROUP:0002
SRC_PTR				  Word	 DGROUP:0404
SSS				  Byte	 DGROUP:096E
STAT				  Word	 DGROUP:0629
STATE				  Byte	 DGROUP:0990
STATE1				  Near	 DGROUP:0B89
STATE4				  Near	 DGROUP:0DC5
STATUS				  Word	 DGROUP:0985
STATUS1				  Near	 DGROUP:0882
STATUSX				  Word	 DGROUP:0987
STATUSY				  Word	 DGROUP:0989
STOPBITS			  Byte	 DGROUP:0414
STR0				  Byte	 DGROUP:0992
STR01				  Byte	 DGROUP:0A1F
STR010				  Byte	 DGROUP:0A72
STR011				  Byte	 DGROUP:0A05
STR04				  Byte	 DGROUP:0A8C
STR041				  Byte	 DGROUP:0ACB
STR11				  Byte	 DGROUP:0B15
STR2				  Byte	 DGROUP:0ADB
STR22				  Byte	 DGROUP:0AE5
STRC				  Byte	 DGROUP:0A43
STRHM				  Byte	 DGROUP:0A2E
STRRT				  Byte	 DGROUP:0A59
SYNTIME				  Word	 DGROUP:0571
TOP				  Byte	 DGROUP:091F
TOPBORD				  Word	 DGROUP:054F
UFF				  Near	 DGROUP:1B11
UFFG				  Near	 DGROUP:1B94
UNCOR				  Near	 DGROUP:1B0E
VERT				  Byte	 DGROUP:0622
VID				  Byte	 DGROUP:062F
VVODNIC				  Near	 DGROUP:092C
WAIT_FREE			  Near	 DGROUP:01AD
WAIT_LINE			  Near	 DGROUP:0270
WIN				  Word	 DGROUP:057C
WRCLEAN				  Near	 DGROUP:088A
WRERRMSG			  Near	 DGROUP:089C
WRHOD				  Near	 DGROUP:0A49
WRINF				  Near	 DGROUP:0995
WRITENIC			  Near	 DGROUP:0950
WRNIC				  Near	 DGROUP:0901
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 71
Symbol Table



WRWAIT				  Near	 DGROUP:09F6
WRWIN				  Near	 DGROUP:08C7
WRWON				  Near	 DGROUP:08E4
WSTATE4				  Byte	 DGROUP:0991
WTM				  Byte	 DGROUP:0A13
WWWW				  Near	 DGROUP:0949
X				  Byte	 DGROUP:0623
X1				  Word	 DGROUP:0625
XK				  Byte	 DGROUP:097F
XM				  Byte	 DGROUP:0901
XX				  Byte	 DGROUP:0000
XXX				  Byte	 DGROUP:096F
Y				  Byte	 DGROUP:0624
Y1				  Word	 DGROUP:0627
YK				  Byte	 DGROUP:0980
YM				  Byte	 DGROUP:0910
YY				  Byte	 DGROUP:0001
YYY				  Byte	 DGROUP:0970
_1				  Near	 DGROUP:0AE4
_2				  Near	 DGROUP:157E
_CCI				  Near	 DGROUP:036F
_CCI2				  Near	 DGROUP:036B
_CCL2				  Near	 DGROUP:0984
_CHOOSEP			  Near	 DGROUP:0B0D
_COMP				  Near	 DGROUP:0D29
_D1				  Near	 DGROUP:1590
_DDI				  Near	 DGROUP:038D
_DDI2				  Near	 DGROUP:0389
_DSQUARE			  Near	 DGROUP:0367
_ENDO				  Near	 DGROUP:170E
_ENDO1				  Near	 DGROUP:16E9
_INP				  Near	 DGROUP:15BB
_INTSET				  Near	 DGROUP:1591
_MOUSENF			  Near	 DGROUP:0B17
_MS				  Near	 DGROUP:157B
_NA				  Near	 DGROUP:1703
_ND				  Near	 DGROUP:1686
_ND1				  Near	 DGROUP:168E
_NDO				  Near	 DGROUP:166C
_NO				  Near	 DGROUP:0ACB
_NOAH				  Near	 DGROUP:09C2
_NOFIN				  Near	 DGROUP:0ADE
_OBR1				  Near	 DGROUP:165D
_START				  Near	 DGROUP:0100
_STATE0				  Near	 DGROUP:0B5E
_STATE01			  Near	 DGROUP:0B72
_STATE01_1A			  Near	 DGROUP:0B83
_STATE1				  Near	 DGROUP:0BB2
_STATE11			  Near	 DGROUP:0BA0
_STATE12			  Near	 DGROUP:0CDB
_STATE1_2A			  Near	 DGROUP:0C7F
_STATE1_2B			  Near	 DGROUP:0CDF
_STATE1_2B1			  Near	 DGROUP:0D0D
_STATE1_A6			  Near	 DGROUP:0C49
_STATE1_A7			  Near	 DGROUP:0C5B
_STATE1_A8			  Near	 DGROUP:0C6D
_STATE1_B1			  Near	 DGROUP:0C8D
Turbo Assembler	 Version 3.1	    01/08/11 01:43:35	    Page 72
Symbol Table



_STATE1_B11			  Near	 DGROUP:0C9C
_STATE1_B12			  Near	 DGROUP:0CAC
_STATE1_B13			  Near	 DGROUP:0CC3
_STATE1_B14			  Near	 DGROUP:0CCB
_STATE1_B2			  Near	 DGROUP:0D48
_STATE2				  Near	 DGROUP:0D98
_STATE21			  Near	 DGROUP:0BC8
_STATE22			  Near	 DGROUP:0BD7
_STATE23			  Near	 DGROUP:0BE6
_STATE2AND1			  Near	 DGROUP:0C00
_STATE2_3A			  Near	 DGROUP:0C11
_STATE2_A4			  Near	 DGROUP:0C30
_SUB				  Near	 DGROUP:16CC
_VSET				  Near	 DGROUP:15AE
_VVNICK				  Near	 DGROUP:0B1F
_WAITC				  Near	 DGROUP:0AC5
_Z				  Near	 DGROUP:09C7

Macro Name

MOVPP
NEWLINE
POPR
PUSHR
SEP

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0BB1 Word	  Public  DATA
  _TEXT				  16  1BAB Word	  Public  CODE

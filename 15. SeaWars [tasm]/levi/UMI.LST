Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 1
umi.ASM



      1					 locals	@@
      2	    0000				 .model	tiny
      3	    0000				 .code
      4						 .386
      5						 org 100h
      6
      7	    0100			 _start:
      8	    0100  E9 0A01			 jmp	 _1
      9	    0103			 .data
     10
     11	    0000  00			 xx		 db	 0
     12	    0001  00			 yy		 db	 0
     13		  =0400			 Buf_Size	 equ	 1024		; pазмеp буфеpа
     14	    0002  0402*(00)		 Source		 db	 Buf_Size+2 dup	(0) ; буфеp пpиема символов
     15	    0404  0002r			 Src_ptr	 dw	 Source		; указатель позиции в буфеpе
     16	    0406  0000			 Count		 dw	 0		; количество символов в	буфеpе
     17	    0408  0000			 Ser_ip		 dw	 0		; стаpый адpес Int 0Ch
     18	    040A  0000			 Ser_cs		 dw	 0
     19	    040C  0000			 Save_ds	 dw	 0		; служебные пеpеменные
     20	    040E  00			 Int_sts	 db	 0
     21	    040F  00			 Overrun	 db	 0
     22	    0410  00			 hidec	 db	 0
     23	    0411  00			 Nship		 db	 0
     24	    0412  00			 ship1		 db	 0
     25	    0413  00			 ship2		 db	 0
     26	    0414  00			 ship3		 db	 0
     27	    0415  00			 ship4		 db	 0
     28	    0416  00			 hNship		 db	 0
     29	    0417  01			 hship1		 db	 1
     30	    0418  00			 hship2		 db	 0
     31	    0419  00			 hship3		 db	 0
     32	    041A  00			 hship4		 db	 0
     33	    041B  06			 sizeField	 db	 6
     34					 ;делаем поле на 1 строчку/столбец больше с каждой стороны для удобства	проверок расстановки+
     35					 кораблей т е нумерация	будет с	1
     36	    041C  00 00	00 00 00 00 00+	 field		 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ;0 - пустая клетка   +
     37		  00 00	00 00 00	 поля
     38	    0428  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ;1 - здесь стоит	    +
     39		  00 00	00 00 00	 корабль, который еще не подбили
     40	    0434  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ;2 - раненый/убитый  +
     41		  00 00	00 00 00	 корабль
     42	    0440  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ;3 - сюда уже	    +
     43		  00 00	00 00 00	 стреляли но здесь ничего нет
     44	    044C  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     45		  00 00	00 00 00
     46	    0458  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     47		  00 00	00 00 00
     48	    0464  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     49		  00 00	00 00 00
     50	    0470  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     51		  00 00	00 00 00
     52	    047C  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     53		  00 00	00 00 00
     54	    0488  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     55		  00 00	00 00 00
     56	    0494  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     57		  00 00	00 00 00
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 2
umi.ASM



     58	    04A0  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     59		  00 00	00 00 00
     60	    04AC  05 05	05 05 05 05 05+	 fieldOp	 db	 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 ;5 - края,это не	поле
     61		  05 05	05 05 05
     62	    04B8  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5 ;1 - здесь корабль   +
     63		  00 00	00 00 05	 противника
     64	    04C4  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5 ;2 - сюда стреляла,  +
     65		  00 00	00 00 05	 либо точно ничего нет
     66	    04D0  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     67		  00 00	00 00 05
     68	    04DC  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     69		  00 00	00 00 05
     70	    04E8  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     71		  00 00	00 00 05
     72	    04F4  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     73		  00 00	00 00 05
     74	    0500  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     75		  00 00	00 00 05
     76	    050C  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     77		  00 00	00 00 05
     78	    0518  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     79		  00 00	00 00 05
     80	    0524  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     81		  00 00	00 00 05
     82	    0530  05 05	05 05 05 05 05+			 db	 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5
     83		  05 05	05 05 05
     84	    053C  00 00	00 00 00	 allPar		 db	 0 , 0 , 0 , 0 , 0
     85	    0541  0000			 rightBord2f	 dw	 0
     86	    0543  0000			 rightBord1f	 dw	 0
     87	    0545  0128			 leftBord2f	 dw	 296
     88	    0547  0000			 bottomBord	 dw	 0
     89	    0549  0030			 topBord	 dw	 48
     90	    054B  0000			 ok		 dw	 0
     91	    054D  51 00	00 00 00 00 00+	 myName		 db	 51h , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     92		  00 00	00
     93	    0557  4E 6F	00 00 00 00 00+	 opName		 db	 4eh , 6fh , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     94		  00 00	00
     95	    0561  0000			 master		 dw	 0;slave=0 master =1
     96	    0563  0000			 McountIn	 dw	 0
     97	    0565  0000			 ScountIn	 dw	 0
     98	    0567  0000			 McountOut	 dw	 0
     99	    0569  0000			 win		 dw	 0
    100	    056B  0000			 exit		 dw	 0
    101	    056D  50*(00)		 clean		 db	 80 dup(0)
    102	    05BD  50*(00)		 clean1		 db	 80 dup(00h)
    103	    060D  01			 x		 db	 1
    104	    060E  01			 y		 db	 1
    105	    060F  0001			 x1		 dw	 1
    106	    0611  0001			 y1		 dw	 1
    107	    0613  ????			 stat		 dw	 ?
    108
    109	    0615  02*(03)		 miss		 db	 2 dup (3)
    110	    0617  02*(03)		 miss1		 db	 2 dup (3)
    111	    0619  56 76	65 64 69 20 79+	 msgNic		 db	 'Vvedi	your Nic = 10 simbol : '
    112		  6F 75	72 20 4E 69 63+
    113		  20 3D	20 31 30 20 73+
    114		  69 6D	62 6F 6C 20 3A+
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 3
umi.ASM



    115		  20
    116	    0636  47 6F	6F 64 2D 42 79+	 msgGB		 db	 'Good-Bye  '
    117		  65 20	20
    118	    0640  46 69	6E 69 73 68 20+	 msgFin		 db	 'Finish    '
    119		  20 20	20
    120	    064A  52 65	73 74 61 72 74+	 msgRS		 db	 'Restart   '
    121		  20 20	20
    122	    0654  52 65	61 64 79 20 20+	 msgRD		 db	 'Ready	    '
    123		  20 20	20
    124	    065E  34 2D	76 65 72 74 69+	 msg4v		 db	 '4-verticl '
    125		  63 6C	20
    126	    0668  34 2D	68 6F 72 69 7A+	 msg4h		 db	 '4-horizl  '
    127		  6C 20	20
    128	    0672  33 2D	76 65 72 74 69+	 msg3v		 db	 '3-verticl '
    129		  63 6C	20
    130	    067C  33 2D	68 6F 72 69 7A+	 msg3h		 db	 '3-horizl  '
    131		  6C 20	20
    132	    0686  32 2D	76 65 72 74 63+	 msg2v		 db	 '2-vertcl  '
    133		  6C 20	20
    134	    0690  32 2D	68 6F 72 7A 6C+	 msg2h		 db	 '2-horzl   '
    135		  20 20	20
    136	    069A  31 2D	73 68 65 65 70+	 msg11		 db	 '1-sheep =)'
    137		  20 3D	29
    138	    06A4  59 6F	75 20 6F 70 70+	 mGB			 db	 'You opponent exit!	    '
    139		  6F 6E	65 6E 74 20 65+
    140		  78 69	74 21 20 20 20+
    141		  20 20	20 20 20
    142	    06BE  59 65	61 61 61 61 68+	 mWin		 db	 'Yeaaaahhhh wiiinnn!!:)    '
    143		  68 68	68 20 77 69 69+
    144		  69 6E	6E 6E 21 21 3A+
    145		  29 20	20 20 20
    146	    06D8  59 6F	75 20 6C 6F 6F+	 mWon		 db	 'You looser:(		    '
    147		  73 65	72 3A 28 20 20+
    148		  20 20	20 20 20 20 20+
    149		  20 20	20 20 20
    150	    06F2  45 72	72 6F 72 20 69+	 myErrProt	 db	 'Error	in my protocol	    '
    151		  6E 20	6D 79 20 70 72+
    152		  6F 74	6F 63 6F 6C 20+
    153		  20 20	20 20 20
    154	    070C  45 72	72 6F 72 20 69+	 opErrProt	 db	 'Error	in opponent protocol'
    155		  6E 20	6F 70 70 6F 6E+
    156		  65 6E	74 20 70 72 6F+
    157		  74 6F	63 6F 6C
    158	    0726  59 6F	75 72 20 65 6E+	 msgShur	 db	 'Your enemy sdalsya x_X    '
    159		  65 6D	79 20 73 64 61+
    160		  6C 73	79 61 20 78 5F+
    161		  58 20	20 20 20
    162	    0740  53 64	61 65 73 73 68+	 msgShur1	 db	 'Sdaesshsja?o_O	    '
    163		  73 6A	61 3F 6F 5F 4F+
    164		  20 20	20 20 20 20 20+
    165		  20 20	20 20 20
    166	    075A  0000			 okGB		 dw	 0
    167	    075C  0000			 okFin		 dw	 0
    168	    075E  0000			 okRS		 dw	 0
    169	    0760  0000			 okRD		 dw	 0
    170	    0762  00			 pp		 db	 0
    171	    0763  00			 xxx		 db	 0
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 4
umi.ASM



    172	    0764  00			 yyy		 db	 0
    173	    0765  0000			 fh4		 dw	 0
    174	    0767  0000			 fv4		 dw	 0
    175	    0769  0000			 fh3		 dw	 0
    176	    076B  0000			 fv3		 dw	 0
    177	    076D  0000			 fh2		 dw	 0
    178	    076F  0000			 fv2		 dw	 0
    179	    0771  0000			 f1		 dw	 0
    180	    0773  00			 xk		 db	 0
    181	    0774  00			 yk		 db	 0
    182	    0775  0000			 myErr		 dw	 0
    183	    0777  0000			 myHod		 dw	 0
    184	    0779  0000			 status		 dw	 0
    185	    077B  0000			 statusx	 dw	 0
    186	    077D  0000			 statusy	 dw	 0
    187	    077F  0000			 fyes		 dw	 0
    188	    0781  0000			 Sflagerr	 dw	 0
    189	    0783  0000			 Mflagerr	 dw	 0
    190	    0785  00			 slaveR	 db	 0
    191	    0786  01			 cansenda	 db	 1
    192	    0787  00			 b2	 db	 0
    193	    0788  00			 lgth	 db	 0
    194	    0789  00			 state	 db	 0
    195	    078A  00			 wstate4 db	 0
    196	    078B  53 69	7A 65 20 6F 66+	 sheepField	 db	 'Size of field:   7  '
    197		  20 66	69 65 6C 64 3A+
    198		  20 20	20 37 20 20
    199	    079F  41 6D	6F 75 6E 74 20+	 sheep4	 db	 'Amount of:  ',0Dbh,0Dbh,0Dbh,0Dbh,' 1	 '
    200		  6F 66	3A 20 20 DB DB+
    201		  DB DB	20 31 20 20
    202	    07B3  41 6D	6F 75 6E 74 20+	 sheep3	 db	 'Amount of:  ',0Dbh,0Dbh,0Dbh,'  2  '
    203		  6F 66	3A 20 20 DB DB+
    204		  DB 20	20 32 20 20
    205	    07C7  41 6D	6F 75 6E 74 20+	 sheep2	 db	 'Amount of:  ',0Dbh,0Dbh,'   5	 '
    206		  6F 66	3A 20 20 DB DB+
    207		  20 20	20 35 20 20
    208	    07DB  41 6D	6F 75 6E 74 20+	 sheep1		 db	 'Amount of:  ',0Dbh,'	  a  '
    209		  6F 66	3A 20 20 DB 20+
    210		  20 20	20 61 20 20
    211	    07EF  4D 6F	75 73 65 73 20+	 mouseNotF	 db	 'Mouses Driver	Not Found'
    212		  44 72	69 76 65 72 20+
    213		  4E 6F	74 20 46 6F 75+
    214		  6E 64
    215	    0806  07 01	02 05 0A	 masp	 db	 07h,01h,02h,05h,0Ah
    216	    080B  0A 01	02 05 0A	 maxp	 db	 0Ah,01h,02h,05h,0Ah
    217	    0810  06 00	00 00 01	 minp	 db	 06h,00h,00h,00h,01h
    218
    219	    0815			 .code
    220
    221					 include macro.asm
1   222					 pushr	 macro	 registers
1   223						 irp	 reg, <registers>
1   224							 push	 reg
1   225						 endm
1   226					 endm	 pushr
1   227
1   228					 popr	 macro	 registers
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 5
umi.ASM



1   229						 irp	 reg, <registers>
1   230							 pop	 reg
1   231						 endm
1   232					 endm	 popr
1   233
1   234					 movpp	 macro	 reg1, reg2
1   235						 push	 reg2
1   236						 pop	 reg1
1   237					 endm	 movpp
1   238
1   239
1   240					 newline macro
1   241						 pushr	 <ax, dx, ds>
1   242						 jmp	 @@tmp1
1   243					 msg	 db	 0ah, 0dh, '$'
1   244						 @@tmp1:
1   245						 movpp	 ds, cs
1   246						 lea	 dx, msg
1   247						 mov	 ah, 9h
1   248						 int	 21h
1   249						 popr	 <ds, dx, ax>
1   250					 endm newline
1   251
1   252					 sep macro
1   253						 pushr	 <ax, dx, ds>
1   254						 jmp	 @@tmp2
1   255						 msg2	 db	 '----', 0ah, 0dh, '$'
1   256						 @@tmp2:
1   257						 movpp	 ds, cs
1   258						 lea	 dx, msg2
1   259						 mov	 ah, 9h
1   260						 int	 21h
1   261						 popr	 <ds, dx, ax>
1   262					 endm sep
1   263	    0103  07*(00) 24		 buffer	 db	 7 dup (0), '$'
1   264
1   265						 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1   266						 ; Prints signed decimal number	to screen.
1   267						 ; Call:
1   268						 ; push	number
1   269						 ; call	prints
1   270						 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1   271
1   272	    010B			 prints	proc	 near
1   273	    010B  55				 push	 bp
1   274	    010C  8B EC				 mov	 bp, sp
1   275	    010E  50				 push	 ax
1   276	    010F  53				 push	 bx
1   277	    0110  51				 push	 cx
1   278	    0111  52				 push	 dx
1   279	    0112  56				 push	 si
1   280	    0113  1E				 push	 ds
1   281						 movpp	 ds, cs
2   282	    0114  0E				 push	 cs
2   283	    0115  1F				 pop	 ds
1   284
1   285	    0116  8B 46	04			 mov	 ax, [bp+4]
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 6
umi.ASM



1   286	    0119  33 F6				 xor	 si, si
1   287	    011B  85 C0				 test	 ax, ax
1   288	    011D  79 03				 jns	 @@0
1   289	    011F  46				 inc	 si
1   290	    0120  F7 D8				 neg	 ax
1   291	    0122			 @@0:
1   292	    0122  BB 010Ar			 lea	 bx, buffer+7
1   293	    0125  B9 000A			 mov	 cx, 10
1   294
1   295	    0128			 @@1:
1   296	    0128  33 D2				 xor	 dx, dx
1   297	    012A  F7 F1				 div	 cx
1   298	    012C  83 C2	30			 add	 dx, '0'
1   299	    012F  4B				 dec	 bx
1   300	    0130  88 17				 mov	 [bx], dl
1   301	    0132  0B C0				 or	 ax, ax
1   302	    0134  75 F2				 jnz	 @@1
1   303
1   304	    0136  85 F6				 test	 si, si
1   305	    0138  74 04				 jz	 @@2
1   306	    013A  4B				 dec	 bx
1   307	    013B  C6 07	2D			 mov	 byte ptr [bx],	'-'
1   308	    013E			 @@2:
1   309	    013E  8B D3				 mov	 dx, bx
1   310	    0140  B4 09				 mov	 ah, 9
1   311	    0142  CD 21				 int	 21h
1   312
1   313	    0144  1F				 pop	 ds
1   314	    0145  5E				 pop	 si
1   315	    0146  5A				 pop	 dx
1   316	    0147  59				 pop	 cx
1   317	    0148  5B				 pop	 bx
1   318	    0149  58				 pop	 ax
1   319	    014A  5D				 pop	 bp
1   320	    014B  C2 0002			 ret	 2
1   321	    014E			 prints	 endp
1   322
1   323
    324					 include com.asm
1   325	    014E			 .code
1   326
1   327	    014E			 Ser_Ini proc near
1   328	    014E  50				 push ax ; сохранить регистры
1   329	    014F  52				 push dx
1   330	    0150  53				 push bx
1   331	    0151  06				 push es
1   332	    0152  E4 21				 in al,21h ; IMR 1-го контролера прерываний
1   333	    0154  0C 10				 or al,10h ; запретить прерывание IRQ4 от COM1
1   334	    0156  E6 21				 out 21h,al
1   335	    0158  B0 0C				 mov al,0Ch
1   336	    015A  B4 35				 mov ah,35h
1   337	    015C  CD 21				 int 21h ; взять вектор	Int 0Ch	в es:bx
1   338	    015E  89 1E	0408r			 mov Ser_ip,bx ; и сохранить его
1   339	    0162  8C 06	040Ar			 mov Ser_cs,es
1   340	    0166  B0 0C				 mov al,0Ch
1   341	    0168  BA 01ECr			 mov dx,offset Ser_int
1   342	    016B  1E				 push ds
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 7
umi.ASM



1   343	    016C  8C CB				 mov bx,cs
1   344	    016E  8E DB				 mov ds,bx
1   345	    0170  B4 25				 mov ah,25h
1   346	    0172  CD 21				 int 21h ; установить Int 0Ch =	ds:dx
1   347	    0174  1F				 pop ds
1   348	    0175  07				 pop es
1   349	    0176  5B				 pop bx
1   350	    0177  FA				 cli ; запретить прерывания
1   351	    0178  E4 21				 in al,21h ; IMR 1-го контроллера прерываний
1   352	    017A  24 EF				 and al,not 10h
1   353	    017C  E6 21				 out 21h,al ; разрешить	прерывания от COM1
1   354	    017E  BA 03FB			 mov dx,3FBh ; регистр управления линией
1   355	    0181  EC				 in al,dx
1   356	    0182  0C 80				 or al,80h ; установить	бит DLAB
1   357	    0184  EE				 out dx,al
1   358	    0185  BA 03F8			 mov dx,3F8h
1   359	    0188  B0 0C				 mov al,0Ch
1   360	    018A  EE				 out dx,al ; младший байт для скорости 1200 бод
1   361	    018B  42				 inc dx
1   362	    018C  B0 00				 mov al,0
1   363	    018E  EE				 out dx,al ; старший байт скорости
1   364	    018F  BA 03FB			 mov dx,3FBh ; регистр управления линией
1   365	    0192  B0 1F				 mov al,00011111b ; 8 бит, 2 стоп-бита,	без четности
1   366	    0194  EE				 out dx,al
1   367	    0195  BA 03F9			 mov dx,3F9h ; регистр разрешения прерываний
1   368	    0198  B0 01				 mov al,1 ; разрешить прерывания по приему
1   369	    019A  EE				 out dx,al
1   370	    019B  90				 nop ; и чуть-чуть подождать
1   371	    019C  90				 nop
1   372	    019D  BA 03FC			 mov dx,3FCh ; регистр управления модемом
1   373	    01A0  B0 0B				 mov al,00001011b ; установить DTR, RTS	и OUT2
1   374	    01A2  EE				 out dx,al
1   375	    01A3  FB				 sti ; разрешить прерывания
1   376	    01A4  BA 03F8			 mov dx,3F8h ; регистр данных
1   377	    01A7  EC				 in al,dx ; сбросить буфер приема
1   378	    01A8  5A				 pop dx
1   379	    01A9  58				 pop ax
1   380	    01AA  C3			 ret
1   381	    01AB			 Ser_Ini endp
1   382					 ;ЙНННННННННННННННННННННННННННННННННННННННННННННННННННННННННННН»
1   383					 ;є Подпрограмма отключения стыка COM1.	є
1   384					 ;ИННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННј
1   385	    01AB			 Ser_Rst proc near
1   386	    01AB  50				 push ax ; сохранить регистры
1   387	    01AC  52				 push dx
1   388	    01AD			 Wait_Free:
1   389	    01AD  BA 03FD			 mov dx,3FDh ; регистр состояния линии
1   390	    01B0  EC				 in al,dx
1   391	    01B1  EB 00				 jmp short $+2 ; короткая задержка
1   392	    01B3  A8 60				 test al,60h ; передача	окончена?
1   393	    01B5  74 F6				 jz Wait_Free ;	ждем, если нет
1   394	    01B7  BA 03F9			 mov dx,3F9h ; регистр разрешения прерываний
1   395	    01BA  B0 00				 mov al,0 ; запретить прерывания
1   396	    01BC  EE				 out dx,al
1   397	    01BD  EB 00				 jmp short $+2 ; еще подождем...
1   398	    01BF  EB 00				 jmp short $+2
1   399	    01C1  BA 03FC			 mov dx,3FCh ; регистр управления модемом
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 8
umi.ASM



1   400	    01C4  B0 03				 mov al,00000011b ; активировать DTR и RTS
1   401	    01C6  EE				 out dx,al
1   402	    01C7  EB 00				 jmp short $+2
1   403	    01C9  EB 00				 jmp short $+2
1   404	    01CB  53				 push bx
1   405	    01CC  B0 0C				 mov al,0Ch
1   406	    01CE  8B 16	0408r			 mov dx,Ser_ip
1   407	    01D2  1E				 push ds
1   408	    01D3  8B 1E	040Ar			 mov bx,Ser_cs
1   409	    01D7  8E DB				 mov ds,bx
1   410	    01D9  B4 25				 mov ah,25h
1   411	    01DB  CD 21				 int 21h ; восстановить	вектор Int 0Ch
1   412	    01DD  1F				 pop ds
1   413	    01DE  5B				 pop bx
1   414	    01DF  FA				 cli ; запрет прерываний
1   415	    01E0  E4 21				 in al,21h ; читать маску прерываний
1   416	    01E2  EB 00				 jmp short $+2
1   417	    01E4  0C 10				 or al,10h ; запретить IRQ4
1   418	    01E6  E6 21				 out 21h,al
1   419	    01E8  FB				 sti ; разрешение прерываний
1   420	    01E9  5A				 pop dx
1   421	    01EA  58				 pop ax
1   422	    01EB  C3			 ret
1   423	    01EC			 Ser_Rst endp
1   424					 ;ЙНННННННННННННННННННННННННННННННННННННННННННННННННННННННННННН»
1   425					 ;є Подпрограмма обработки прерываний от COM1. є
1   426					 ;ИННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННј
1   427	    01EC			 Ser_Int proc far
1   428	    01EC  50				 push ax
1   429	    01ED  52				 push dx
1   430	    01EE  1E				 push ds
1   431						 movpp	 ds,cs
2   432	    01EF  0E				 push	 cs
2   433	    01F0  1F				 pop	 ds
1   434	    01F1  BA 03FA			 mov dx,3FAh ; регистр идентификации прерываний
1   435	    01F4  EC				 in al,dx
1   436	    01F5  A2 040Er			 mov Int_Sts,al; сохраним его содержимое
1   437	    01F8  A8 01				 test al,1 ; есть отложенные прерывания?
1   438	    01FA  74 14				 jz Is_Int ; да
1   439	    01FC  8F 06	040Cr			 pop Save_ds ; нет, передаем управление
1   440	    0200  5A				 pop dx	; старому обработчику Int 0Ch
1   441	    0201  58				 pop ax
1   442	    0202  FF 36	040Ar			 push Ser_cs
1   443	    0206  FF 36	0408r			 push Ser_ip
1   444	    020A  FF 36	040Cr			 push Save_ds
1   445	    020E  1F				 pop ds
1   446	    020F  CB			 ret ; длинный переход
1   447	    0210			 Is_Int:
1   448	    0210  B0 64				 mov al,64h ; послать EOI для IRQ4
1   449	    0212  E6 20				 out 20h,al ; в	1-й контроллер прерываний
1   450	    0214  F6 06	040Er 04		 test Int_Sts,4	; прерывание по	приему?
1   451	    0219  75 03				 jnz Read_Char ; да
1   452	    021B			 No_Char:
1   453	    021B  FB				 sti ; нет, разрешить прерывания
1   454	    021C  EB 47				 jmp Int_Ret ; и закончить обработку Int 0Ch
1   455	    021E			 Read_Char:
1   456	    021E  BA 03FD			 mov dx,3FDh ; регистр состояния линии
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 9
umi.ASM



1   457	    0221  EC				 in al,dx
1   458	    0222  24 02				 and al,2
1   459	    0224  A2 040Fr			 mov Overrun,al; ovvrrun<>0, если была потеря символа
1   460	    0227  BA 03F8			 mov dx,3F8h ; регистр данных
1   461	    022A  EC				 in al,dx ; вводим символ
1   462					 ;or al,al ; если принят нуль,
1   463					 ;jz No_Char ; то игнорируем его
1   464	    022B  53				 push bx
1   465	    022C  8A 26	040Fr			 mov ah,Overrun
1   466	    0230  0A E4				 or ah,ah ; предыдущий символ потерян?
1   467	    0232  74 02				 jz Save_Char ;	нет
1   468	    0234  8A E0				 mov ah,al ; да,
1   469					 ;mov al,7 ; заменяем его на звонок (07h)
1   470	    0236			 Save_Char:
1   471	    0236  8B 1E	0404r			 mov bx,Src_ptr; заносим символ	в буфер
1   472	    023A  88 07				 mov [bx],al
1   473	    023C  FF 06	0404r			 inc Src_ptr ; и обновляем счетчики
1   474	    0240  43				 inc bx
1   475	    0241  81 FB	0402r			 cmp bx,offset Src_ptr-2 ; если	конец буфера
1   476	    0245  72 06				 jb Ser_Int_1
1   477	    0247  C7 06	0404r 0002r		 mov Src_ptr,offset Source ; то	"зацикливаем" на начало
1   478	    024D			 Ser_Int_1:
1   479	    024D  81 3E	0406r 0400		 cmp Count,Buf_Size ; буфер полон?
1   480	    0253  73 04				 jae Ser_Int_2 ; да
1   481	    0255  FF 06	0406r			 inc Count ; нет, учесть символ
1   482	    0259			 Ser_Int_2:
1   483	    0259  0A E4				 or ah,ah ; если была потеря символа
1   484	    025B  74 06				 jz Ser_Int_3
1   485	    025D  8A C4				 mov al,ah ; то	занести	в буфер	сам символ
1   486	    025F  32 E4				 xor ah,ah
1   487	    0261  EB D3				 jmp short Save_Char
1   488	    0263			 Ser_Int_3:
1   489	    0263  5B				 pop bx
1   490	    0264  FB				 sti ; разрешить прерывания
1   491	    0265			 Int_Ret:
1   492	    0265  1F				 pop ds
1   493	    0266  5A				 pop dx
1   494	    0267  58				 pop ax
1   495	    0268  CF			 iret
1   496	    0269			 Ser_Int endp
1   497					 ;ЙНННННННННННННННННННННННННННННННННННННННННННННННННННННННННННН»
1   498					 ;є Подпрограмма вывода	символа	AL в порт. є
1   499					 ;є При	ошибке возвращает CF=1,	иначе CF=0. є
1   500					 ;ИННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННј
1   501	    0269			 Out_Chr proc near
1   502	    0269  50				 push ax
1   503	    026A  51				 push cx
1   504	    026B  52				 push dx
1   505	    026C  8A E0				 mov ah,al
1   506	    026E  2B C9				 sub cx,cx
1   507	    0270			 Wait_Line:
1   508	    0270  BA 03FD			 mov dx,3FDh ; регистр состояния линии
1   509	    0273  EC				 in al,dx
1   510	    0274  A8 20				 test al,20h ; стык готов к передаче?
1   511	    0276  75 0B				 jnz Output ; да
1   512	    0278  EB 00				 jmp short $+2
1   513	    027A  EB 00				 jmp short $+2
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 10
umi.ASM



1   514	    027C  E2 F2				 loop Wait_Line	; нет, ждем
1   515	    027E  5A				 pop dx
1   516	    027F  59				 pop cx
1   517	    0280  58				 pop ax
1   518	    0281  F9				 stc ; нет готовности порта
1   519	    0282  C3			 ret
1   520	    0283			 Output:
1   521	    0283  8A C4				 mov al,ah
1   522	    0285  BA 03F8			 mov dx,3F8h ; регистр данных
1   523	    0288  EB 00				 jmp short $+2
1   524	    028A  EE				 out dx,al ; вывести символ
1   525	    028B  5A				 pop dx
1   526	    028C  59				 pop cx
1   527	    028D  58				 pop ax
1   528	    028E  F8				 clc ; нормальный возврат
1   529	    028F  C3			 ret
1   530	    0290			 Out_Chr endp
1   531					 ;ЙНННННННННННННННННННННННННННННННННННННННННННННННННННННННННННН»
1   532					 ;є Подпрограмма ввода символа из порта	в AL. є
1   533					 ;є Если буфер пуст, возвращает	CF=1, иначе CF=0. є
1   534
1   535	    0290			 Get_Chr proc near
1   536	    0290  83 3E	0406r 00		 cmp Count,0 ; буфер пуст?
1   537	    0295  75 02				 jne loc_1729 ;	нет
1   538	    0297  F9				 stc ; да, возврат по ошибке
1   539	    0298  C3			 ret
1   540	    0299			 loc_1729:
1   541	    0299  56				 push si
1   542	    029A  FA				 cli ; запретим	прерывания
1   543	    029B  8B 36	0404r			 mov si,Src_ptr
1   544	    029F  2B 36	0406r			 sub si,Count
1   545	    02A3  81 FE	0002r			 cmp si,offset Source
1   546	    02A7  73 04				 jae loc_1730
1   547	    02A9  81 C6	0400			 add si,Buf_Size
1   548	    02AD			 loc_1730:
1   549	    02AD  8A 04				 mov al,[si] ; выберем символ
1   550	    02AF  FF 0E	0406r			 dec Count ; и уменьшим	счечик
1   551	    02B3  FB				 sti ; разрешение прерываний
1   552	    02B4  5E				 pop si
1   553	    02B5  F8				 clc ; и нормальный возврат
1   554	    02B6  C3			 ret
1   555	    02B7			 Get_Chr endp
1   556
1   557
    558					 include mdraw.asm
1   559	    02B7			 drawField proc	near
1   560	    02B7  50				 push	 ax
1   561	    02B8  53				 push	 bx
1   562	    02B9  51				 push	 cx
1   563	    02BA  52				 push	 dx
1   564	    02BB  56				 push	 si
1   565	    02BC  57				 push	 di
1   566	    02BD  55				 push	 bp
1   567
1   568	    02BE  8A 0E	041Br			 mov	 cl,sizeField
1   569	    02C2  B8 0018			 mov	 ax,24
1   570	    02C5  F6 E1				 mul	 cl
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 11
umi.ASM



1   571	    02C7  05 0004			 add	 ax,4
1   572	    02CA  A3 03A4r			 mov	 rvv,ax
1   573	    02CD  A3 0543r			 mov	 rightBord1f,ax
1   574
1   575	    02D0  8A 0E	041Br			 mov	 cl,sizeField
1   576	    02D4  B8 001C			 mov	 ax,2*0Eh
1   577	    02D7  F6 E1				 mul	 cl
1   578	    02D9  05 0031			 add	 ax,49
1   579	    02DC  A3 0547r			 mov	 bottomBord,ax
1   580
1   581	    02DF  B4 0C				 mov	 ah,0Ch
1   582	    02E1  B0 1E				 mov	 al,00011110b
1   583	    02E3  32 FF				 xor	 bh,bh
1   584	    02E5  E8 007F			 call	 _dSquare
1   585
1   586	    02E8  A1 03A4r			 mov	 ax,rvv
1   587	    02EB  05 0128			 add	 ax,296
1   588	    02EE  A3 03A4r			 mov	 rvv,ax
1   589	    02F1  A3 0541r			 mov	 rightBord2f,ax
1   590
1   591	    02F4  B4 0C				 mov	 ah,0Ch
1   592	    02F6  B0 16				 mov	 al,00010110b
1   593	    02F8  C7 06	03A8r 012B		 mov	 rv,299
1   594	    02FE  E8 0066			 call	 _dSquare
1   595
1   596	    0301  B4 13				 mov	 ah,13h
1   597	    0303  B0 01				 mov	 al,01h
1   598	    0305  B3 3F				 mov	 bl,00111111b
1   599	    0307  B9 000A			 mov	 cx,10
1   600	    030A  B2 46				 mov	 dl,70
1   601	    030C  B6 03				 mov	 dh,3
1   602
1   603	    030E  BD 0636r			 lea	 bp,msgGB
1   604	    0311  CD 10				 int	 10h
1   605	    0313  B6 05				 mov	 dh,5
1   606	    0315  BD 0640r			 lea	 bp,msgFin
1   607	    0318  CD 10				 int	 10h
1   608	    031A  B6 07				 mov	 dh,7
1   609	    031C  BD 064Ar			 lea	 bp,msgRS
1   610	    031F  CD 10				 int	 10h
1   611	    0321  B6 09				 mov	 dh,9
1   612	    0323  BD 065Er			 lea	 bp,msg4v
1   613	    0326  CD 10				 int	 10h
1   614	    0328  B6 0B				 mov	 dh,11
1   615	    032A  BD 0668r			 lea	 bp,msg4h
1   616	    032D  CD 10				 int	 10h
1   617	    032F  B6 0D				 mov	 dh,13
1   618	    0331  BD 0672r			 lea	 bp,msg3v
1   619	    0334  CD 10				 int	 10h
1   620	    0336  B6 0F				 mov	 dh,15
1   621	    0338  BD 067Cr			 lea	 bp,msg3h
1   622	    033B  CD 10				 int	 10h
1   623	    033D  B6 11				 mov	 dh,17
1   624	    033F  BD 0686r			 lea	 bp,msg2v
1   625	    0342  CD 10				 int	 10h
1   626	    0344  B6 13				 mov	 dh,19
1   627	    0346  BD 0690r			 lea	 bp,msg2h
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 12
umi.ASM



1   628	    0349  CD 10				 int	 10h
1   629	    034B  B6 15				 mov	 dh,21
1   630	    034D  BD 069Ar			 lea	 bp,msg11
1   631	    0350  CD 10				 int	 10h
1   632	    0352  B6 17				 mov	 dh,23
1   633	    0354  BD 0654r			 lea	 bp,msgRD
1   634	    0357  CD 10				 int	 10h
1   635
1   636	    0359  33 D2				 xor	 dx,dx
1   637	    035B  B4 02				 mov	 ah,02h
1   638	    035D  CD 10				 int	 10h
1   639
1   640
1   641	    035F  5D				 pop	 bp
1   642	    0360  5F				 pop	 di
1   643	    0361  5E				 pop	 si
1   644	    0362  5A				 pop	 dx
1   645	    0363  59				 pop	 cx
1   646	    0364  5B				 pop	 bx
1   647	    0365  58				 pop	 ax
1   648	    0366  C3			 ret
1   649
1   650	    0367			 _dSquare:
1   651	    0367  8B 16	0549r			 mov	 dx,topBord
1   652	    036B			 _cci2:
1   653	    036B  8B 0E	03A8r			 mov	 cx,rv
1   654	    036F			 _cci:
1   655	    036F  CD 10				 int	 10h
1   656	    0371  42				 inc	 dx
1   657	    0372  CD 10				 int	 10h
1   658
1   659	    0374  4A				 dec	 dx
1   660	    0375  41				 inc	 cx
1   661	    0376  3B 0E	03A4r			 cmp	 cx,rvv
1   662	    037A  75 F3				 jne	 _cci
1   663	    037C  83 C2	1C			 add	 dx,2*0Eh
1   664	    037F  3B 16	0547r			 cmp	 dx,bottomBord
1   665	    0383  7C E6				 jl	 _cci2
1   666
1   667	    0385  8B 0E	03A8r			 mov	 cx,rv
1   668	    0389			 _ddi2:
1   669	    0389  8B 16	0549r			 mov	 dx,topBord
1   670	    038D			 _ddi:
1   671	    038D  CD 10				 int	 10h
1   672	    038F  41				 inc	 cx
1   673	    0390  CD 10				 int	 10h
1   674
1   675	    0392  49				 dec	 cx
1   676	    0393  42				 inc	 dx
1   677	    0394  3B 16	0547r			 cmp	 dx,bottomBord
1   678	    0398  75 F3				 jne	 _ddi
1   679	    039A  83 C1	18			 add	 cx,18h
1   680	    039D  3B 0E	03A4r			 cmp	 cx,rvv
1   681	    03A1  7C E6				 jl	 _ddi2
1   682	    03A3  C3			 ret
1   683	    03A4  0000			 rvv	 dw	 0
1   684	    03A6  0000			 llv	 dw	 0
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 13
umi.ASM



1   685	    03A8  0003			 rv	 dw	 3
1   686	    03AA			 drawField ENDP
1   687
1   688
1   689	    03AA			 drawKillMy proc
1   690					 ;рисуем попадания противника в	мои корабли
1   691	    03AA  50				 push	 ax
1   692	    03AB  53				 push	 bx
1   693	    03AC  51				 push	 cx
1   694	    03AD  52				 push	 dx
1   695	    03AE  55				 push	 bp
1   696
1   697	    03AF  33 C9				 xor	 cx,cx
1   698	    03B1  8A 0E	060Er			 mov	 cl,y
1   699	    03B5  B8 0002			 mov	 ax,2
1   700	    03B8  F6 E1				 mul	 cl
1   701	    03BA  48				 dec	 ax
1   702	    03BB  8A F0				 mov	 dh,al
1   703	    03BD  80 C6	03			 add	 dh,3
1   704	    03C0  88 36	03EAr			 mov	 koordy,dh
1   705
1   706	    03C4  8A 0E	060Dr			 mov	 cl,x
1   707	    03C8  B8 0003			 mov	 ax,3
1   708	    03CB  F6 E1				 mul	 cl
1   709	    03CD  2D 0002			 sub	 ax,2
1   710	    03D0  8A D0				 mov	 dl,al
1   711	    03D2			 one:
1   712	    03D2  8A 36	03EAr			 mov	 dh,koordy
1   713	    03D6  B9 0002			 mov	 cx,2
1   714	    03D9  B8 1300			 mov	 ax,1300h
1   715	    03DC  BD 03E7r			 mov bp, offset	kill
1   716	    03DF  CD 10				 int	 10h
1   717
1   718	    03E1  5D				 pop	 bp
1   719	    03E2  5A				 pop	 dx
1   720	    03E3  59				 pop	 cx
1   721	    03E4  5B				 pop	 bx
1   722	    03E5  58				 pop	 ax
1   723
1   724	    03E6  C3				 ret
1   725
1   726	    03E7  02*(DB)		 kill		 db	 2 dup (219)
1   727	    03E9  00			 koordx	 db	 0
1   728	    03EA  00			 koordy	 db	 0
1   729	    03EB			 drawKillMy endp
1   730
1   731	    03EB			 drawKillOpponent proc
1   732					 ;рисуем свои попадпния	в корабли противника
1   733
1   734	    03EB  50				 push	 ax
1   735	    03EC  53				 push	 bx
1   736	    03ED  51				 push	 cx
1   737	    03EE  52				 push	 dx
1   738	    03EF  55				 push	 bp
1   739
1   740	    03F0  8A 0E	060Er			 mov	 cl,y
1   741	    03F4  B8 0002			 mov	 ax,2
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 14
umi.ASM



1   742	    03F7  F6 E1				 mul	 cl
1   743	    03F9  48				 dec	 ax
1   744	    03FA  8A F0				 mov	 dh,al
1   745	    03FC  80 C6	03			 add	 dh,3
1   746	    03FF  88 36	043Dr			 mov	 koordOpy,dh
1   747	    0403  8A 0E	060Dr			 mov	 cl,x
1   748	    0407  B8 0003			 mov	 ax,3
1   749	    040A  F6 E1				 mul	 cl
1   750	    040C  2D 0002			 sub	 ax,2
1   751	    040F  8A D0				 mov	 dl,al
1   752	    0411  80 C2	25			 add	 dl,37
1   753	    0414			 oneOp:
1   754	    0414  8A 36	043Dr			 mov	 dh,koordOpy
1   755	    0418  32 FF				 xor	 bh,bh
1   756	    041A  B3 3B				 mov	 bl,00111011b
1   757	    041C  B9 0001			 mov	 cx,1
1   758	    041F  B4 02				 mov	 ah,02h
1   759	    0421  CD 10				 int	 10h
1   760	    0423  B9 0002			 mov	 cx,2
1   761	    0426  B8 1300			 mov	 ax,1300h
1   762	    0429  BD 03E7r			 lea	 bp,kill
1   763	    042C  CD 10				 int	 10h
1   764
1   765	    042E  B6 18				 mov	 dh,24
1   766	    0430  B2 50				 mov	 dl,80
1   767	    0432  B4 02				 mov	 ah,02h
1   768	    0434  CD 10				 int	 10h
1   769
1   770	    0436  5D				 pop	 bp
1   771	    0437  5A				 pop	 dx
1   772	    0438  59				 pop	 cx
1   773	    0439  5B				 pop	 bx
1   774	    043A  58				 pop	 ax
1   775
1   776	    043B  C3				 ret
1   777	    043C  00			 koordOpx	 db	 0
1   778	    043D  00			 koordOpy	 db	 0
1   779	    043E			 drawKillOpponent endp
1   780
1   781
1   782	    043E			 drawMissOpponent proc
1   783					 ;рисуем промахи которые допустил сам
1   784
1   785	    043E  50				 push	 ax
1   786	    043F  53				 push	 bx
1   787	    0440  51				 push	 cx
1   788	    0441  52				 push	 dx
1   789	    0442  55				 push	 bp
1   790
1   791	    0443  8A 0E	060Er			 mov	 cl,y
1   792	    0447  B8 0002			 mov	 ax,2
1   793	    044A  F6 E1				 mul	 cl
1   794	    044C  FE C8				 dec	 al
1   795	    044E  8A F0				 mov	 dh,al
1   796	    0450  80 C6	03			 add	 dh,3
1   797	    0453  88 36	048Dr			 mov	 koordMissy,dh
1   798	    0457  8A 0E	060Dr			 mov	 cl,x
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 15
umi.ASM



1   799	    045B  B8 0003			 mov	 ax,3
1   800	    045E  F6 E1				 mul	 cl
1   801	    0460  2D 0002			 sub	 ax,2
1   802	    0463  8A D0				 mov	 dl,al
1   803	    0465  80 C2	26			 add	 dl,38
1   804
1   805	    0468  8A 36	048Dr			 mov	 dh,koordMissy
1   806	    046C  32 FF				 xor	 bh,bh
1   807	    046E  B3 3A				 mov	 bl,00111010b
1   808	    0470  B9 0001			 mov	 cx,1
1   809	    0473  B4 02				 mov	 ah,02h
1   810	    0475  CD 10				 int	 10h
1   811
1   812	    0477  B8 1300			 mov	 ax,1300h
1   813	    047A  BD 0615r			 lea	 bp,miss
1   814	    047D  CD 10				 int	 10h
1   815
1   816	    047F  B6 18				 mov	 dh,24
1   817	    0481  B2 50				 mov	 dl,80
1   818	    0483  B4 02				 mov	 ah,02h
1   819	    0485  CD 10				 int	 10h
1   820
1   821	    0487  5D				 pop	 bp
1   822	    0488  5A				 pop	 dx
1   823	    0489  59				 pop	 cx
1   824	    048A  5B				 pop	 bx
1   825	    048B  58				 pop	 ax
1   826
1   827	    048C  C3				 ret
1   828	    048D  00			 koordMissy	 db	 0
1   829	    048E			 drawMissOpponent endp
1   830
1   831	    048E			 drawMissMy proc
1   832					 ;рисуем промахи которые допустил противник
1   833
1   834	    048E  50				 push	 ax
1   835	    048F  53				 push	 bx
1   836	    0490  51				 push	 cx
1   837	    0491  52				 push	 dx
1   838	    0492  56				 push	 si
1   839	    0493  57				 push	 di
1   840	    0494  55				 push	 bp
1   841
1   842	    0495  33 C9				 xor	 cx , cx
1   843	    0497  8A 0E	060Er			 mov	 cl , y
1   844	    049B  33 C0				 xor	 ax , ax
1   845	    049D  B8 0002			 mov	 ax , 2
1   846	    04A0  F7 E1				 mul	 cx
1   847	    04A2  48				 dec	 ax
1   848	    04A3  8A F0				 mov	 dh , al
1   849	    04A5  80 C6	03			 add	 dh , 3
1   850	    04A8  88 36	04E8r			 mov	 koordMissMy , dh
1   851	    04AC  33 C9				 xor	 cx , cx
1   852	    04AE  8A 0E	060Dr			 mov	 cl , x
1   853	    04B2  33 C0				 xor	 ax , ax
1   854	    04B4  B8 0003			 mov	 ax , 3
1   855	    04B7  F7 E1				 mul	 cx
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 16
umi.ASM



1   856	    04B9  2D 0002			 sub	 ax , 2
1   857	    04BC  8A D0				 mov	 dl , al
1   858
1   859	    04BE  8A 36	04E8r			 mov	 dh , koordMissMy
1   860	    04C2  B7 00				 mov	 bh , 0
1   861	    04C4  B3 3A				 mov	 bl , 00111010b
1   862	    04C6  B9 0001			 mov	 cx , 1
1   863	    04C9  B4 02				 mov	 ah , 02h
1   864	    04CB  CD 10				 int	 10h
1   865	    04CD  B9 0001			 mov	 cx , 1
1   866	    04D0  B8 1300			 mov	 ax , 1300h
1   867	    04D3  BD 0617r			 lea	 bp , miss1
1   868	    04D6  CD 10				 int	 10h
1   869
1   870
1   871	    04D8  B6 18				 mov	 dh , 24
1   872	    04DA  B2 50				 mov	 dl , 80
1   873	    04DC  B4 02				 mov	 ah , 02h
1   874	    04DE  CD 10				 int	 10h
1   875
1   876	    04E0  5D				 pop	 bp
1   877	    04E1  5F				 pop	 di
1   878	    04E2  5E				 pop	 si
1   879	    04E3  5A				 pop	 dx
1   880	    04E4  59				 pop	 cx
1   881	    04E5  5B				 pop	 bx
1   882	    04E6  58				 pop	 ax
1   883
1   884	    04E7  C3				 ret
1   885	    04E8  00			 koordMissMy	 db	 0
1   886	    04E9			 drawMissMy endp
    887					 include calc.asm
1   888	    04E9			 calcPlaceShip proc
1   889					 ;вычисляются координаты при расстановке кораблей т е первое поле
1   890	    04E9  50				 push	 ax
1   891	    04EA  53				 push	 bx
1   892
1   893	    04EB  A1 060Fr			 mov	 ax,x1
1   894	    04EE  B3 18				 mov	 bl,24
1   895	    04F0  F6 F3				 div	 bl
1   896	    04F2  FE C0				 inc	 al
1   897	    04F4  A2 060Dr			 mov	 x,al
1   898	    04F7  A1 0611r			 mov	 ax,y1
1   899	    04FA  B3 0E				 mov	 bl,14
1   900	    04FC  F6 F3				 div	 bl
1   901	    04FE  32 E4				 xor	 ah,ah
1   902	    0500  2C 03				 sub	 al,3
1   903	    0502  D0 E8				 shr	 al,1
1   904	    0504  FE C0				 inc	 al
1   905	    0506  A2 060Er			 mov	 y,al
1   906
1   907	    0509  5B				 pop	 bx
1   908	    050A  58				 pop	 ax
1   909	    050B  C3			 ret
1   910	    050C			 calcPlaceShip endp
1   911
1   912	    050C			 calcAttackShip	 proc
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 17
umi.ASM



1   913					 ;вычисляются координаты нашей аттаки т	е куда <ы нажали т е второе поле
1   914	    050C  50				 push	 ax
1   915	    050D  53				 push	 bx
1   916
1   917	    050E  A1 060Fr			 mov	 ax,x1
1   918	    0511  C1 E8	03			 shr	 ax,3
1   919	    0514  2D 0025			 sub	 ax,37
1   920	    0517  B3 03				 mov	 bl,3
1   921	    0519  F6 F3				 div	 bl
1   922	    051B  40				 inc	 ax
1   923	    051C  A2 060Dr			 mov	 x,al
1   924	    051F  A1 0611r			 mov	 ax,y1
1   925	    0522  B3 0E				 mov	 bl,14
1   926	    0524  F6 F3				 div	 bl
1   927	    0526  2D 0003			 sub	 ax,3
1   928					 ;	 mov	 bl,2
1   929					 ;	 div	 bl
1   930	    0529  D0 E8				 shr	 al, 1
1   931	    052B  40				 inc	 ax
1   932	    052C  A2 060Er			 mov	 y,al
1   933
1   934	    052F  5B				 pop	 bx
1   935	    0530  58				 pop	 ax
1   936	    0531  C3			 ret
1   937	    0532			 calcAttackShip	 endp
1   938
1   939
1   940	    0532			 calcCorrectVert4	 proc
1   941
1   942	    0532  50				 push	 ax
1   943	    0533  53				 push	 bx
1   944	    0534  51				 push	 cx
1   945	    0535  52				 push	 dx
1   946	    0536  56				 push	 si
1   947	    0537  57				 push	 di
1   948	    0538  55				 push	 bp
1   949
1   950	    0539  33 C9				 xor	 cx , cx
1   951	    053B  8A 0E	060Dr			 mov	 cl , x
1   952	    053F  8B F1				 mov	 si , cx
1   953	    0541  8A 0E	060Er			 mov	 cl , y
1   954	    0545  8B E9				 mov	 bp , cx
1   955	    0547  8A 0E	041Br			 mov	 cl , sizeField
1   956	    054B  2B CD				 sub	 cx , bp
1   957	    054D  83 F9	03			 cmp	 cx , 3
1   958	    0550  7C 59				 jl	 okVert4
1   959	    0552  33 C9				 xor	 cx , cx
1   960	    0554  8A 0E	060Er			 mov	 cl , y
1   961	    0558  33 D2				 xor	 dx , dx
1   962	    055A  B8 000C			 mov	 ax , 12
1   963	    055D  F7 E1				 mul	 cx
1   964	    055F  8B E8				 mov	 bp , ax
1   965	    0561  4E				 dec	 si
1   966	    0562  83 ED	0C			 sub	 bp , 12
1   967	    0565  33 C0				 xor	 ax , ax
1   968	    0567  33 C9				 xor	 cx , cx
1   969	    0569  B9 0006			 mov	 cx , 6
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 18
umi.ASM



1   970	    056C			 incsi4:
1   971	    056C  80 BA	041Cr 00		 cmp	 field[bp][si] , 0
1   972	    0571  75 38				 jne	 okVert4
1   973	    0573  46				 inc	 si
1   974	    0574  40				 inc	 ax
1   975	    0575  3D 0003			 cmp	 ax , 3
1   976	    0578  7C F2				 jl	 incsi4
1   977
1   978	    057A  33 C0				 xor	 ax , ax
1   979	    057C  83 C5	0C			 add	 bp , 12
1   980	    057F  83 EE	03			 sub	 si , 3
1   981	    0582  E2 E8				 loop	 incsi4
1   982
1   983	    0584  46				 inc	 si
1   984	    0585  83 ED	18			 sub	 bp , 24
1   985	    0588  C7 06	054Br 0001		 mov	 ok , 1
1   986	    058E  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1   987	    0593  83 ED	0C			 sub	 bp , 12
1   988	    0596  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1   989	    059B  83 ED	0C			 sub	 bp , 12
1   990	    059E  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1   991	    05A3  83 ED	0C			 sub	 bp , 12
1   992	    05A6  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1   993
1   994	    05AB			 okVert4:
1   995
1   996	    05AB  5D				 pop	 bp
1   997	    05AC  5F				 pop	 di
1   998	    05AD  5E				 pop	 si
1   999	    05AE  5A				 pop	 dx
1  1000	    05AF  59				 pop	 cx
1  1001	    05B0  5B				 pop	 bx
1  1002	    05B1  58				 pop	 ax
1  1003
1  1004	    05B2  C3				 ret
1  1005
1  1006	    05B3			 calcCorrectVert4	 endp
1  1007
1  1008	    05B3			 calcCorrectHor4 proc
1  1009
1  1010	    05B3  50				 push	 ax
1  1011	    05B4  53				 push	 bx
1  1012	    05B5  51				 push	 cx
1  1013	    05B6  52				 push	 dx
1  1014	    05B7  56				 push	 si
1  1015	    05B8  57				 push	 di
1  1016	    05B9  55				 push	 bp
1  1017
1  1018	    05BA  33 C9				 xor	 cx , cx
1  1019	    05BC  8A 0E	060Dr			 mov	 cl , x
1  1020	    05C0  8B F1				 mov	 si , cx
1  1021	    05C2  8A 0E	060Er			 mov	 cl , y
1  1022	    05C6  33 D2				 xor	 dx , dx
1  1023	    05C8  B8 000C			 mov	 ax , 12
1  1024	    05CB  F7 E1				 mul	 cx
1  1025	    05CD  8B E8				 mov	 bp , ax
1  1026	    05CF  8A 0E	041Br			 mov	 cl , sizeField
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 19
umi.ASM



1  1027	    05D3  2B CE				 sub	 cx , si
1  1028	    05D5  83 F9	03			 cmp	 cx , 3
1  1029	    05D8  7C 42				 jl	 okHor4
1  1030	    05DA  4E				 dec	 si
1  1031	    05DB  83 ED	0C			 sub	 bp , 12
1  1032	    05DE  33 C0				 xor	 ax , ax
1  1033	    05E0  B9 0003			 mov	 cx , 3
1  1034	    05E3			 incsih4:
1  1035	    05E3  80 BA	041Cr 00		 cmp	 field[bp][si] , 0
1  1036	    05E8  75 32				 jne	 okHor4
1  1037	    05EA  46				 inc	 si
1  1038	    05EB  40				 inc	 ax
1  1039	    05EC  3D 0006			 cmp	 ax , 6
1  1040	    05EF  7C F2				 jl	 incsih4
1  1041
1  1042	    05F1  33 C0				 xor	 ax , ax
1  1043	    05F3  83 C5	0C			 add	 bp , 12
1  1044	    05F6  83 EE	06			 sub	 si , 6
1  1045	    05F9  E2 E8				 loop	 incsih4
1  1046
1  1047	    05FB  46				 inc	 si
1  1048	    05FC  83 ED	18			 sub	 bp , 24
1  1049	    05FF  C7 06	054Br 0001		 mov	 ok , 1
1  1050	    0605  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1  1051	    060A  46				 inc	 si
1  1052	    060B  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1  1053	    0610  46				 inc	 si
1  1054	    0611  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1  1055	    0616  46				 inc	 si
1  1056	    0617  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1  1057
1  1058	    061C			 okHor4:
1  1059
1  1060	    061C  5D				 pop	 bp
1  1061	    061D  5F				 pop	 di
1  1062	    061E  5E				 pop	 si
1  1063	    061F  5A				 pop	 dx
1  1064	    0620  59				 pop	 cx
1  1065	    0621  5B				 pop	 bx
1  1066	    0622  58				 pop	 ax
1  1067
1  1068	    0623  C3				 ret
1  1069
1  1070	    0624			 calcCorrectHor4 endp
1  1071
1  1072	    0624			 calcCorrectHor3 proc
1  1073
1  1074	    0624  50				 push	 ax
1  1075	    0625  53				 push	 bx
1  1076	    0626  51				 push	 cx
1  1077	    0627  52				 push	 dx
1  1078	    0628  56				 push	 si
1  1079	    0629  57				 push	 di
1  1080	    062A  55				 push	 bp
1  1081
1  1082	    062B  33 C9				 xor	 cx , cx
1  1083	    062D  8A 0E	060Dr			 mov	 cl , x
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 20
umi.ASM



1  1084	    0631  8B F1				 mov	 si , cx
1  1085	    0633  8A 0E	060Er			 mov	 cl , y
1  1086	    0637  33 D2				 xor	 dx , dx
1  1087	    0639  B8 000C			 mov	 ax , 12
1  1088	    063C  F7 E1				 mul	 cx
1  1089	    063E  8B E8				 mov	 bp , ax
1  1090	    0640  8A 0E	041Br			 mov	 cl , sizeField
1  1091	    0644  2B CE				 sub	 cx , si
1  1092	    0646  83 F9	02			 cmp	 cx , 2
1  1093	    0649  7C 3C				 jl	 okHor3
1  1094	    064B  4E				 dec	 si
1  1095	    064C  83 ED	0C			 sub	 bp , 12
1  1096	    064F  33 C0				 xor	 ax , ax
1  1097	    0651  B9 0003			 mov	 cx , 3
1  1098	    0654			 incsih3:
1  1099	    0654  80 BA	041Cr 00		 cmp	 field[bp][si] , 0
1  1100	    0659  75 2C				 jne	 okHor3
1  1101	    065B  46				 inc	 si
1  1102	    065C  40				 inc	 ax
1  1103	    065D  3D 0005			 cmp	 ax , 5
1  1104	    0660  7C F2				 jl	 incsih3
1  1105
1  1106	    0662  33 C0				 xor	 ax , ax
1  1107	    0664  83 C5	0C			 add	 bp , 12
1  1108	    0667  83 EE	05			 sub	 si , 5
1  1109	    066A  E2 E8				 loop	 incsih3
1  1110
1  1111	    066C  46				 inc	 si
1  1112	    066D  83 ED	18			 sub	 bp , 24
1  1113	    0670  C7 06	054Br 0001		 mov	 ok , 1
1  1114	    0676  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1  1115	    067B  46				 inc	 si
1  1116	    067C  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1  1117	    0681  46				 inc	 si
1  1118	    0682  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1  1119
1  1120	    0687			 okHor3:
1  1121
1  1122	    0687  5D				 pop	 bp
1  1123	    0688  5F				 pop	 di
1  1124	    0689  5E				 pop	 si
1  1125	    068A  5A				 pop	 dx
1  1126	    068B  59				 pop	 cx
1  1127	    068C  5B				 pop	 bx
1  1128	    068D  58				 pop	 ax
1  1129
1  1130	    068E  C3				 ret
1  1131
1  1132	    068F			 calcCorrectHor3 endp
1  1133
1  1134	    068F			 calcCorrectVert3	 proc
1  1135
1  1136	    068F  50				 push	 ax
1  1137	    0690  53				 push	 bx
1  1138	    0691  51				 push	 cx
1  1139	    0692  52				 push	 dx
1  1140	    0693  56				 push	 si
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 21
umi.ASM



1  1141	    0694  57				 push	 di
1  1142	    0695  55				 push	 bp
1  1143
1  1144	    0696  33 C9				 xor	 cx , cx
1  1145	    0698  8A 0E	060Dr			 mov	 cl , x
1  1146	    069C  8B F1				 mov	 si , cx
1  1147	    069E  8A 0E	060Er			 mov	 cl , y
1  1148	    06A2  8B E9				 mov	 bp , cx
1  1149	    06A4  8A 0E	041Br			 mov	 cl , sizeField
1  1150	    06A8  2B CD				 sub	 cx , bp
1  1151	    06AA  83 F9	02			 cmp	 cx , 2
1  1152	    06AD  7C 4F				 jl	 okVert3
1  1153	    06AF  33 C9				 xor	 cx , cx
1  1154	    06B1  8A 0E	060Er			 mov	 cl , y
1  1155	    06B5  33 D2				 xor	 dx , dx
1  1156	    06B7  B8 000C			 mov	 ax , 12
1  1157	    06BA  F7 E1				 mul	 cx
1  1158	    06BC  8B E8				 mov	 bp , ax
1  1159	    06BE  4E				 dec	 si
1  1160	    06BF  83 ED	0C			 sub	 bp , 12
1  1161	    06C2  33 C0				 xor	 ax , ax
1  1162	    06C4  B9 0005			 mov	 cx , 5
1  1163	    06C7			 incsi3:
1  1164	    06C7  80 BA	041Cr 00		 cmp	 field[bp][si] , 0
1  1165	    06CC  75 30				 jne	 okVert3
1  1166	    06CE  46				 inc	 si
1  1167	    06CF  40				 inc	 ax
1  1168	    06D0  3D 0003			 cmp	 ax , 3
1  1169	    06D3  7C F2				 jl	 incsi3
1  1170
1  1171	    06D5  33 C0				 xor	 ax , ax
1  1172	    06D7  83 C5	0C			 add	 bp , 12
1  1173	    06DA  83 EE	03			 sub	 si , 3
1  1174	    06DD  E2 E8				 loop	 incsi3
1  1175
1  1176	    06DF  46				 inc	 si
1  1177	    06E0  83 ED	18			 sub	 bp , 24
1  1178	    06E3  C7 06	054Br 0001		 mov	 ok , 1
1  1179	    06E9  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1  1180	    06EE  83 ED	0C			 sub	 bp , 12
1  1181	    06F1  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1  1182	    06F6  83 ED	0C			 sub	 bp , 12
1  1183	    06F9  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1  1184
1  1185	    06FE			 okVert3:
1  1186
1  1187	    06FE  5D				 pop	 bp
1  1188	    06FF  5F				 pop	 di
1  1189	    0700  5E				 pop	 si
1  1190	    0701  5A				 pop	 dx
1  1191	    0702  59				 pop	 cx
1  1192	    0703  5B				 pop	 bx
1  1193	    0704  58				 pop	 ax
1  1194
1  1195	    0705  C3				 ret
1  1196
1  1197	    0706			 calcCorrectVert3	 endp
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 22
umi.ASM



1  1198
1  1199	    0706			 calcCorrectVert2	 proc
1  1200
1  1201	    0706  50				 push	 ax
1  1202	    0707  53				 push	 bx
1  1203	    0708  51				 push	 cx
1  1204	    0709  52				 push	 dx
1  1205	    070A  56				 push	 si
1  1206	    070B  57				 push	 di
1  1207	    070C  55				 push	 bp
1  1208
1  1209	    070D  33 C9				 xor	 cx , cx
1  1210	    070F  8A 0E	060Dr			 mov	 cl , x
1  1211	    0713  8B F1				 mov	 si , cx
1  1212	    0715  8A 0E	060Er			 mov	 cl , y
1  1213	    0719  8B E9				 mov	 bp , cx
1  1214	    071B  8A 0E	041Br			 mov	 cl , sizeField
1  1215	    071F  2B CD				 sub	 cx , bp
1  1216	    0721  83 F9	01			 cmp	 cx , 1
1  1217	    0724  7C 47				 jl	 okVert2
1  1218	    0726  33 C9				 xor	 cx , cx
1  1219	    0728  8A 0E	060Er			 mov	 cl , y
1  1220	    072C  33 D2				 xor	 dx , dx
1  1221	    072E  B8 000C			 mov	 ax , 12
1  1222	    0731  F7 E1				 mul	 cx
1  1223	    0733  8B E8				 mov	 bp , ax
1  1224	    0735  4E				 dec	 si
1  1225	    0736  83 ED	0C			 sub	 bp , 12
1  1226	    0739  33 C0				 xor	 ax , ax
1  1227	    073B  B9 0004			 mov	 cx , 4
1  1228	    073E			 incsi2:
1  1229	    073E  80 BA	041Cr 00		 cmp	 field[bp][si] , 0
1  1230	    0743  75 28				 jne	 okVert2
1  1231	    0745  46				 inc	 si
1  1232	    0746  40				 inc	 ax
1  1233	    0747  3D 0003			 cmp	 ax , 3
1  1234	    074A  7C F2				 jl	 incsi2
1  1235
1  1236	    074C  33 C0				 xor	 ax , ax
1  1237	    074E  83 C5	0C			 add	 bp , 12
1  1238	    0751  83 EE	03			 sub	 si , 3
1  1239	    0754  E2 E8				 loop	 incsi2
1  1240
1  1241	    0756  46				 inc	 si
1  1242	    0757  83 ED	18			 sub	 bp , 24
1  1243	    075A  C7 06	054Br 0001		 mov	 ok , 1
1  1244	    0760  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1  1245	    0765  83 ED	0C			 sub	 bp , 12
1  1246	    0768  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1  1247
1  1248	    076D			 okVert2:
1  1249
1  1250	    076D  5D				 pop	 bp
1  1251	    076E  5F				 pop	 di
1  1252	    076F  5E				 pop	 si
1  1253	    0770  5A				 pop	 dx
1  1254	    0771  59				 pop	 cx
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 23
umi.ASM



1  1255	    0772  5B				 pop	 bx
1  1256	    0773  58				 pop	 ax
1  1257
1  1258	    0774  C3				 ret
1  1259
1  1260	    0775			 calcCorrectVert2	 endp
1  1261
1  1262	    0775			 calcCorrectHor2 proc
1  1263
1  1264	    0775  50				 push	 ax
1  1265	    0776  53				 push	 bx
1  1266	    0777  51				 push	 cx
1  1267	    0778  52				 push	 dx
1  1268	    0779  56				 push	 si
1  1269	    077A  57				 push	 di
1  1270	    077B  55				 push	 bp
1  1271
1  1272	    077C  33 C9				 xor	 cx , cx
1  1273	    077E  8A 0E	060Dr			 mov	 cl , x
1  1274	    0782  8B F1				 mov	 si , cx
1  1275	    0784  8A 0E	060Er			 mov	 cl , y
1  1276	    0788  33 D2				 xor	 dx , dx
1  1277	    078A  B8 000C			 mov	 ax , 12
1  1278	    078D  F7 E1				 mul	 cx
1  1279	    078F  8B E8				 mov	 bp , ax
1  1280	    0791  8A 0E	041Br			 mov	 cl , sizeField
1  1281	    0795  2B CE				 sub	 cx , si
1  1282	    0797  83 F9	01			 cmp	 cx , 1
1  1283	    079A  7C 36				 jl	 okHor2
1  1284	    079C  4E				 dec	 si
1  1285	    079D  83 ED	0C			 sub	 bp , 12
1  1286	    07A0  33 C0				 xor	 ax , ax
1  1287	    07A2  B9 0003			 mov	 cx , 3
1  1288	    07A5			 incsi:
1  1289	    07A5  80 BA	041Cr 00		 cmp	 field[bp][si] , 0
1  1290	    07AA  75 26				 jne	 okHor2
1  1291	    07AC  46				 inc	 si
1  1292	    07AD  40				 inc	 ax
1  1293	    07AE  3D 0004			 cmp	 ax , 4
1  1294	    07B1  7C F2				 jl	 incsi
1  1295
1  1296	    07B3  33 C0				 xor	 ax , ax
1  1297	    07B5  83 C5	0C			 add	 bp , 12
1  1298	    07B8  83 EE	04			 sub	 si , 4
1  1299	    07BB  E2 E8				 loop	 incsi
1  1300
1  1301	    07BD  46				 inc	 si
1  1302	    07BE  83 ED	18			 sub	 bp , 24
1  1303	    07C1  C7 06	054Br 0001		 mov	 ok , 1
1  1304	    07C7  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1  1305	    07CC  46				 inc	 si
1  1306	    07CD  C6 82	041Cr 01		 mov	 field[bp][si] , 1
1  1307
1  1308	    07D2			 okHor2:
1  1309
1  1310	    07D2  5D				 pop	 bp
1  1311	    07D3  5F				 pop	 di
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 24
umi.ASM



1  1312	    07D4  5E				 pop	 si
1  1313	    07D5  5A				 pop	 dx
1  1314	    07D6  59				 pop	 cx
1  1315	    07D7  5B				 pop	 bx
1  1316	    07D8  58				 pop	 ax
1  1317
1  1318	    07D9  C3				 ret
1  1319
1  1320	    07DA			 calcCorrectHor2 endp
1  1321
1  1322	    07DA			 calcCorrect1	 proc
1  1323
1  1324	    07DA  50				 push	 ax
1  1325	    07DB  53				 push	 bx
1  1326	    07DC  51				 push	 cx
1  1327	    07DD  52				 push	 dx
1  1328	    07DE  56				 push	 si
1  1329	    07DF  57				 push	 di
1  1330	    07E0  55				 push	 bp
1  1331
1  1332	    07E1  33 C9				 xor	 cx , cx
1  1333	    07E3  33 F6				 xor	 si , si
1  1334	    07E5  33 DB				 xor	 bx , bx
1  1335	    07E7  8A 0E	060Dr			 mov	 cl , x
1  1336	    07EB  8B F1				 mov	 si , cx
1  1337	    07ED  8A 0E	060Er			 mov	 cl , y
1  1338	    07F1  33 D2				 xor	 dx , dx
1  1339	    07F3  B8 000C			 mov	 ax , 12
1  1340	    07F6  F7 E1				 mul	 cx
1  1341	    07F8  8B D8				 mov	 bx , ax
1  1342	    07FA  4E				 dec	 si
1  1343	    07FB  83 EB	0C			 sub	 bx , 12
1  1344	    07FE  33 C0				 xor	 ax , ax
1  1345	    0800  B9 0003			 mov	 cx , 3
1  1346	    0803			 decsi:
1  1347	    0803  80 B8	041Cr 00		 cmp	 field[bx][si] , 0
1  1348	    0808  75 20				 jne	 ok1
1  1349	    080A  46				 inc	 si
1  1350	    080B  40				 inc	 ax
1  1351	    080C  3D 0003			 cmp	 ax , 3
1  1352	    080F  7C F2				 jl	 decsi
1  1353
1  1354	    0811  33 C0				 xor	 ax , ax
1  1355	    0813  83 C3	0C			 add	 bx , 12
1  1356	    0816  83 EE	03			 sub	 si , 3
1  1357	    0819  E2 E8				 loop	 decsi
1  1358
1  1359	    081B  46				 inc	 si
1  1360	    081C  83 EB	18			 sub	 bx , 24
1  1361	    081F  C7 06	054Br 0001		 mov	 ok , 1
1  1362	    0825  C6 80	041Cr 01		 mov	 field[bx][si] , 1
1  1363	    082A			 ok1:
1  1364
1  1365	    082A  5D				 pop	 bp
1  1366	    082B  5F				 pop	 di
1  1367	    082C  5E				 pop	 si
1  1368	    082D  5A				 pop	 dx
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 25
umi.ASM



1  1369	    082E  59				 pop	 cx
1  1370	    082F  5B				 pop	 bx
1  1371	    0830  58				 pop	 ax
1  1372
1  1373	    0831  C3				 ret
1  1374	    0832			 calcCorrect1	 endp
1  1375
1  1376	    0832			 calcNShip proc
1  1377					 ;вычисляе< количество клеток зани<ае<ые корaбля<и
1  1378	    0832  50				 push	 ax
1  1379	    0833  53				 push	 bx
1  1380
1  1381	    0834  32 E4				 xor	 ah,ah
1  1382	    0836  A0 0415r			 mov	 al,ship4
1  1383	    0839  B3 04				 mov	 bl,4
1  1384	    083B  F6 E3				 mul	 bl
1  1385	    083D  A2 0411r			 mov	 Nship,al
1  1386	    0840  33 C0				 xor	 ax,ax
1  1387	    0842  A0 0414r			 mov	 al,ship3
1  1388	    0845  B3 03				 mov	 bl,3
1  1389	    0847  F6 E3				 mul	 bl
1  1390	    0849  00 06	0411r			 add	 Nship,al
1  1391	    084D  33 C0				 xor	 ax,ax
1  1392	    084F  A0 0413r			 mov	 al,ship2
1  1393	    0852  B3 02				 mov	 bl,2
1  1394	    0854  F6 E3				 mul	 bl
1  1395	    0856  00 06	0411r			 add	 Nship,al
1  1396	    085A  33 C0				 xor	 ax,ax
1  1397	    085C  A0 0412r			 mov	 al,ship1
1  1398	    085F  00 06	0411r			 add	 Nship,al
1  1399
1  1400	    0863  59				 pop	 cx
1  1401	    0864  5B				 pop	 bx
1  1402	    0865  C3			 ret
1  1403	    0866			 calcNShip endp
1  1404
1  1405	    0866			 calcStatus	 proc
1  1406	    0866  53				 push	 bx
1  1407	    0867  56				 push	 si
1  1408
1  1409	    0868  8B 1E	077Dr			 mov	 bx,statusy
1  1410	    086C  8B 36	077Br			 mov	 si,statusx
1  1411	    0870  83 EB	0C			 sub	 bx,12
1  1412	    0873  80 B8	041Cr 01		 cmp	 field[bx][si],1
1  1413	    0878  75 08				 jne	 status1
1  1414	    087A  C7 06	0779r 0000		 mov	 status,0 ; не убил а только попал
1  1415	    0880  EB 05				 jmp	 finstatus
1  1416	    0882			 status1:
1  1417	    0882  80 B8	041Cr 02		 cmp	 field[bx][si],2
1  1418
1  1419	    0887			 finstatus:
1  1420	    0887  5E				 pop	 si
1  1421	    0888  5B				 pop	 bx
1  1422	    0889  C3			 ret
1  1423	    088A			 calcStatus	 endp
   1424					 include write.asm
1  1425
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 26
umi.ASM



1  1426	    088A			 wrClean proc
1  1427	    088A  50				 push	 ax
1  1428	    088B  53				 push	 bx
1  1429	    088C  55				 push	 bp
1  1430
1  1431	    088D  B4 13				 mov	 ah,13h
1  1432	    088F  B0 01				 mov	 al,01h
1  1433	    0891  32 FF				 xor	 bh,bh
1  1434	    0893  BD 056Dr			 lea	 bp,clean
1  1435	    0896  CD 10				 int	 10h
1  1436
1  1437	    0898  5D				 pop	 bp
1  1438	    0899  5B				 pop	 bx
1  1439	    089A  58				 pop	 ax
1  1440
1  1441	    089B  C3			 ret
1  1442	    089C			 wrClean endp
1  1443
1  1444
1  1445	    089C			 wrErrMsg	 proc
1  1446
1  1447	    089C  50				 push	 ax
1  1448	    089D  53				 push	 bx
1  1449	    089E  51				 push	 cx
1  1450	    089F  52				 push	 dx
1  1451	    08A0  55				 push	 bp
1  1452
1  1453	    08A1  B4 13				 mov	 ah,13h
1  1454	    08A3  B0 01				 mov	 al,01h
1  1455	    08A5  32 FF				 xor	 bh,bh
1  1456	    08A7  B3 3C				 mov	 bl,00111100b
1  1457	    08A9  B9 000D			 mov	 cx,13
1  1458	    08AC  32 D2				 xor	 dl,dl
1  1459	    08AE  B6 01				 mov	 dh,1
1  1460	    08B0  BD 08BBr			 mov	 bp,offset errmsg
1  1461	    08B3  CD 10				 int	 10h
1  1462
1  1463	    08B5  5D				 pop	 bp
1  1464	    08B6  5A				 pop	 dx
1  1465	    08B7  59				 pop	 cx
1  1466	    08B8  5B				 pop	 bx
1  1467	    08B9  58				 pop	 ax
1  1468
1  1469	    08BA  C3				 ret
1  1470	    08BB  4E 6F	74 20 63 6F 72+	 errmsg	 db 'Not correct!'
   1471		  72 65	63 74 21
1  1472	    08C7			 wrErrMsg	 endp
1  1473
1  1474	    08C7			 wrWin	 proc
1  1475	    08C7  50				 push	 ax
1  1476	    08C8  53				 push	 bx
1  1477	    08C9  51				 push	 cx
1  1478	    08CA  52				 push	 dx
1  1479	    08CB  55				 push	 bp
1  1480
1  1481	    08CC  B4 13				 mov	 ah,13h
1  1482	    08CE  B0 01				 mov	 al,01h
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 27
umi.ASM



1  1483	    08D0  32 FF				 xor	 bh,bh
1  1484	    08D2  B3 3F				 mov	 bl,00111111b
1  1485	    08D4  B9 001A			 mov	 cx,26
1  1486	    08D7  33 D2				 xor	 dx,dx
1  1487	    08D9  BD 06BEr			 lea	 bp,mWin
1  1488	    08DC  CD 10				 int	 10h
1  1489
1  1490	    08DE  5D				 pop	 bp
1  1491	    08DF  5A				 pop	 dx
1  1492	    08E0  59				 pop	 cx
1  1493	    08E1  5B				 pop	 bx
1  1494	    08E2  58				 pop	 ax
1  1495
1  1496	    08E3  C3			 ret
1  1497	    08E4			 wrWin	 endp
1  1498
1  1499	    08E4			 wrWon	 proc
1  1500	    08E4  50				 push	 ax
1  1501	    08E5  53				 push	 bx
1  1502	    08E6  51				 push	 cx
1  1503	    08E7  52				 push	 dx
1  1504	    08E8  55				 push	 bp
1  1505
1  1506	    08E9  B4 13				 mov	 ah,13h
1  1507	    08EB  B0 01				 mov	 al,01h
1  1508	    08ED  32 FF				 xor	 bh,bh
1  1509	    08EF  B3 3F				 mov	 bl,00111111b
1  1510	    08F1  B9 001A			 mov	 cx,26
1  1511	    08F4  33 D2				 xor	 dx,dx
1  1512	    08F6  BD 06D8r			 lea	 bp,mWon
1  1513	    08F9  CD 10				 int	 10h
1  1514
1  1515	    08FB  5D				 pop	 bp
1  1516	    08FC  5A				 pop	 dx
1  1517	    08FD  59				 pop	 cx
1  1518	    08FE  5B				 pop	 bx
1  1519	    08FF  58				 pop	 ax
1  1520
1  1521	    0900  C3			 ret
1  1522	    0901			 wrWon	 endp
1  1523
1  1524
1  1525	    0901			 wrNic	 proc
1  1526
1  1527	    0901  50				 push	 ax
1  1528	    0902  53				 push	 bx
1  1529	    0903  51				 push	 cx
1  1530	    0904  52				 push	 dx
1  1531	    0905  56				 push	 si
1  1532	    0906  57				 push	 di
1  1533	    0907  55				 push	 bp
1  1534
1  1535	    0908  0E				 push	 cs
1  1536	    0909  07				 pop	 es
1  1537	    090A  B4 13				 mov	 ah,13h
1  1538	    090C  B0 01				 mov	 al,01h
1  1539	    090E  32 FF				 xor	 bh,bh
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 28
umi.ASM



1  1540	    0910  B3 1C				 mov	 bl,00011100b
1  1541	    0912  B9 000A			 mov	 cx,10
1  1542	    0915  BA 0200			 mov	 dx,200h
1  1543	    0918  BD 054Dr			 lea	 bp,myName
1  1544	    091B  CD 10				 int	 10h
1  1545
1  1546	    091D  B2 25				 mov	 dl,37
1  1547	    091F  BD 0557r			 lea	 bp,opName
1  1548	    0922  CD 10				 int	 10h
1  1549
1  1550	    0924  5D				 pop	 bp
1  1551	    0925  5F				 pop	 di
1  1552	    0926  5E				 pop	 si
1  1553	    0927  5A				 pop	 dx
1  1554	    0928  59				 pop	 cx
1  1555	    0929  5B				 pop	 bx
1  1556	    092A  58				 pop	 ax
1  1557
1  1558	    092B  C3				 ret
1  1559	    092C			 wrNic	 endp
1  1560
1  1561	    092C			 vvodNic proc
1  1562	    092C  50				 push	 ax
1  1563	    092D  53				 push	 bx
1  1564	    092E  51				 push	 cx
1  1565	    092F  52				 push	 dx
1  1566	    0930  56				 push	 si
1  1567	    0931  57				 push	 di
1  1568	    0932  55				 push	 bp
1  1569
1  1570	    0933  B4 13				 mov	 ah,13h
1  1571	    0935  B0 01				 mov	 al,01h
1  1572	    0937  B7 00				 mov	 bh,0
1  1573	    0939  B3 0C				 mov	 bl,00001100b
1  1574	    093B  B9 001D			 mov	 cx,29
1  1575	    093E  33 D2				 xor	 dx,dx
1  1576	    0940  83 3E	0561r 01		 cmp	 master,1
1  1577	    0945  74 02				 je	 wwww
1  1578	    0947  0E				 push	 cs
1  1579	    0948  07				 pop	 es
1  1580	    0949			 wwww:
1  1581	    0949  BD 0619r			 lea	 bp,msgNic
1  1582	    094C  CD 10				 int	 10h
1  1583	    094E  33 F6				 xor	 si,si
1  1584	    0950			 writeNic:
1  1585	    0950  32 E4				 xor	 ah,ah
1  1586	    0952  CD 16				 int	 16h
1  1587	    0954  80 FC	1C			 cmp	 ah,1ch
1  1588	    0957  74 1F				 je	 cancle
1  1589	    0959  50				 push	 ax
1  1590	    095A  B4 09				 mov	 ah,09h
1  1591	    095C  B9 0001			 mov	 cx,1
1  1592	    095F  CD 10				 int	 10h
1  1593	    0961  58				 pop	 ax
1  1594	    0962  88 84	054Dr			 mov	 myName[si],al
1  1595	    0966  46				 inc	 si
1  1596	    0967  83 FE	0B			 cmp	 si,11
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 29
umi.ASM



1  1597	    096A  74 0C				 je	 cancle
1  1598	    096C  B4 03				 mov	 ah,03h
1  1599	    096E  CD 10				 int	 10h
1  1600	    0970  FE C2				 inc	 dl
1  1601	    0972  B4 02				 mov	 ah,02h
1  1602	    0974  CD 10				 int	 10h
1  1603	    0976  EB D8				 jmp	 writeNic
1  1604	    0978			 cancle:
1  1605	    0978  33 D2				 xor	 dx,dx
1  1606	    097A  B9 003C			 mov	 cx,60
1  1607	    097D  B4 13				 mov	 ah,13h
1  1608	    097F  B0 01				 mov	 al,01h
1  1609	    0981  BD 056Dr			 lea	 bp,clean
1  1610	    0984			 _ccl2:
1  1611	    0984  CD 10				 int	 10h
1  1612	    0986  FE C6				 inc	 dh
1  1613	    0988  80 FE	06			 cmp	 dh,6
1  1614	    098B  75 F7				 jne	 _ccl2
1  1615
1  1616	    098D  5D				 pop	 bp
1  1617	    098E  5F				 pop	 di
1  1618	    098F  5E				 pop	 si
1  1619	    0990  5A				 pop	 dx
1  1620	    0991  59				 pop	 cx
1  1621	    0992  5B				 pop	 bx
1  1622	    0993  58				 pop	 ax
1  1623
1  1624	    0994  C3				 ret
1  1625	    0995			 vvodNic endp
1  1626
1  1627	    0995			 wrInf	 proc
1  1628
1  1629	    0995  50				 push	 ax
1  1630	    0996  53				 push	 bx
1  1631	    0997  51				 push	 cx
1  1632	    0998  52				 push	 dx
1  1633	    0999  56				 push	 si
1  1634	    099A  57				 push	 di
1  1635	    099B  55				 push	 bp
1  1636
1  1637	    099C  A0 0415r			 mov	 al,ship4
1  1638	    099F  04 30				 add	 al,'0'
1  1639	    09A1  A2 09DCr			 mov	 hh+4,al
1  1640	    09A4  A0 0414r			 mov	 al,ship3
1  1641	    09A7  04 30				 add	 al,'0'
1  1642	    09A9  A2 09E3r			 mov	 hh+11,al
1  1643	    09AC  A0 0413r			 mov	 al,ship2
1  1644	    09AF  04 30				 add	 al,'0'
1  1645	    09B1  A2 09EAr			 mov	 hh+18,al
1  1646	    09B4  A0 0412r			 mov	 al,ship1
1  1647	    09B7  3C 0A				 cmp	 al,0ah
1  1648	    09B9  75 07				 jne	 _noah
1  1649	    09BB  B0 61				 mov	 al,'a'
1  1650	    09BD  A2 09F1r			 mov	 hh+25,al
1  1651	    09C0  EB 05				 jmp	 _z
1  1652	    09C2			 _noah:
1  1653	    09C2  04 30				 add	 al,'0'
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 30
umi.ASM



1  1654	    09C4  A2 09F1r			 mov	 hh+25,al
1  1655	    09C7			 _z:
1  1656					 ;	 mov	 cx,27
1  1657					 ;	 xor	 dx,dx
1  1658					 ;	 xor	 bh,bh
1  1659					 ;	 mov	 bl,4
1  1660					 ;	 mov	 al,01h
1  1661					 ;	 mov	 ah,13h
1  1662					 ;	 lea	 bp,hh
1  1663					 ;	 int	 10h
1  1664	    09C7  33 C0				 xor	 ax,ax
1  1665	    09C9  B4 09				 mov	 ah,09h
1  1666	    09CB  BA 09D8r			 mov	 dx,offset hh
1  1667	    09CE  CD 21				 int	 21h
1  1668
1  1669	    09D0  5D				 pop	 bp
1  1670	    09D1  5F				 pop	 di
1  1671	    09D2  5E				 pop	 si
1  1672	    09D3  5A				 pop	 dx
1  1673	    09D4  59				 pop	 cx
1  1674	    09D5  5B				 pop	 bx
1  1675	    09D6  58				 pop	 ax
1  1676
1  1677	    09D7  C3				 ret
1  1678	    09D8  34 78	3A 3D 20 20 20+	 hh	 db	 '4x:=	 3x:=	2x:=   1x:=  ',0dh,0ah,24h
   1679		  33 78	3A 3D 20 20 20+
   1680		  32 78	3A 3D 20 20 20+
   1681		  31 78	3A 3D 20 20 0D+
   1682		  0A 24
1  1683	    09F6			 wrInf	 endp
1  1684
1  1685	    09F6			 wrWait	 proc
1  1686
1  1687	    09F6  50				 push	 ax
1  1688	    09F7  53				 push	 bx
1  1689	    09F8  51				 push	 cx
1  1690	    09F9  52				 push	 dx
1  1691	    09FA  55				 push	 bp
1  1692
1  1693	    09FB  B4 13				 mov	 ah,13h
1  1694	    09FD  B0 01				 mov	 al,01h
1  1695	    09FF  8A FF				 mov	 bh,bh
1  1696	    0A01  B3 3F				 mov	 bl,00111111b
1  1697	    0A03  B9 0032			 mov	 cx,50
1  1698	    0A06  33 D2				 xor	 dx,dx
1  1699	    0A08  BD 0A13r			 lea	 bp,wtm
1  1700	    0A0B  CD 10				 int	 10h
1  1701
1  1702
1  1703	    0A0D  5D				 pop	 bp
1  1704	    0A0E  5A				 pop	 dx
1  1705	    0A0F  59				 pop	 cx
1  1706	    0A10  5B				 pop	 bx
1  1707	    0A11  58				 pop	 ax
1  1708
1  1709	    0A12  C3				 ret
1  1710	    0A13  57 61	61 69 74 20 77+	 wtm	 db	 'Waait	wait...						'
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 31
umi.ASM



   1711		  61 69	74 2E 2E 2E 20+
   1712		  20 20	20 20 20 20 20+
   1713		  20 20	20 20 20 20 20+
   1714		  20 20	20 20 20 20 20+
   1715		  20 20	20 20 20 20 20+
   1716		  20 20	20 20 20 20 20+
   1717		  20 20	20 20 20
1  1718	    0A49			 wrWait	 endp
1  1719
1  1720	    0A49			 wrHod	 proc
1  1721
1  1722	    0A49  50				 push	 ax
1  1723	    0A4A  53				 push	 bx
1  1724	    0A4B  51				 push	 cx
1  1725	    0A4C  52				 push	 dx
1  1726	    0A4D  55				 push	 bp
1  1727	    0A4E  16				 push	 ss
1  1728	    0A4F  1E				 push	 ds
1  1729	    0A50  56				 push	 si
1  1730	    0A51  57				 push	 di
1  1731
1  1732	    0A52  B4 13				 mov	 ah,13h
1  1733	    0A54  B0 01				 mov	 al,01h
1  1734	    0A56  32 FF				 xor	 bh,bh
1  1735	    0A58  B3 3F				 mov	 bl,00111111b
1  1736	    0A5A  B9 0032			 mov	 cx,50
1  1737	    0A5D  33 D2				 xor	 dx,dx
1  1738
1  1739	    0A5F  BD 0A6Er			 lea	 bp,gggggg
1  1740	    0A62  CD 10				 int	 10h
1  1741
1  1742	    0A64  5F				 pop	 di
1  1743	    0A65  5E				 pop	 si
1  1744	    0A66  1F				 pop	 ds
1  1745	    0A67  17				 pop	 ss
1  1746	    0A68  5D				 pop	 bp
1  1747	    0A69  5A				 pop	 dx
1  1748	    0A6A  59				 pop	 cx
1  1749	    0A6B  5B				 pop	 bx
1  1750	    0A6C  58				 pop	 ax
1  1751
1  1752	    0A6D  C3			 ret
1  1753	    0A6E  59 6F	75 72 20 68 6F+	 gggggg	 db	 'Your hod  ) Cmn)					    '
   1754		  64 20	20 29 20 43 6D+
   1755		  6E 29	20 20 20 20 20+
   1756		  20 20	20 20 20 20 20+
   1757		  20 20	20 20 20 20 20+
   1758		  20 20	20 20 20 20 20+
   1759		  20 20	20 20 20 20 20+
   1760		  20 20	20 20 20 20 20+
   1761		  20 20
1  1762
1  1763	    0AA8			 wrHod	 endp
1  1764
1  1765
   1766
   1767					 ;=============Timer===========;
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 32
umi.ASM



   1768	    0AA8			 Int_08h:
   1769	    0AA8  FA				 cli
   1770	    0AA9  50				 push	 ax
   1771	    0AAA  83 3E	0561r 01		 cmp	 master,1
   1772	    0AAF  75 36				 jne	 _int_08s
   1773	    0AB1  FF 06	0563r			 inc	 McountIn	 ;time from last receive
   1774	    0AB5  FF 06	0567r			 inc	 McountOut	 ;time from last send
   1775	    0AB9  83 3E	0567r 0A		 cmp	 McountOut,10
   1776	    0ABE  7C 12				 jl	 _no
   1777	    0AC0  80 3E	0786r 01		 cmp	 cansenda,1
   1778	    0AC5  75 05				 jne	 _waitc
   1779	    0AC7  B0 AA				 mov	 al,0aah
   1780	    0AC9  E8 F79D			 call	 Out_Chr
   1781	    0ACC			 _waitc:
   1782	    0ACC  C7 06	0567r 0000		 mov	 McountOut,0
   1783	    0AD2			 _no:
   1784	    0AD2  83 3E	0563r 3C		 cmp	 McountIn,60
   1785	    0AD7  7E 25				 jle	 _nofin
   1786	    0AD9  C7 06	0783r 0001		 mov	 Mflagerr,1
   1787	    0ADF  C7 06	0563r 0000		 mov	 McountIn,0
   1788	    0AE5  EB 17				 jmp	 _nofin
   1789	    0AE7			 _int_08s:
   1790	    0AE7  FF 06	0565r			 inc	 ScountIn
   1791	    0AEB  83 3E	0565r 3C		 cmp ScountIn,60;
   1792	    0AF0  7E 0C				 jle	 _nofin
   1793	    0AF2  C7 06	0781r 0001		 mov	 Sflagerr,1
   1794	    0AF8  C7 06	0565r 0000		 mov	 ScountIn,0
   1795	    0AFE			 _nofin:
   1796	    0AFE  58				 pop	 ax
   1797	    0AFF  EA				 db 0EAh
   1798	    0B00  0000 0000		 Int_08h_old	 dw	 0,0
   1799
   1800					 ;=========Start==========;
   1801	    0B04			 _1:
   1802	    0B04  E8 145B			 call	 _ms
   1803	    0B07  83 3E	0561r 01		 cmp	 master,1
   1804	    0B0C  0F 85	0A69			 jne	 Slave0
   1805
   1806	    0B10  E8 148F			 call	 _inp
   1807
   1808	    0B13  33 C0				 xor	 ax,ax
   1809	    0B15  50				 push	 ax
   1810	    0B16  1F				 pop	 ds
   1811	    0B17  39 06	00CC			 cmp	 [ds:0CCh],ax
   1812	    0B1B  0E				 push	 cs
   1813	    0B1C  1F				 pop	 ds
   1814	    0B1D  74 24				 je	 _mouseNF
   1815
   1816	    0B1F  B8 0000			 mov	 ax,0
   1817	    0B22  CD 33				 int	 33h
   1818	    0B24  3D 0000			 cmp	 ax,0
   1819	    0B27  74 1A				 je	 _mouseNF
   1820
   1821	    0B29  B8 0001			 mov	 ax,01h
   1822	    0B2C  CD 33				 int	 33h
   1823
   1824	    0B2E  B8 000C			 mov	 ax,0Ch
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 33
umi.ASM



   1825	    0B31  BA 2044r			 mov	 dx,offset _obr1
   1826	    0B34  B9 0002			 mov	 cx,2
   1827	    0B37  CD 33				 int	 33h
   1828	    0B39			 _choosep:
   1829	    0B39  B4 00				 mov	 ah,00h
   1830	    0B3B  CD 16				 int	 16h
   1831	    0B3D  3C 1B				 cmp	 al,1Bh
   1832	    0B3F  75 F8				 jnz	 _choosep
   1833	    0B41  EB 08				 jmp	 _vvNick
   1834	    0B43			 _mouseNF:
   1835	    0B43  BA 07EFr			 mov	 dx,offset mouseNotF
   1836	    0B46  B4 09				 mov	 ah,09h
   1837	    0B48  CD 21				 int	 21h
   1838	    0B4A  C3				 ret
   1839	    0B4B			 _vvNick:
   1840	    0B4B  B8 0002			 mov	 ax,2
   1841	    0B4E  CD 33				 int	 33h
   1842	    0B50  33 C9				 xor	 cx,cx
   1843	    0B52  B8 000C			 mov	 ax,0Ch
   1844	    0B55  CD 33				 int	 33h
   1845	    0B57  B4 00				 mov	 ah,0
   1846	    0B59  B0 03				 mov	 al,3h
   1847	    0B5B  CD 10				 int	 10h
   1848
   1849	    0B5D  A0 0806r			 mov	 al,masp[0]
   1850	    0B60  A2 041Br			 mov	 sizeField,al
   1851	    0B63  A0 0807r			 mov	 al,masp[1]
   1852	    0B66  A2 0415r			 mov	 ship4,al
   1853	    0B69  A0 0808r			 mov	 al,masp[2]
   1854	    0B6C  A2 0414r			 mov	 ship3,al
   1855	    0B6F  A0 0809r			 mov	 al,masp[3]
   1856	    0B72  A2 0413r			 mov	 ship2,al
   1857	    0B75  A0 080Ar			 mov	 al,masp[4]
   1858	    0B78  A2 0412r			 mov	 ship1,al
   1859
   1860	    0B7B  E8 FDAE			 call	 vvodNic
   1861	    0B7E  E8 13F7			 call	 _intset
   1862	    0B81  E8 1411			 call	 _vset
   1863
   1864	    0B84  E8 F5C7			 call	 Ser_Ini
   1865
   1866					 ;############Masster
   1867
   1868	    0B87			 _State0:				 ;wait for answer 01 on	owr aa
   1869	    0B87  E8 F706			 call	 Get_Chr
   1870	    0B8A  72 FB				 jc	 _State0
   1871	    0B8C  3C 01				 cmp	 al,01h
   1872	    0B8E  75 F7				 jne	 _State0
   1873	    0B90  C7 06	0563r 0000		 mov McountIn,0
   1874	    0B96  B0 A1				 mov	 al,0a1h
   1875	    0B98  E8 F6CE			 call	 Out_Chr
   1876	    0B9B			 _State01:
   1877	    0B9B  E8 F6F2			 call	 Get_Chr
   1878	    0B9E  72 FB				 jc	 _State01
   1879	    0BA0  3C 01				 cmp	 al,01h
   1880	    0BA2  75 08				 jne	 _State01_1a
   1881	    0BA4  C7 06	0563r 0000		 mov	 McountIn,0
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 34
umi.ASM



   1882	    0BAA  EB EF				 jmp	 _State01
   1883	    0BAC			 _State01_1a:
   1884	    0BAC  3C 1A				 cmp	 al,1ah
   1885	    0BAE  74 02				 je	 State1
   1886	    0BB0  EB E9				 jmp _State01
   1887	    0BB2			 State1:
   1888	    0BB2  C7 06	0563r 0000		 mov	 McountIn,0
   1889
   1890	    0BB8  C6 06	0786r 00		 mov	 cansenda,0
   1891	    0BBD  B0 B1				 mov	 al,0b1h
   1892	    0BBF  E8 F6A7			 call	 Out_Chr
   1893	    0BC2  B0 0A				 mov	 al,10
   1894	    0BC4  E8 F6A2			 call	 Out_Chr
   1895	    0BC7  33 F6				 xor	 si,si
   1896	    0BC9			 _State11:
   1897	    0BC9  8A 84	054Dr			 mov	 al,myName[si]
   1898	    0BCD  E8 F699			 call	 Out_Chr
   1899	    0BD0  46				 inc	 si
   1900	    0BD1  83 FE	0A			 cmp	 si,10
   1901	    0BD4  75 F3				 jne	 _State11
   1902	    0BD6  C6 06	0786r 01		 mov	 cansenda,1
   1903
   1904	    0BDB			 _State1:
   1905	    0BDB  80 3E	0789r 02		 cmp	 state,2
   1906	    0BE0  7C 47				 jl	 _State2and1
   1907	    0BE2  83 3E	075Cr 01		 cmp	 okFin,1
   1908	    0BE7  75 08				 jne	 _State21
   1909	    0BE9  B0 A6				 mov	 al,0a6h
   1910	    0BEB  E8 F67B			 call	 Out_Chr
   1911	    0BEE  E9 07A5			 jmp	 Condition6
   1912	    0BF1			 _State21:
   1913	    0BF1  83 3E	075Ar 01		 cmp	 okGB,1
   1914	    0BF6  75 08				 jne	 _State22
   1915	    0BF8  B0 A7				 mov	 al,0a7h
   1916	    0BFA  E8 F66C			 call	 Out_Chr
   1917	    0BFD  E9 07E5			 jmp	 Condition7
   1918	    0C00			 _State22:
   1919	    0C00  83 3E	075Er 01		 cmp	 okRS,1
   1920	    0C05  75 08				 jne	 _State23
   1921	    0C07  B0 A5				 mov	 al,0a5h
   1922	    0C09  E8 F65D			 call	 Out_Chr
   1923	    0C0C  E9 06ED			 jmp	 Condition5
   1924	    0C0F			 _State23:
   1925	    0C0F  80 3E	0789r 03		 cmp	 state,3
   1926	    0C14  74 13				 je	 _State2and1
   1927	    0C16  83 3E	0760r 01		 cmp	 okRD,1
   1928	    0C1B  75 0C				 jne	 _State2and1
   1929	    0C1D  B0 A3				 mov	 al,0a3h
   1930	    0C1F  E8 F647			 call	 Out_Chr
   1931	    0C22  C6 06	0789r 03		 mov	 state,3
   1932	    0C27  EB B2				 jmp	 _State1
   1933						 ;;wait	for 3a and go to the state 3
   1934
   1935	    0C29			 _State2and1:
   1936	    0C29  E8 F664			 call	 Get_Chr
   1937	    0C2C  72 AD				 jc	 _State1
   1938	    0C2E  3C 01				 cmp	 al,01h
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 35
umi.ASM



   1939	    0C30  75 08				 jne	 _State2_3a
   1940	    0C32  C7 06	0563r 0000		 mov	 McountIn,0
   1941	    0C38  EB A1				 jmp	 _State1
   1942	    0C3A			 _State2_3a:
   1943	    0C3A  80 3E	0789r 03		 cmp	 state,3
   1944	    0C3F  75 18				 jne	 _State2_a4
   1945	    0C41  80 3E	078Ar 01		 cmp	 wstate4,1
   1946	    0C46  74 11				 je	 _State2_a4
   1947	    0C48  3C 3A				 cmp	 al,03ah
   1948	    0C4A  75 0D				 jne	 _State2_a4
   1949	    0C4C  C7 06	0563r 0000		 mov	 McountIn,0
   1950	    0C52  C6 06	078Ar 01		 mov	 wstate4,1
   1951						 ;wait a4 from slave
   1952	    0C57  EB 82				 jmp	 _State1
   1953	    0C59			 _State2_a4:
   1954	    0C59  80 3E	078Ar 01		 cmp	 wstate4,1
   1955	    0C5E  75 12				 jne	 _State1_a6
   1956	    0C60  3C A4				 cmp	 al,0a4h
   1957	    0C62  75 0E				 jne	 _State1_a6
   1958	    0C64  C7 06	0563r 0000		 mov	 McountIn,0
   1959	    0C6A  B0 4A				 mov	 al,04ah
   1960	    0C6C  E8 F5FA			 call	 Out_Chr
   1961	    0C6F  E9 017C			 jmp	 State4
   1962	    0C72			 _State1_a6:
   1963	    0C72  3C A6				 cmp	 al,0a6h
   1964	    0C74  75 0E				 jne	 _State1_a7
   1965	    0C76  C7 06	0563r 0000		 mov	 MCountIn,0
   1966	    0C7C  B0 6A				 mov	 al,06ah
   1967	    0C7E  E8 F5E8			 call	 Out_Chr
   1968	    0C81  E9 0712			 jmp	 Condition6
   1969	    0C84			 _State1_a7:
   1970	    0C84  3C A7				 cmp	 al,0a7h
   1971	    0C86  75 0E				 jne	 _State1_a8
   1972	    0C88  C7 06	0563r 0000		 mov	 MCountIn,0
   1973	    0C8E  B0 7A				 mov	 al,07ah
   1974	    0C90  E8 F5D6			 call	 Out_Chr
   1975	    0C93  E9 074F			 jmp	 Condition7
   1976	    0C96			 _State1_a8:
   1977	    0C96  3C A8				 cmp	 al,0a8h
   1978	    0C98  75 0E				 jne	 _State1_2a
   1979	    0C9A  C7 06	0563r 0000		 mov	 MCountIn,0
   1980	    0CA0  B0 8A				 mov	 al,08ah
   1981	    0CA2  E8 F5C4			 call	 Out_Chr
   1982	    0CA5  E9 0801			 jmp	 Condition8
   1983	    0CA8			 _State1_2a:
   1984	    0CA8  80 3E	0789r 00		 cmp	 state,0
   1985	    0CAD  75 07				 jne	 _State1_b1
   1986	    0CAF  3C 2A				 cmp	 al,02ah
   1987	    0CB1  75 03				 jne	 _State1_b1
   1988	    0CB3  E9 010B			 jmp	 _State2
   1989	    0CB6			 _State1_b1:
   1990	    0CB6  3C B1				 cmp	 al,0b1h
   1991	    0CB8  75 4A				 jne	 _State12
   1992	    0CBA  C7 06	0563r 0000		 mov	 McountIn,0
   1993	    0CC0  C6 06	0786r 00		 mov	 cansenda,0
   1994	    0CC5			 _State1_b11:
   1995	    0CC5  E8 F5C8			 call	 Get_Chr
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 36
umi.ASM



   1996	    0CC8  72 FB				 jc	 _State1_b11
   1997	    0CCA  C7 06	0563r 0000		 mov	 McountIn,0
   1998	    0CD0  A2 0788r			 mov	 lgth,al
   1999	    0CD3  33 F6				 xor	 si,si
   2000	    0CD5			 _State1_b12:
   2001	    0CD5  E8 F5B8			 call	 Get_Chr
   2002	    0CD8  72 FB				 jc	 _State1_b12
   2003	    0CDA  88 84	0557r			 mov	 opName[si],al
   2004	    0CDE  C7 06	0563r 0000		 mov	 McountIn,0
   2005	    0CE4  46				 inc	 si
   2006	    0CE5  83 FE	0A			 cmp	 si,10
   2007	    0CE8  7C 02				 jl	 _State1_b13
   2008	    0CEA  EB 08				 jmp	 _State1_b14
   2009	    0CEC			 _State1_b13:
   2010	    0CEC  8B D6				 mov	 dx,si
   2011	    0CEE  3A 16	0788r			 cmp	 dl,lgth
   2012	    0CF2  7C E1				 jl	 _State1_b12
   2013	    0CF4			 _State1_b14:
   2014	    0CF4  E8 FC0A			 call	 wrNic
   2015	    0CF7  B0 1B				 mov	 al,01bh
   2016	    0CF9  E8 F56D			 call	 Out_Chr
   2017	    0CFC  C6 06	0786r 01		 mov	 cansenda,1
   2018	    0D01  E9 FED7			 jmp	 _State1
   2019	    0D04			 _State12:
   2020	    0D04  3C 1B				 cmp	 al,01bh
   2021	    0D06  74 69				 je	 _State1_b2
   2022	    0D08			 _State1_2b:
   2023	    0D08  80 3E	0787r 00		 cmp	 b2,0
   2024	    0D0D  0F 84	FECA			 je	 _State1
   2025	    0D11  80 3E	0787r 01		 cmp	 b2,1
   2026	    0D16  0F 85	FEC1			 jne	 _State1
   2027	    0D1A  80 3E	0789r 00		 cmp	 state,0
   2028	    0D1F  0F 85	FEB8			 jne	 _State1
   2029	    0D23  3C 2B				 cmp	 al,02bh
   2030	    0D25  0F 85	FEB2			 jne	 _State1
   2031
   2032	    0D29  C6 06	0786r 00		 mov	 cansenda,0
   2033	    0D2E  C7 06	0563r 0000		 mov	 McountIn,0
   2034	    0D34  33 DB				 xor	 bx,bx
   2035	    0D36			 _State1_2b1:
   2036	    0D36  E8 F557			 call	 Get_Chr
   2037	    0D39  72 FB				 jc	 _State1_2b1
   2038	    0D3B  C7 06	0563r 0000		 mov	 McountIn,0
   2039	    0D41  88 87	053Cr			 mov	 allPar[bx],al
   2040	    0D45  43				 inc	 bx
   2041	    0D46  83 FB	05			 cmp	 bx,5
   2042	    0D49  75 EB				 jne	 _State1_2b1
   2043	    0D4B  C6 06	0786r 01		 mov	 cansenda,1
   2044	    0D50  33 F6				 xor	 si,si
   2045	    0D52			 _comp:
   2046	    0D52  8A 84	053Cr			 mov	 al,allPar[si]
   2047	    0D56  38 84	0806r			 cmp	 masp[si],al
   2048	    0D5A  0F 85	074B			 jne	 Condition8
   2049	    0D5E  46				 inc	 si
   2050	    0D5F  83 FE	05			 cmp	 si,5
   2051	    0D62  75 EE				 jne	 _comp
   2052	    0D64  B0 A2				 mov	 al,0a2h
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 37
umi.ASM



   2053	    0D66  E8 F500			 call	 Out_Chr
   2054
   2055	    0D69  C6 06	0787r 02		 mov	 b2,2
   2056	    0D6E  E9 FE6A			 jmp	 _State1
   2057	    0D71			 _State1_b2:
   2058	    0D71  C7 06	0563r 0000		 mov	 McountIn,0
   2059	    0D77  80 3E	0787r 00		 cmp	 b2,0
   2060	    0D7C  0F 85	FE5B			 jne	 _State1
   2061	    0D80  C6 06	0787r 01		 mov	 b2,1
   2062	    0D85  C6 06	0786r 00		 mov	 cansenda,0
   2063	    0D8A  B0 B2				 mov	 al,0b2h
   2064	    0D8C  E8 F4DA			 call	 Out_Chr
   2065	    0D8F  A0 041Br			 mov	 al,sizeField
   2066	    0D92  E8 F4D4			 call	 Out_Chr
   2067	    0D95  A0 0415r			 mov	 al,ship4
   2068	    0D98  A2 041Ar			 mov	 hship4,al
   2069	    0D9B  E8 F4CB			 call	 Out_Chr
   2070	    0D9E  A0 0414r			 mov	 al,ship3
   2071	    0DA1  A2 0419r			 mov	 hship3,al
   2072	    0DA4  E8 F4C2			 call	 Out_Chr
   2073	    0DA7  A0 0413r			 mov	 al,ship2
   2074	    0DAA  A2 0418r			 mov	 hship2,al
   2075	    0DAD  E8 F4B9			 call	 Out_Chr
   2076	    0DB0  A0 0412r			 mov	 al,ship1
   2077	    0DB3  A2 0417r			 mov	 hship1,al
   2078	    0DB6  E8 F4B0			 call	 Out_Chr
   2079	    0DB9  C6 06	0786r 01		 mov	 cansenda,1
   2080
   2081	    0DBE  E9 FE1A			 jmp	 _State1
   2082
   2083	    0DC1			 _State2:
   2084
   2085	    0DC1  C7 06	0563r 0000		 mov	 McountIn,0
   2086	    0DC7  E8 F4ED			 call	 drawField
   2087	    0DCA  E8 FBC8			 call	 wrInf
   2088	    0DCD  E8 FA62			 call	 calcNShip
   2089
   2090	    0DD0  A0 0411r			 mov	 al,Nship
   2091	    0DD3  A2 0416r			 mov	 hNship,al
   2092
   2093	    0DD6  B8 0001			 mov	 ax,01h
   2094	    0DD9  CD 33				 int	 33h
   2095	    0DDB  B8 000C			 mov	 ax,000Ch
   2096	    0DDE  B9 0002			 mov	 cx,02h
   2097	    0DE1  BA 2100r			 mov	 dx,offset ObrRasstS
   2098	    0DE4  CD 33				 int 33h
   2099
   2100					 ;hang mouse ,state2,wait pushing button RD
   2101	    0DE6  C6 06	0789r 02		 mov	 state,2
   2102	    0DEB  E9 FDED			 jmp	 _State1
   2103					 ;###############++Game++############;
   2104	    0DEE			 State4:
   2105	    0DEE  B8 0002			 mov	 ax,02h
   2106	    0DF1  CD 33				 int 33h
   2107
   2108	    0DF3  B8 000C			 mov	 ax,000Ch
   2109	    0DF6  B9 0000			 mov	 cx,0
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 38
umi.ASM



   2110	    0DF9  CD 33				 int 33h
   2111
   2112	    0DFB  B2 46				 mov	 dl,70
   2113	    0DFD  B6 05				 mov	 dh,5
   2114	    0DFF  B9 000A			 mov	 cx,10
   2115	    0E02  C6 06	0762r 00		 mov	 pp,0
   2116	    0E07			 clean4:
   2117	    0E07  B9 000A			 mov	 cx,10
   2118	    0E0A  80 C6	02			 add	 dh,2
   2119	    0E0D  B2 46				 mov	 dl,70
   2120	    0E0F  E8 FA78			 call	 wrClean
   2121	    0E12  80 06	0762r 01		 add	 pp,1
   2122	    0E17  80 3E	0762r 09		 cmp	 pp,9
   2123	    0E1C  7C E9				 jl	 clean4
   2124
   2125	    0E1E  33 C0				 xor	 ax, ax
   2126	    0E20  CD 33				 int	 33h
   2127
   2128	    0E22  B8 000C			 mov	 ax,000Ch
   2129	    0E25  B9 0002			 mov	 cx,0002h
   2130	    0E28  BA 2505r			 mov	 dx,offset Game
   2131	    0E2B  CD 33				 int 33h
   2132
   2133	    0E2D  B8 0001			 mov	 ax,01h
   2134	    0E30  CD 33				 int	 33h
   2135
   2136	    0E32  E8 FC14			 call	 wrHod
   2137
   2138	    0E35  C7 06	0777r 0001		 mov	 myHod,1
   2139
   2140	    0E3B			 MCondition41:
   2141	    0E3B  83 3E	077Fr 01		 cmp	 fyes,1
   2142	    0E40  0F 85	027D			 jne	 Mnext40
   2143
   2144	    0E44  E8 F6C5			 call	 calcAttackShip
   2145
   2146	    0E47  B8 0002			 mov	 ax,02h
   2147	    0E4A  CD 33				 int	 33h
   2148	    0E4C  C6 06	0786r 00		 mov	 cansenda,0
   2149
   2150	    0E51  C6 06	0410r 01		 mov	 hidec,1
   2151
   2152	    0E56  B0 C0				 mov	 al,0c0h
   2153	    0E58  E8 F40E			 call	 Out_Chr
   2154	    0E5B  A0 060Dr			 mov	 al,x
   2155	    0E5E  E8 F408			 call	 Out_Chr
   2156	    0E61  A0 060Er			 mov	 al,y
   2157	    0E64  E8 F402			 call	 Out_Chr
   2158	    0E67  C6 06	0786r 01		 mov	 cansenda,1
   2159	    0E6C			 Mansw:
   2160	    0E6C  E8 F421			 call	 Get_Chr
   2161	    0E6F  72 FB				 jc	 Mansw
   2162	    0E71  3C 01				 cmp	 al,1
   2163	    0E73  75 08				 jne	 Mansww
   2164	    0E75  C7 06	0563r 0000		 mov	 McountIn,0
   2165	    0E7B  EB EF				 jmp	 Mansw
   2166	    0E7D			 Mansww:
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 39
umi.ASM



   2167	    0E7D  C7 06	0563r 0000		 mov	 McountIn,0
   2168	    0E83  3C 0C				 cmp	 al,00ch
   2169	    0E85  75 30				 jne	 Mansw1
   2170	    0E87  C7 06	0777r 0000		 mov	 myHod,0
   2171	    0E8D  C7 06	077Fr 0000		 mov	 fyes,0
   2172	    0E93  E8 FB60			 call	 wrWait
   2173	    0E96  32 E4				 xor	 ah,ah
   2174	    0E98  A0 060Dr			 mov	 al,x
   2175	    0E9B  8B F0				 mov	 si,ax
   2176	    0E9D  33 C0				 xor	 ax,ax
   2177	    0E9F  32 FF				 xor	 bh,bh
   2178	    0EA1  33 D2				 xor	 dx,dx
   2179	    0EA3  8A 1E	060Er			 mov	 bl,y
   2180	    0EA7  B8 000C			 mov	 ax,12
   2181	    0EAA  F7 E3				 mul	 bx
   2182	    0EAC  C6 80	04ACr 02		 mov	 fieldOp[bx][si],2
   2183	    0EB1  E8 F58A			 call	 drawMissOpponent
   2184
   2185	    0EB4  E9 020A			 jmp	 Mnext40
   2186	    0EB7			 Mansw1:
   2187	    0EB7  3C 3C				 cmp	 al,03ch
   2188	    0EB9  75 12				 jne	 Mansw2
   2189	    0EBB  C7 06	0777r 0000		 mov	 myHod,0
   2190	    0EC1  C7 06	077Fr 0000		 mov	 fyes,0
   2191	    0EC7  E8 FB2C			 call	 wrWait
   2192
   2193	    0ECA  E9 01F4			 jmp	 Mnext40
   2194	    0ECD			 Mansw2:
   2195	    0ECD  3C 1C				 cmp	 al,01ch
   2196	    0ECF  0F 85	0098			 jne	 Mansw3
   2197	    0ED3  E8 F515			 call	 drawKillOpponent
   2198
   2199	    0ED6  80 2E	0411r 01		 sub	 Nship,1
   2200	    0EDB  32 E4				 xor	 ah,ah
   2201	    0EDD  A0 060Dr			 mov	 al,x
   2202	    0EE0  8B F0				 mov	 si,ax
   2203	    0EE2  33 C0				 xor	 ax,ax
   2204	    0EE4  32 FF				 xor	 bh,bh
   2205	    0EE6  33 D2				 xor	 dx,dx
   2206	    0EE8  8A 1E	060Er			 mov	 bl,y
   2207	    0EEC  B8 000C			 mov	 ax,12
   2208	    0EEF  F7 E3				 mul	 bx
   2209	    0EF1  8B D8				 mov	 bx,ax
   2210	    0EF3  C6 80	04ACr 01		 mov	 fieldOp[bx][si],1
   2211	    0EF8  83 EB	0C			 sub	 bx,12
   2212	    0EFB  83 EE	01			 sub	 si,1
   2213	    0EFE  80 2E	060Dr 01		 sub	 x,1
   2214	    0F03  80 2E	060Er 01		 sub	 y,1
   2215	    0F08  80 B8	04ACr 05		 cmp	 fieldOp[bx][si],5
   2216	    0F0D  74 08				 je	 Mansw21
   2217	    0F0F  C6 80	04ACr 02		 mov	 fieldOp[bx][si],2
   2218	    0F14  E8 F527			 call	 drawMissOpponent
   2219	    0F17			 Mansw21:
   2220	    0F17  83 C6	02			 add	 si,2
   2221	    0F1A  80 06	060Dr 02		 add	 x,2
   2222	    0F1F  80 B8	04ACr 05		 cmp	 fieldOp[bx][si],5
   2223	    0F24  74 08				 je	 Mansw23
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 40
umi.ASM



   2224	    0F26  C6 80	04ACr 02		 mov	 fieldOp[bx][si],2
   2225	    0F2B  E8 F510			 call	 drawMissOpponent
   2226	    0F2E			 Mansw23:
   2227	    0F2E  83 C3	18			 add	 bx,24
   2228	    0F31  80 06	060Er 02		 add	 y,2
   2229	    0F36  80 B8	04ACr 05		 cmp	 fieldOp[bx][si],5
   2230	    0F3B  74 08				 je	 Mansw24
   2231	    0F3D  C6 80	04ACr 02		 mov	 fieldOp[bx][si],2
   2232	    0F42  E8 F4F9			 call	 drawMissOpponent
   2233	    0F45			 Mansw24:
   2234	    0F45  83 EE	02			 sub	 si,2
   2235	    0F48  80 2E	060Dr 02		 sub	 x,2
   2236	    0F4D  80 B8	04ACr 05		 cmp	 fieldOp[bx][si],5
   2237	    0F52  74 08				 je	 hhh
   2238	    0F54  C6 80	04ACr 02		 mov	 fieldOp[bx][si],2
   2239	    0F59  E8 F4E2			 call	 drawMissOpponent
   2240	    0F5C			 hhh:
   2241	    0F5C  C7 06	0777r 0001		 mov	 myHod,1
   2242	    0F62  C7 06	077Fr 0000		 mov	 fyes,0
   2243	    0F68  E9 0156			 jmp	 Mnext40
   2244	    0F6B			 Mansw3:
   2245	    0F6B  3C 2C				 cmp	 al,02ch
   2246	    0F6D  0F 85	FEFB			 jne	 Mansw	 ;хотя по идее это ошибка
   2247	    0F71  E8 F477			 call	 drawKillOpponent
   2248
   2249	    0F74  80 2E	0411r 01		 sub	 Nship,1
   2250	    0F79  33 C0				 xor	 ax,ax
   2251	    0F7B  A0 060Dr			 mov	 al,x
   2252	    0F7E  8B F0				 mov	 si,ax
   2253	    0F80  33 C0				 xor	 ax,ax
   2254	    0F82  33 DB				 xor	 bx,bx
   2255	    0F84  33 D2				 xor	 dx,dx
   2256	    0F86  8A 1E	060Er			 mov	 bl,y
   2257	    0F8A  B8 000C			 mov	 ax,12
   2258	    0F8D  F7 E3				 mul	 bx
   2259	    0F8F  8B D8				 mov	 bx,ax
   2260	    0F91  C6 80	04ACr 01		 mov	 fieldOp[bx][si],1
   2261	    0F96  83 EB	0C			 sub	 bx,12
   2262	    0F99  83 EE	01			 sub	 si,1
   2263	    0F9C  80 2E	060Dr 01		 sub	 x,1
   2264	    0FA1  80 2E	060Er 01		 sub	 y,1
   2265	    0FA6  80 B8	04ACr 05		 cmp	 fieldOp[bx][si],5
   2266	    0FAB  74 08				 je	 Mansw31
   2267	    0FAD  C6 80	04ACr 02		 mov	 fieldOp[bx][si],2
   2268	    0FB2  E8 F489			 call	 drawMissOpponent
   2269	    0FB5			 Mansw31:
   2270	    0FB5  83 C6	02			 add	 si,2
   2271	    0FB8  80 06	060Dr 02		 add	 x,2
   2272	    0FBD  80 B8	04ACr 05		 cmp	 fieldOp[bx][si],5
   2273	    0FC2  74 08				 je	 Mansw33
   2274	    0FC4  C6 80	04ACr 02		 mov	 fieldOp[bx][si],2
   2275	    0FC9  E8 F472			 call	 drawMissOpponent
   2276	    0FCC			 Mansw33:
   2277	    0FCC  83 C3	18			 add	 bx,24
   2278	    0FCF  80 06	060Er 02		 add	 y , 2
   2279	    0FD4  80 B8	04ACr 05		 cmp	 fieldOp[bx][si] , 5
   2280	    0FD9  74 08				 je	 Mansw34
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 41
umi.ASM



   2281	    0FDB  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   2282	    0FE0  E8 F45B			 call	 drawMissOpponent
   2283	    0FE3			 Mansw34:
   2284	    0FE3  83 EE	02			 sub	 si , 2
   2285	    0FE6  80 2E	060Dr 02		 sub	 x , 2
   2286	    0FEB  80 B8	04ACr 05		 cmp	 fieldOp[bx][si] , 5
   2287	    0FF0  74 08				 je	 Mansw35
   2288	    0FF2  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   2289	    0FF7  E8 F444			 call	 drawMissOpponent
   2290	    0FFA			 Mansw35:
   2291	    0FFA  83 C6	01			 add	 si , 1
   2292	    0FFD  80 06	060Dr 01		 add	 x , 1
   2293	    1002  83 EB	0C			 sub	 bx , 12
   2294	    1005  80 2E	060Er 01		 sub	 y , 1
   2295	    100A  8B C6				 mov	 ax , si
   2296	    100C  A2 0763r			 mov	 xxx , al
   2297	    100F  A0 060Er			 mov	 al , y
   2298	    1012  A2 0764r			 mov	 yyy , al
   2299	    1015			 Mansw36:
   2300	    1015  83 EB	0C			 sub	 bx , 12
   2301	    1018  80 2E	060Er 01		 sub	 y , 1
   2302	    101D  80 B8	04ACr 01		 cmp	 fieldOp[bx][si] , 1
   2303	    1022  74 F1				 je	 Mansw36
   2304	    1024  80 B8	04ACr 00		 cmp	 fieldOp[bx][si] , 0
   2305	    1029  75 08				 jne	 Mansw37
   2306	    102B  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   2307	    1030  E8 F40B			 call	 drawMissOpponent
   2308	    1033			 Mansw37:
   2309	    1033  33 C0				 xor	 ax , ax
   2310	    1035  A0 0764r			 mov	 al , yyy
   2311	    1038  A2 060Er			 mov	 y , al
   2312	    103B  BB 000C			 mov	 bx , 12
   2313	    103E  F7 E3				 mul	 bx
   2314	    1040  8B D8				 mov	 bx , ax
   2315	    1042			 Mansw371:
   2316	    1042  83 C3	0C			 add	 bx , 12
   2317	    1045  80 06	060Er 01		 add	 y , 1
   2318	    104A  80 B8	04ACr 01		 cmp	 fieldOp[bx][si] , 1
   2319	    104F  74 F1				 je	 Mansw371
   2320	    1051  80 B8	04ACr 00		 cmp	 fieldOp[bx][si] , 0
   2321	    1056  75 08				 jne	 Mansw38
   2322	    1058  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   2323	    105D  E8 F3DE			 call	 drawMissOpponent
   2324	    1060			 Mansw38:
   2325	    1060  33 C0				 xor	 ax , ax
   2326	    1062  A0 0764r			 mov	 al , yyy
   2327	    1065  A2 060Er			 mov	 y , al
   2328	    1068  BB 000C			 mov	 bx , 12
   2329	    106B  F7 E3				 mul	 bx
   2330	    106D  8B D8				 mov	 bx , ax
   2331	    106F			 Mansw381:
   2332	    106F  83 C6	01			 add	 si , 1
   2333	    1072  80 06	060Dr 01		 add	 x , 1
   2334	    1077  80 B8	04ACr 01		 cmp	 fieldOp[bx][si] , 1
   2335	    107C  74 F1				 je	 Mansw381
   2336	    107E  80 B8	04ACr 00		 cmp	 fieldOp[bx][si] , 0
   2337	    1083  75 08				 jne	 Mansw39
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 42
umi.ASM



   2338	    1085  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   2339	    108A  E8 F3B1			 call	 drawMissOpponent
   2340	    108D			 Mansw39:
   2341	    108D  33 C0				 xor	 ax , ax
   2342	    108F  A0 0763r			 mov	 al , xxx
   2343	    1092  A2 060Dr			 mov	 x , al
   2344	    1095  8B F0				 mov	 si , ax
   2345	    1097			 Mansw391:
   2346	    1097  83 EE	01			 sub	 si , 1
   2347	    109A  80 2E	060Dr 01		 sub	 x , 1
   2348	    109F  80 B8	04ACr 01		 cmp	 fieldOp[bx][si] , 1
   2349	    10A4  74 F1				 je	 Mansw391
   2350	    10A6  80 B8	04ACr 00		 cmp	 fieldOp[bx][si] , 0
   2351	    10AB  75 08				 jne	 hhhh
   2352	    10AD  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   2353	    10B2  E8 F389			 call	 drawMissOpponent
   2354	    10B5			 hhhh:
   2355	    10B5  C7 06	0777r 0001		 mov	 myHod,1
   2356	    10BB  C7 06	077Fr 0000		 mov	 fyes,0
   2357	    10C1			 Mnext40:
   2358	    10C1  80 3E	0410r 01		 cmp	 hidec,1
   2359	    10C6  75 0A				 jne	 Mnext40w
   2360	    10C8  B8 0001			 mov	 ax,01h
   2361	    10CB  CD 33				 int	 33h
   2362
   2363	    10CD  C6 06	0410r 00		 mov	 hidec,0
   2364	    10D2			 Mnext40w:
   2365	    10D2  83 3E	075Cr 01		 cmp	 okFin,1
   2366	    10D7  75 08				 jne	 Mnext41
   2367	    10D9  B0 A6				 mov	 al,0A6h
   2368	    10DB  E8 F18B			 call	 Out_Chr
   2369	    10DE  E9 02B5			 jmp	 Condition6
   2370	    10E1			 Mnext41:
   2371	    10E1  83 3E	075Ar 01		 cmp	 okGB,1
   2372	    10E6  75 08				 jne	 Mnext42
   2373	    10E8  B0 A7				 mov	 al,0A7h
   2374	    10EA  E8 F17C			 call	 Out_Chr
   2375	    10ED  E9 02F5			 jmp	 Condition7
   2376	    10F0			 Mnext42:
   2377	    10F0  80 3E	0411r 00		 cmp	 Nship,	0
   2378	    10F5  75 26				 jne	 Mnext43
   2379	    10F7  C7 06	0777r 0000		 mov	 myHod,0
   2380	    10FD  B0 A9				 mov	 al,0a9h
   2381	    10FF  E8 F167			 call	 Out_Chr
   2382	    1102			 Mnext421:
   2383	    1102  E8 F18B			 call	 Get_Chr
   2384	    1105  72 FB				 jc	 Mnext421;;;;;;;;;;;;;;&&&&или куда там	все сольется
   2385	    1107  3C 01				 cmp	 al,1
   2386	    1109  75 08				 jne	 Mnext421w
   2387	    110B  C7 06	0563r 0000		 mov	 McountIn,0
   2388	    1111  EB EF				 jmp	 Mnext421
   2389	    1113			 Mnext421w:
   2390	    1113  3C 9A				 cmp	 al,9ah
   2391	    1115  75 EB				 jne	 Mnext421
   2392	    1117  E8 F7AD			 call	 wrWin
   2393	    111A  E9 01D4			 jmp	 Condition9
   2394	    111D			 Mnext43:
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 43
umi.ASM



   2395	    111D  E8 F170			 call	 Get_Chr
   2396	    1120  0F 82	FD17			 jc	 MCondition41
   2397	    1124  3C 01				 cmp	 al,01h
   2398	    1126  75 09				 jne	 MnextS41
   2399	    1128  C7 06	0563r 0000		 mov	 McountIn , 0
   2400	    112E  E9 FD0A			 jmp	 MCondition41
   2401	    1131			 MnextS41:
   2402	    1131  3C A6				 cmp	 al,0a6h
   2403	    1133  75 0E				 jne	 MnextS42
   2404	    1135  C7 06	0563r 0000		 mov	 McountIn , 0
   2405	    113B  B0 6A				 mov	 al, 06ah
   2406	    113D  E8 F129			 call	 Out_Chr
   2407	    1140  E9 0253			 jmp	 Condition6
   2408	    1143			 MnextS42:
   2409	    1143  3C A7				 cmp	 al, 0a7h
   2410	    1145  75 0E				 jne	 MnextS43
   2411	    1147  C7 06	0563r 0000		 mov	 McountIn , 0
   2412	    114D  B0 7A				 mov	 al , 07ah
   2413	    114F  E8 F117			 call	 Out_Chr
   2414	    1152  E9 0290			 jmp	 Condition7
   2415	    1155			 MnextS43:
   2416	    1155  3C A8				 cmp	 al, 0a8h
   2417	    1157  75 14				 jne	 MnextS44
   2418	    1159  C7 06	0563r 0000		 mov	 McountIn , 0
   2419	    115F  B0 8A				 mov	 al , 08ah
   2420	    1161  E8 F105			 call	 Out_Chr
   2421	    1164  C7 06	0775r 0001		 mov	 myErr , 1
   2422	    116A  E9 033C			 jmp	 Condition8
   2423	    116D			 MnextS44:
   2424	    116D  3C C0				 cmp	 al, 0c0h
   2425	    116F  0F 85	0110			 jne	 Mnext49
   2426	    1173  C7 06	0563r 0000		 mov	 McountIn , 0
   2427	    1179			 Mnext441:
   2428	    1179  E8 F114			 call	 Get_Chr
   2429	    117C  72 FB				 jc	 Mnext441
   2430	    117E  A2 0000r			 mov	 xx , al
   2431	    1181  A2 060Dr			 mov	 x , al
   2432	    1184  C7 06	0563r 0000		 mov	 McountIn , 0
   2433	    118A			 Mnext442:
   2434	    118A  E8 F103			 call	 Get_Chr
   2435	    118D  72 FB				 jc	 Mnext442
   2436	    118F  A2 0001r			 mov	 yy , al
   2437	    1192  A2 060Er			 mov	 y , al
   2438	    1195  C7 06	0563r 0000		 mov	 McountIn , 0
   2439	    119B  33 C0				 xor	 ax , ax
   2440	    119D  33 DB				 xor	 bx , bx
   2441	    119F  B8 000C			 mov	 ax , 12
   2442	    11A2  8A 1E	0001r			 mov	 bl , yy
   2443	    11A6  F7 E3				 mul	 bx
   2444	    11A8  8B D8				 mov	 bx , ax
   2445	    11AA  33 C0				 xor	 ax , ax
   2446	    11AC  A0 0000r			 mov	 al , xx
   2447	    11AF  8B F0				 mov	 si , ax
   2448	    11B1  80 B8	041Cr 00		 cmp	 field[bx][si] , 0
   2449	    11B6  75 19				 jne	 Mnext443
   2450	    11B8  C7 06	0777r 0001		 mov	 myHod , 1
   2451	    11BE  E8 F888			 call	 wrHod
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 44
umi.ASM



   2452	    11C1  C6 80	041Cr 03		 mov	 field[bx][si] , 3
   2453	    11C6  E8 F2C5			 call	 drawMissMy
   2454	    11C9  B0 0C				 mov	 al , 00ch
   2455	    11CB  E8 F09B			 call	 Out_Chr
   2456	    11CE  E9 FC6A			 jmp	 MCondition41
   2457	    11D1			 Mnext443:
   2458	    11D1  80 B8	041Cr 02		 cmp	 field[bx][si] , 2
   2459	    11D6  75 13				 jne	 Mnext444
   2460	    11D8  C7 06	0777r 0001		 mov	 myHod , 1
   2461	    11DE  E8 F868			 call	 wrHod
   2462	    11E1  33 C0				 xor	 ax , ax
   2463	    11E3  B0 3C				 mov	 al , 03ch
   2464	    11E5  E8 F081			 call	 Out_Chr
   2465	    11E8  E9 FC50			 jmp	 MCondition41
   2466	    11EB			 Mnext444:
   2467	    11EB  80 B8	041Cr 03		 cmp	 field[bx][si] , 3
   2468	    11F0  75 12				 jne	 Mnext445
   2469	    11F2  B0 3C				 mov	 al , 03ch
   2470	    11F4  50				 push	 ax
   2471	    11F5  E8 F071			 call	 Out_Chr
   2472	    11F8  C7 06	0777r 0001		 mov	 myHod , 1
   2473	    11FE  E8 F848			 call	 wrHod
   2474	    1201  E9 FC37			 jmp	 MCondition41
   2475	    1204			 Mnext445:
   2476	    1204  C6 80	041Cr 02		 mov	 field[bx][si] , 2
   2477	    1209  53				 push	 bx
   2478	    120A  B3 3C				 mov	 bl , 00111100b
   2479	    120C  E8 F19B			 call	 drawKillMy
   2480	    120F  5B				 pop	 bx
   2481	    1210			 Mnext4451:
   2482	    1210  83 EB	0C			 sub	 bx , 12
   2483	    1213  80 B8	041Cr 01		 cmp	 field[bx][si] , 1
   2484	    1218  74 61				 je	 Mnext48
   2485	    121A  80 B8	041Cr 02		 cmp	 field[bx][si] , 2
   2486	    121F  74 EF				 je	 Mnext4451
   2487	    1221			 Mnext446:
   2488	    1221  33 C0				 xor	 ax , ax
   2489	    1223  33 D2				 xor	 dx , dx
   2490	    1225  A0 0001r			 mov	 al , yy
   2491	    1228  BB 000C			 mov	 bx , 12
   2492	    122B  F7 E3				 mul	 bx
   2493	    122D  8B D8				 mov	 bx , ax
   2494	    122F			 Mnext4461:
   2495	    122F  83 C3	0C			 add	 bx , 12
   2496	    1232  80 B8	041Cr 01		 cmp	 field[bx][si] , 1
   2497	    1237  74 42				 je	 Mnext48
   2498	    1239  80 B8	041Cr 02		 cmp	 field[bx][si] , 2
   2499	    123E  74 EF				 je	 Mnext4461
   2500	    1240			 Mnext447:
   2501	    1240  33 C0				 xor	 ax , ax
   2502	    1242  33 D2				 xor	 dx , dx
   2503	    1244  A0 0001r			 mov	 al , yy
   2504	    1247  BB 000C			 mov	 bx , 12
   2505	    124A  F7 E3				 mul	 bx
   2506	    124C  8B D8				 mov	 bx , ax
   2507	    124E			 Mnext4471:
   2508	    124E  4E				 dec	 si
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 45
umi.ASM



   2509	    124F  80 B8	041Cr 01		 cmp	 field[bx][si] , 1
   2510	    1254  74 25				 je	 Mnext48
   2511	    1256  80 B8	041Cr 02		 cmp	 field[bx][si] , 2
   2512	    125B  74 F1				 je	 Mnext4471
   2513	    125D			 Mnext448:
   2514	    125D  33 D2				 xor	 dx , dx
   2515	    125F  A0 0000r			 mov	 al , xx
   2516	    1262  8B F0				 mov	 si , ax
   2517	    1264			 Mnext4481:
   2518	    1264  46				 inc	 si
   2519	    1265  80 B8	041Cr 01		 cmp	 field[bx][si] , 1
   2520	    126A  74 0F				 je	 Mnext48
   2521	    126C  80 B8	041Cr 02		 cmp	 field[bx][si] , 2
   2522	    1271  74 F1				 je	 Mnext4481
   2523	    1273  B0 2C				 mov	 al , 2ch
   2524	    1275  E8 EFF1			 call	 Out_Chr
   2525	    1278  E9 FBC0			 jmp	 MCondition41
   2526
   2527	    127B			 Mnext48:
   2528	    127B  B0 1C				 mov	 al , 1ch
   2529	    127D  E8 EFE9			 call	 Out_Chr
   2530	    1280  E9 FBB8			 jmp	 MCondition41
   2531
   2532	    1283			 Mnext49:
   2533	    1283  3C A9				 cmp	 al, 0a9h
   2534	    1285  75 0A				 jne	 Mnext4a
   2535	    1287  B0 9A				 mov	 al , 09ah
   2536	    1289  E8 EFDD			 call	 Out_Chr
   2537	    128C  E8 F655			 call	 wrWon
   2538	    128F  EB 60				 jmp	 Condition9
   2539	    1291			 Mnext4a:
   2540	    1291  3C B1				 cmp	 al, 0b1h
   2541	    1293  75 48				 jne	 Mnext4b
   2542	    1295  C7 06	0563r 0000		 mov	 McountIn , 0
   2543	    129B			 Mnext4a1:
   2544	    129B  E8 EFF2			 call	 Get_Chr
   2545	    129E  72 FB				 jc	 Mnext4a1
   2546	    12A0  C7 06	0563r 0000		 mov	 McountIn , 0
   2547	    12A6  A2 0762r			 mov	 pp , al
   2548	    12A9  BE 0000			 mov	 si , 0
   2549	    12AC			 Mnext4a2:
   2550	    12AC  E8 EFE1			 call	 Get_Chr
   2551	    12AF  72 FB				 jc	 Mnext4a2
   2552	    12B1  C7 06	0563r 0000		 mov	 McountIn , 0
   2553	    12B7  88 84	0557r			 mov	 opName[si] , al
   2554	    12BB  46				 inc	 si
   2555	    12BC  83 FE	0A			 cmp	 si , 10
   2556	    12BF  7C 0A				 jl	 Mnext4a21
   2557	    12C1  E8 F63D			 call	 wrNic
   2558	    12C4  B0 1B				 mov	 al , 01bh
   2559	    12C6  E8 EFA0			 call	 Out_Chr
   2560	    12C9  EB 12				 jmp	 Mnext4b
   2561	    12CB			 Mnext4a21:
   2562	    12CB  33 D2				 xor	 dx , dx
   2563	    12CD  8B D6				 mov	 dx , si
   2564	    12CF  3A 16	0762r			 cmp	 dl , pp
   2565	    12D3  7C D7				 jl	 Mnext4a2
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 46
umi.ASM



   2566	    12D5  E8 F629			 call	 wrNic
   2567	    12D8  B0 1B				 mov	 al , 01bh
   2568	    12DA  E8 EF8C			 call	 Out_Chr
   2569	    12DD			 Mnext4b:
   2570	    12DD  3C 1B				 cmp	 al, 1bh
   2571	    12DF  75 09				 jne	 Mnext4c
   2572	    12E1  C7 06	0563r 0000		 mov	 McountIn,0
   2573	    12E7  E9 FB51			 jmp	 MCondition41
   2574	    12EA			 Mnext4c:
   2575	    12EA  0F 82	FB4D			 jc	 MCondition41
   2576	    12EE  E9 FB4A			 jmp	 MCondition41
   2577
   2578
   2579
   2580
   2581	    12F1			 Condition9:
   2582	    12F1  B9 0000			 mov	 cx,0
   2583	    12F4  B8 000C			 mov	 ax,0Ch
   2584	    12F7  CD 33				 int	 33h
   2585
   2586	    12F9  E9 0C49			 jmp	 fin
   2587	    12FC			 Condition5:
   2588	    12FC  E8 EF91			 call	 Get_Chr
   2589	    12FF  3C 5A				 cmp	 al,5ah
   2590	    1301  75 F9				 jne	 Condition5
   2591
   2592	    1303  B8 A000			 mov	 ax , 0a000h
   2593	    1306  8E C0				 mov	 es , ax
   2594	    1308  33 C0				 xor	 ax , ax
   2595	    130A  B0 00				 mov	 al , 0h
   2596	    130C  B9 7000			 mov	 cx , 07000h
   2597	    130F  33 FF				 xor	 di , di
   2598	    1311  F3> AA			 rep	 stosb
   2599
   2600	    1313  C7 06	075Er 0000		 mov	 okRS ,	0
   2601	    1319  C7 06	0760r 0000		 mov	 okRD ,	0
   2602	    131F  C7 06	075Cr 0000		 mov	 OkFin , 0
   2603	    1325  C7 06	075Ar 0000		 mov	 OkGB ,	0
   2604	    132B  C7 06	0765r 0000		 mov	 fh4 , 0
   2605	    1331  C7 06	0767r 0000		 mov	 fv4 , 0
   2606	    1337  C7 06	0769r 0000		 mov	 fh3 , 0
   2607	    133D  C7 06	076Br 0000		 mov	 fv3 , 0
   2608	    1343  C7 06	076Dr 0000		 mov	 fh2 , 0
   2609	    1349  C7 06	076Fr 0000		 mov	 fv2 , 0
   2610	    134F  C7 06	0771r 0000		 mov	 f1 , 0
   2611
   2612	    1355  BB 000C			 mov	 bx , 12
   2613	    1358  BE 0001			 mov	 si , 1
   2614	    135B  B9 0009			 mov	 cx , 9
   2615	    135E			 cycle1:
   2616	    135E  C6 80	041Cr 00		 mov	 field[bx][si] , 0
   2617	    1363  C6 80	04ACr 00		 mov	 fieldOp[bx][si] , 0
   2618	    1368  46				 inc	 si
   2619	    1369  83 FE	0B			 cmp	 si , 11
   2620	    136C  7C F0				 jl	 cycle1
   2621	    136E  83 EE	0A			 sub	 si , 10
   2622	    1371  83 C3	0C			 add	 bx , 12
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 47
umi.ASM



   2623	    1374  83 FB	78			 cmp	 bx , 120
   2624	    1377  7E E5				 jle	 cycle1
   2625
   2626	    1379  C6 06	0410r 00		 mov	 hidec,0
   2627	    137E  C6 06	078Ar 00		 mov wstate4,0
   2628	    1383  C6 06	0789r 00		 mov	 state,0
   2629	    1388  C6 06	0786r 01		 mov cansenda,1
   2630	    138D  C7 06	0563r 0000		 mov	 McountIn , 0
   2631					 ;снять	старый обработчик мыши
   2632	    1393  E9 F81C			 jmp	 State1
   2633
   2634	    1396			 Condition6:
   2635	    1396  B8 000C			 mov	 ax , 000Ch
   2636	    1399  B9 0000			 mov	 cx , 0000h ; удалить обработчик событий мыши
   2637	    139C  CD 33				 int	 33h
   2638
   2639	    139E  B2 00				 mov	 dl , 0
   2640	    13A0  B6 00				 mov	 dh , 0
   2641	    13A2  B9 0050			 mov	 cx , 80
   2642	    13A5  E8 F4E2			 call	 wrClean
   2643
   2644	    13A8  83 3E	075Cr 01		 cmp	 okFin , 1
   2645	    13AD  75 05				 jne	 noI
   2646	    13AF  BD 0740r			 lea	 bp , msgShur1
   2647	    13B2  EB 03				 jmp	 II
   2648	    13B4			 noI:
   2649	    13B4  BD 0726r			 lea	 bp , msgShur
   2650	    13B7			 II:
   2651	    13B7  B4 13				 mov	 ah, 13h
   2652	    13B9  B0 01				 mov	 al , 01h
   2653	    13BB  B7 00				 mov	 bh , 0
   2654	    13BD  B3 3B				 mov	 bl , 00111011b
   2655	    13BF  B9 001A			 mov	 cx , 26
   2656	    13C2  B2 00				 mov	 dl , 0
   2657	    13C4  B6 00				 mov	 dh , 0
   2658	    13C6  CD 10				 int	 10h
   2659	    13C8  C6 06	0410r 00			 mov	 hidec,0
   2660	    13CD  C6 06	078Ar 00		 mov wstate4,0
   2661	    13D2  C6 06	0789r 00		 mov	 state,0
   2662	    13D7  C6 06	0786r 01		 mov cansenda,1
   2663	    13DC  C7 06	0563r 0000		 mov	 McountIn , 0
   2664	    13E2  E9 FF0C			 jmp	 Condition9
   2665
   2666	    13E5			 Condition7:
   2667	    13E5  B8 000C			 mov	 ax , 000Ch
   2668	    13E8  B9 0000			 mov	 cx , 0000h ; удалить обработчик событий мыши
   2669	    13EB  CD 33				 int	 33h
   2670
   2671	    13ED  83 3E	075Ar 01		 cmp	 okGB ,	1
   2672	    13F2  0F 84	0B4F			 je	 fin
   2673
   2674	    13F6  B8 A000			 mov	 ax , 0a000h
   2675	    13F9  8E C0				 mov	 es , ax
   2676	    13FB  33 C0				 xor	 ax , ax
   2677	    13FD  B0 00				 mov	 al , 0h
   2678	    13FF  B9 7000			 mov	 cx , 07000h
   2679	    1402  33 FF				 xor	 di , di
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 48
umi.ASM



   2680	    1404  F3> AA			 rep	 stosb
   2681
   2682	    1406  B4 13				 mov	 ah, 13h
   2683	    1408  B0 01				 mov	 al , 01h
   2684	    140A  B7 00				 mov	 bh , 0
   2685	    140C  B3 3B				 mov	 bl , 00111011b
   2686	    140E  B9 001A			 mov	 cx , 26
   2687	    1411  B2 00				 mov	 dl , 0
   2688	    1413  B6 00				 mov	 dh , 0
   2689	    1415  BD 06A4r			 lea	 bp , mGB
   2690	    1418  CD 10				 int	 10h
   2691
   2692	    141A  C7 06	075Er 0000		 mov	 okRS ,	0
   2693	    1420  C7 06	0760r 0000		 mov	 okRD ,	0
   2694	    1426  C7 06	075Cr 0000		 mov	 OkFin , 0
   2695	    142C  C7 06	075Ar 0000		 mov	 OkGB ,	0
   2696	    1432  C7 06	0765r 0000		 mov	 fh4 , 0
   2697	    1438  C7 06	0767r 0000		 mov	 fv4 , 0
   2698	    143E  C7 06	0769r 0000		 mov	 fh3 , 0
   2699	    1444  C7 06	076Br 0000		 mov	 fv3 , 0
   2700	    144A  C7 06	076Dr 0000		 mov	 fh2 , 0
   2701	    1450  C7 06	076Fr 0000		 mov	 fv2 , 0
   2702	    1456  C7 06	0771r 0000		 mov	 f1 , 0
   2703
   2704	    145C  BB 000C			 mov	 bx , 12
   2705	    145F  BE 0001			 mov	 si , 1
   2706	    1462  B9 0009			 mov	 cx , 9
   2707	    1465			 cycle2:
   2708	    1465  C6 80	041Cr 00		 mov	 field[bx][si] , 0
   2709	    146A  C6 80	04ACr 00		 mov	 fieldOp[bx][si] , 0
   2710	    146F  46				 inc	 si
   2711	    1470  83 FE	0B			 cmp	 si , 11
   2712	    1473  7C F0				 jl	 cycle2
   2713	    1475  83 EE	0A			 sub	 si , 10
   2714	    1478  83 C3	0C			 add	 bx , 12
   2715	    147B  83 FB	78			 cmp	 bx , 120
   2716	    147E  7E E5				 jle	 cycle2
   2717
   2718	    1480  C7 06	0783r 0000		 mov	 Mflagerr , 0
   2719	    1486  C7 06	0563r 0000		 mov	 McountIn , 0
   2720
   2721	    148C  C6 06	0410r 00			 mov	 hidec,0
   2722	    1491  C6 06	078Ar 00		 mov wstate4,0
   2723	    1496  C6 06	0789r 00		 mov	 state,0
   2724	    149B  C6 06	0786r 01		 mov cansenda,1
   2725	    14A0  C7 06	0563r 0000		 mov	 McountIn , 0
   2726	    14A6  E9 F6DE			 jmp	 _State0
   2727
   2728	    14A9			 Condition8:
   2729	    14A9  B8 000C			 mov	 ax , 000Ch
   2730	    14AC  B9 0000			 mov	 cx , 0000h ; удалить обработчик событий мыши
   2731	    14AF  CD 33				 int	 33h
   2732
   2733	    14B1  83 3E	0775r 01		 cmp	 myErr , 1
   2734	    14B6  74 05				 je	 mr
   2735	    14B8  BD 070Cr			 lea	 bp , opErrProt
   2736	    14BB  EB 03				 jmp	 nmr
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 49
umi.ASM



   2737	    14BD			 mr:
   2738	    14BD  BD 06F2r			 lea	 bp , myErrProt
   2739	    14C0			 nmr:
   2740	    14C0  B4 13				 mov	 ah, 13h
   2741	    14C2  B0 01				 mov	 al , 01h
   2742	    14C4  B7 00				 mov	 bh , 0
   2743	    14C6  B3 3B				 mov	 bl , 00111011b
   2744	    14C8  B9 001A			 mov	 cx , 26
   2745	    14CB  B2 00				 mov	 dl , 0
   2746	    14CD  B6 00				 mov	 dh , 0
   2747	    14CF  CD 10				 int	 10h
   2748	    14D1			 ohoho:
   2749	    14D1  B8 0003			 mov	 ax , 03h
   2750	    14D4  CD 33				 int	 33h
   2751	    14D6  80 E3	02			 and	 bl , 0010b
   2752	    14D9  80 FB	02			 cmp	 bl , 0010b
   2753	    14DC  75 F3				 jne	 ohoho
   2754
   2755	    14DE  B8 A000			 mov	 ax , 0a000h
   2756	    14E1  8E C0				 mov	 es , ax
   2757	    14E3  33 C0				 xor	 ax , ax
   2758	    14E5  B0 00				 mov	 al , 0h
   2759	    14E7  B9 7000			 mov	 cx , 07000h
   2760	    14EA  33 FF				 xor	 di , di
   2761	    14EC  F3> AA			 rep	 stosb
   2762
   2763	    14EE  C7 06	075Er 0000		 mov	 okRS ,	0
   2764	    14F4  C7 06	0760r 0000		 mov	 okRD ,	0
   2765	    14FA  C7 06	075Cr 0000		 mov	 OkFin , 0
   2766	    1500  C7 06	075Ar 0000		 mov	 OkGB ,	0
   2767	    1506  C7 06	0765r 0000		 mov	 fh4 , 0
   2768	    150C  C7 06	0767r 0000		 mov	 fv4 , 0
   2769	    1512  C7 06	0769r 0000		 mov	 fh3 , 0
   2770	    1518  C7 06	076Br 0000		 mov	 fv3 , 0
   2771	    151E  C7 06	076Dr 0000		 mov	 fh2 , 0
   2772	    1524  C7 06	076Fr 0000		 mov	 fv2 , 0
   2773	    152A  C7 06	0771r 0000		 mov	 f1 , 0
   2774
   2775	    1530  BB 000C			 mov	 bx , 12
   2776	    1533  BE 0001			 mov	 si , 1
   2777	    1536  B9 0009			 mov	 cx , 9
   2778	    1539			 cycle3:
   2779	    1539  C6 80	041Cr 00		 mov	 field[bx][si] , 0
   2780	    153E  C6 80	04ACr 00		 mov	 fieldOp[bx][si] , 0
   2781	    1543  46				 inc	 si
   2782	    1544  83 FE	0B			 cmp	 si , 11
   2783	    1547  7C F0				 jl	 cycle3
   2784	    1549  83 EE	0A			 sub	 si , 10
   2785	    154C  83 C3	0C			 add	 bx , 12
   2786	    154F  E2 E8				 loop	 cycle3
   2787	    1551  C6 06	0410r 00	 mov	 hidec,0
   2788	    1556  C7 06	0783r 0000		 mov	 Mflagerr , 0
   2789	    155C  C6 06	0410r 00			 mov	 hidec,0
   2790	    1561  C6 06	078Ar 00		 mov wstate4,0
   2791	    1566  C6 06	0789r 00		 mov	 state,0
   2792	    156B  C6 06	0786r 01		 mov cansenda,1
   2793	    1570  C7 06	0563r 0000		 mov	 McountIn , 0
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 50
umi.ASM



   2794
   2795	    1576  E9 F60E			 jmp	 _State0
   2796					 ;=========================Slave===============
   2797	    1579			 Slave0:;;;;;+++++++++++++++
   2798	    1579  E8 09FC			 call	 _intset
   2799	    157C  E8 0A16			 call	 _vset
   2800
   2801	    157F  E8 EBCC			 call	 Ser_Ini
   2802
   2803	    1582  E8 F3A7			 call	 vvodNic
   2804					 ;#############Slave
   2805					 ;	 mov	 ah,09h
   2806					 ;	 xor	 al,al
   2807					 ;	 mov	 dx,offset str11
   2808					 ;	 int	 21h
   2809
   2810	    1585			 _Slave0:
   2811	    1585  E8 ED08			 call	 Get_Chr
   2812	    1588  73 FB				 jnc	 _Slave0
   2813	    158A  3C AA				 cmp	 al,0aah
   2814	    158C  75 0D				 jne	 _Slave_a1
   2815
   2816	    158E  C7 06	0565r 0000		 mov	 ScountIn,0
   2817	    1594  B0 01				 mov	 al,01h
   2818	    1596  E8 ECD0			 call	 Out_Chr
   2819	    1599  EB EA				 jmp	 _Slave0
   2820	    159B			 _Slave_a1:
   2821	    159B  3C A1				 cmp	 al,0a1h
   2822	    159D  75 E6				 jne	 _Slave0
   2823	    159F  C7 06	0565r 0000		 mov	 ScountIn,0
   2824	    15A5  B0 1A				 mov	 al,1ah
   2825	    15A7  E8 ECBF			 call	 Out_Chr
   2826
   2827	    15AA			 _Slave1:
   2828	    15AA  80 3E	0789r 00		 cmp	 state,0
   2829	    15AF  74 53				 je	 _Slave2and1
   2830	    15B1  83 3E	075Cr 01		 cmp	 okFin,1
   2831	    15B6  75 08				 jne	 _Slave21
   2832	    15B8  B0 A6				 mov	 al,0a6h
   2833	    15BA  E8 ECAC			 call	 Out_Chr
   2834	    15BD  E9 0795			 jmp	 SCondition6
   2835	    15C0			 _Slave21:
   2836	    15C0  83 3E	075Ar 01		 cmp	 okGB,1
   2837	    15C5  75 08				 jne	 _Slave22
   2838	    15C7  B0 A7				 mov	 al,0a7h
   2839	    15C9  E8 EC9D			 call	 Out_Chr
   2840	    15CC  E9 07DA			 jmp	 SCondition7
   2841	    15CF			 _Slave22:
   2842	    15CF  83 3E	075Er 01		 cmp	 okRS,1
   2843	    15D4  75 08				 jne	 _Slave23
   2844	    15D6  B0 A5				 mov	 al,0a5h
   2845	    15D8  E8 EC8E			 call	 Out_Chr
   2846	    15DB  E9 06D6			 jmp	 SCondition5
   2847	    15DE			 _Slave23:
   2848	    15DE  80 3E	0789r 04		 cmp	 state,4
   2849	    15E3  74 1F				 je	 _Slave2and1
   2850	    15E5  83 3E	0760r 01		 cmp	 okRD,1
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 51
umi.ASM



   2851	    15EA  75 18				 jne	 _Slave2and1
   2852	    15EC  C6 06	0785r 01		 mov	 slaveR,1
   2853	    15F1  80 3E	0789r 03		 cmp	 state,3;нажали	готов но мастер	еще не прислал!	переписать!!!
   2854	    15F6  75 0C				 jne	 _Slave2and1
   2855	    15F8  B0 A4				 mov	 al,0a4h
   2856	    15FA  E8 EC6C			 call	 Out_Chr
   2857	    15FD  C6 06	0789r 04		 mov	 state,4
   2858					 ;	 wait for master 4a
   2859					 ;	 xor	 ax,ax
   2860					 ;	 mov	 ah,09h
   2861					 ;	 mov	 dx,offset s4a1
   2862					 ;	 int	 21h
   2863
   2864	    1602  EB A6				 jmp	 _Slave1
   2865						 ;;wait	for 3a and go to the state 3
   2866
   2867
   2868
   2869	    1604			 _Slave2and1:
   2870	    1604  E8 EC89			 call	 Get_Chr
   2871	    1607  72 A1				 jc	 _Slave1
   2872	    1609  3C AA				 cmp	 al,0aah
   2873	    160B  75 0D				 jne	 _Slave3_4a
   2874	    160D  C7 06	0565r 0000		 mov	 ScountIn,0
   2875	    1613  B0 01				 mov	 al,01h
   2876	    1615  E8 EC51			 call	 Out_Chr
   2877	    1618  EB 90				 jmp	 _Slave1
   2878	    161A			 _Slave3_4a:
   2879	    161A  80 3E	0789r 04		 cmp	 state,4
   2880	    161F  75 0F				 jne	 _Slave2_a3
   2881	    1621  3C 4A				 cmp	 al,04ah
   2882	    1623  75 0B				 jne	 _Slave2_a3
   2883	    1625  C7 06	0565r 0000		 mov	 ScountIn,0
   2884	    162B  33 C0					 xor	 ax,ax
   2885					 ;	 mov	 ah,09h
   2886					 ;	 mov	 dx,offset sa4
   2887					 ;	 int	 21h
   2888	    162D  E9 0181			 jmp	 Slave4
   2889	    1630			 _Slave2_a3:
   2890	    1630  80 3E	0789r 02		 cmp	 state,2;;;;;;;;;;;;;;;;;;;;;;;;;;!!!!!!!!!!!!!!!!
   2891	    1635  75 2A				 jne	 _Slave1_a6
   2892	    1637  3C A3				 cmp	 al,0a3h
   2893	    1639  75 26				 jne	 _Slave1_a6
   2894	    163B  C7 06	0565r 0000		 mov	 ScountIn,0
   2895	    1641  B0 3A				 mov	 al,03ah
   2896	    1643  E8 EC23			 call	 Out_Chr
   2897
   2898	    1646  C6 06	0789r 03		 mov	 state,3
   2899	    164B  80 3E	0785r 01		 cmp	 slaveR,1
   2900	    1650  0F 85	FF56			 jne	 _Slave1;wait for ready	slave
   2901	    1654  B0 A4				 mov	 al,0a4h
   2902	    1656  E8 EC10			 call	 Out_Chr
   2903	    1659  C6 06	0789r 04		 mov	 state,4
   2904					 ;	 xor	 ax,ax
   2905					 ;	 mov	 ah,09h
   2906					 ;	 mov	 dx,offset s4a2
   2907					 ;	 int	 21h
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 52
umi.ASM



   2908	    165E  E9 FF49			 jmp	 _Slave1;wait for master answer	4a
   2909
   2910	    1661			 _Slave1_a6:
   2911	    1661  3C A6				 cmp	 al,0a6h
   2912	    1663  75 0B				 jne	 _Slave1_a7
   2913	    1665  C7 06	0565r 0000		 mov	 SCountIn,0
   2914	    166B  B0 6A				 mov	 al,06ah
   2915	    166D  E9 06E5			 jmp	 SCondition6
   2916	    1670			 _Slave1_a7:
   2917	    1670  3C A7				 cmp	 al,0a7h
   2918	    1672  75 0B				 jne	 _Slave1_a8
   2919	    1674  C7 06	0565r 0000		 mov	 SCountIn,0
   2920	    167A  B0 7A				 mov	 al,07ah
   2921	    167C  E9 072A			 jmp	 SCondition7
   2922	    167F			 _Slave1_a8:
   2923	    167F  3C A8				 cmp	 al,0a8h
   2924	    1681  75 0B				 jne	 _Slave1_b1
   2925	    1683  C7 06	0565r 0000		 mov	 SCountIn,0
   2926	    1689  B0 8A				 mov	 al,08ah
   2927	    168B  E9 07E1			 jmp	 SCondition8
   2928	    168E			 _Slave1_b1:
   2929	    168E  3C B1				 cmp	 al,0b1h
   2930	    1690  75 59				 jne	 _Slave12
   2931	    1692  C7 06	0565r 0000		 mov	 ScountIn,0
   2932	    1698			 _Slave1_b11:
   2933	    1698  E8 EBF5			 call	 Get_Chr
   2934	    169B  72 FB				 jc	 _Slave1_b11
   2935	    169D  C7 06	0565r 0000		 mov	 ScountIn,0
   2936	    16A3  A2 0788r			 mov	 lgth,al
   2937	    16A6  33 F6				 xor	 si,si
   2938	    16A8			 _Slave1_b12:
   2939	    16A8  E8 EBE5			 call	 Get_Chr
   2940	    16AB  72 FB				 jc	 _Slave1_b12
   2941	    16AD  88 84	0557r			 mov	 opName[si],al
   2942	    16B1  C7 06	0565r 0000		 mov	 ScountIn,0
   2943	    16B7  46				 inc	 si
   2944	    16B8  83 FE	0A			 cmp	 si,10
   2945	    16BB  7C 02				 jl	 _Slave1_b13
   2946	    16BD  EB 08				 jmp	 _Slave1_b14
   2947	    16BF			 _Slave1_b13:
   2948	    16BF  8B D6				 mov	 dx,si
   2949	    16C1  3A 16	0788r			 cmp	 dl,lgth
   2950	    16C5  7C E1				 jl	 _Slave1_b12
   2951	    16C7			 _Slave1_b14:
   2952	    16C7  E8 F237			 call	 wrNic
   2953	    16CA  B0 1B				 mov	 al,01bh
   2954
   2955	    16CC  E8 EB9A			 call	 Out_Chr
   2956	    16CF  B0 B1				 mov	 al,0b1h
   2957	    16D1  E8 EB95			 call	 Out_Chr
   2958	    16D4  B0 0A				 mov	 al,10
   2959	    16D6  E8 EB90			 call	 Out_Chr
   2960	    16D9  33 F6				 xor	 si,si
   2961	    16DB			 _Slave11:
   2962	    16DB  8A 84	054Dr			 mov	 al,myName[si]
   2963	    16DF  E8 EB87			 call	 Out_Chr
   2964	    16E2  46				 inc	 si
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 53
umi.ASM



   2965	    16E3  83 FE	0A			 cmp	 si,10
   2966	    16E6  75 F3				 jne	 _Slave11
   2967	    16E8  E9 FEBF			 jmp	 _Slave1
   2968	    16EB			 _Slave12:
   2969	    16EB  3C 1B				 cmp	 al,01bh
   2970	    16ED  75 09				 jne	 _Slave1_a2
   2971	    16EF  C7 06	0565r 0000		 mov	 ScountIn,0
   2972	    16F5  E9 FEB2			 jmp	 _Slave1
   2973	    16F8			 _Slave1_a2:
   2974	    16F8  80 3E	0789r 00		 cmp	 state,0
   2975	    16FD  0F 85	FEA9			 jne	 _Slave1
   2976	    1701  3C A2				 cmp	 al,0a2h
   2977	    1703  75 0D				 jne	 _Slave1_b2
   2978	    1705  C7 06	0565r 0000		 mov	 ScountIn,0
   2979	    170B  B0 2A				 mov	 al,02ah
   2980	    170D  E8 EB59			 call	 Out_Chr
   2981	    1710  EB 73				 jmp	 _Slave2
   2982	    1712			 _Slave1_b2:
   2983	    1712  3C B2				 cmp	 al,0b2h
   2984	    1714  0F 85	FE92			 jne	 _Slave1
   2985	    1718  C7 06	0565r 0000		 mov	 ScountIn,0
   2986	    171E  33 DB				 xor	 bx,bx
   2987	    1720			 _Slave1_b21:
   2988	    1720  E8 EB6D			 call Get_Chr
   2989	    1723  72 FB				 jc	 _Slave1_b21
   2990	    1725  C7 06	0565r 0000		 mov	 ScountIn,0
   2991	    172B  88 87	053Cr			 mov	 allPar[bx],al
   2992	    172F  43				 inc	 bx
   2993	    1730  83 FB	05			 cmp	 bx,5
   2994	    1733  75 EB				 jne	 _Slave1_b21
   2995
   2996	    1735  A0 053Cr			 mov	 al,allPar[0]
   2997	    1738  A2 041Br			 mov	 sizeField,al
   2998	    173B  A0 053Dr			 mov	 al,allPar[1]
   2999	    173E  A2 0415r			 mov	 ship4,al
   3000	    1741  A2 041Ar			 mov	 hship4	, al
   3001	    1744  A0 053Er			 mov	 al,allPar[2]
   3002	    1747  A2 0414r			 mov	 ship3,al
   3003	    174A  A2 0419r			 mov	 hship3	, al
   3004	    174D  A0 053Fr			 mov	 al,allPar[3]
   3005	    1750  A2 0413r			 mov	 ship2,al
   3006	    1753  A2 0418r			 mov	 hship2	, al
   3007	    1756  A0 0540r			 mov	 al,allPar[4]
   3008	    1759  A2 0412r			 mov	 ship1,al
   3009	    175C  A2 0417r			 mov	 hship1	, al
   3010
   3011	    175F  B0 2B				 mov	 al,02Bh
   3012	    1761  E8 EB05			 call	 Out_Chr
   3013	    1764  A0 041Br			 mov	 al,sizeField
   3014	    1767  E8 EAFF			 call	 Out_Chr
   3015	    176A  A0 0415r			 mov	 al,ship4
   3016	    176D  E8 EAF9			 call	 Out_Chr
   3017	    1770  A0 0414r			 mov	 al,ship3
   3018	    1773  E8 EAF3			 call	 Out_Chr
   3019	    1776  A0 0413r			 mov	 al,ship2
   3020	    1779  E8 EAED			 call	 Out_Chr
   3021	    177C  A0 0412r			 mov	 al,ship1
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 54
umi.ASM



   3022	    177F  E8 EAE7			 call	 Out_Chr
   3023	    1782  E9 FE25			 jmp	 _Slave1
   3024	    1785			 _Slave2:
   3025	    1785  E8 EB2F			 call	 drawField
   3026	    1788  E8 F20A			 call	 wrInf
   3027	    178B  E8 F0A4			 call	 calcNShip
   3028
   3029	    178E  A0 0411r			 mov	 al,Nship
   3030	    1791  A2 0416r			 mov	 hNship,al
   3031
   3032	    1794  B8 0000			 mov	 ax,0
   3033	    1797  CD 33				 int	 33h
   3034
   3035	    1799  B8 0001			 mov	 ax,01h
   3036	    179C  CD 33				 int	 33h
   3037
   3038	    179E  B8 000C			 mov	 ax,000Ch
   3039	    17A1  B9 0002			 mov	 cx,02h
   3040	    17A4  BA 2100r			 mov	 dx,offset ObrRasstS
   3041	    17A7  CD 33				 int 33h
   3042					 ;wait a3 from master and rd
   3043	    17A9  C6 06	0789r 02		 mov	 state,2
   3044	    17AE  E9 FDF9			 jmp	 _Slave1
   3045	    17B1			 Slave4:
   3046	    17B1  B8 0002			 mov	 ax,02h
   3047	    17B4  CD 33				 int 33h
   3048
   3049	    17B6  B8 000C			 mov	 ax,000Ch
   3050	    17B9  B9 0000			 mov	 cx,0
   3051	    17BC  CD 33				 int 33h
   3052
   3053	    17BE  B2 46				 mov	 dl,70
   3054	    17C0  B6 05				 mov	 dh,5
   3055	    17C2  B9 000A			 mov	 cx,10
   3056	    17C5  C6 06	0762r 00		 mov	 pp,0
   3057	    17CA			 clean42:
   3058	    17CA  B9 000A			 mov	 cx,10
   3059	    17CD  80 C6	02			 add	 dh,2
   3060	    17D0  B2 46				 mov	 dl,70
   3061	    17D2  E8 F0B5			 call	 wrClean
   3062	    17D5  80 06	0762r 01		 add	 pp,1
   3063	    17DA  80 3E	0762r 09		 cmp	 pp,9
   3064	    17DF  7C E9				 jl	 clean42
   3065
   3066	    17E1  33 C0				 xor ax, ax
   3067	    17E3  CD 33				 int 33h
   3068
   3069	    17E5  B8 000C			 mov	 ax,000Ch
   3070	    17E8  B9 0002			 mov	 cx,0002h
   3071	    17EB  BA 2505r			 mov	 dx,offset Game
   3072	    17EE  CD 33				 int 33h
   3073
   3074	    17F0  B8 0001			 mov	 ax,01h
   3075	    17F3  CD 33				 int	 33h
   3076					 ;	 call	 wrHod
   3077	    17F5			 SCondition41:
   3078
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 55
umi.ASM



   3079	    17F5  83 3E	077Fr 01		 cmp	 fyes,1
   3080	    17FA  0F 85	0278			 jne	 Snext40
   3081
   3082	    17FE  E8 ED0B			 call	 calcAttackShip
   3083	    1801  B8 0002			 mov	 ax , 02h
   3084	    1804  CD 33				 int	 33h
   3085
   3086	    1806  C6 06	0410r 01		 mov	 hidec,1
   3087
   3088	    180B  B0 C0				 mov	 al , 0c0h
   3089	    180D  E8 EA59			 call	 Out_Chr
   3090	    1810  A0 060Dr			 mov	 al , x
   3091	    1813  E8 EA53			 call	 Out_Chr
   3092	    1816  A0 060Er			 mov	 al , y
   3093	    1819  E8 EA4D			 call	 Out_Chr
   3094	    181C			 Sansw:
   3095	    181C  E8 EA71			 call	 Get_Chr
   3096	    181F  72 FB				 jc	 Sansw
   3097	    1821  3C AA				 cmp	 al,0aah
   3098	    1823  75 0D				 jne	 Sansww
   3099	    1825  C7 06	0565r 0000		 mov	 ScountIn,0
   3100	    182B  B0 01				 mov	 al,1
   3101	    182D  E8 EA39			 call	 Out_Chr
   3102	    1830  EB C3				 jmp	 SCondition41
   3103	    1832			 Sansww:
   3104	    1832  C7 06	0565r 0000		 mov	 ScountIn , 0
   3105	    1838  3C 0C				 cmp	 al, 00ch
   3106	    183A  75 30				 jne	 Sansw1
   3107	    183C  C7 06	0777r 0000		 mov	 myHod , 0
   3108	    1842  C7 06	077Fr 0000		 mov	 fyes ,	0
   3109	    1848  E8 F1AB			 call	 wrWait
   3110	    184B  33 C0				 xor	 ax , ax
   3111	    184D  A0 060Dr			 mov	 al , x
   3112	    1850  8B F0				 mov	 si , ax
   3113	    1852  33 C0				 xor	 ax , ax
   3114	    1854  33 DB				 xor	 bx , bx
   3115	    1856  33 D2				 xor	 dx , dx
   3116	    1858  8A 1E	060Er			 mov	 bl , y
   3117	    185C  B8 000C			 mov	 ax , 12
   3118	    185F  F7 E3				 mul	 bx
   3119	    1861  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   3120	    1866  E8 EBD5			 call	 drawMissOpponent
   3121	    1869  E9 020A			 jmp	 Snext40
   3122	    186C			 Sansw1:
   3123	    186C  3C 3C				 cmp	 al, 03ch
   3124	    186E  75 12				 jne	 Sansw2
   3125	    1870  C7 06	0777r 0000		 mov	 myHod , 0
   3126	    1876  C7 06	077Fr 0000		 mov	 fyes ,	0
   3127	    187C  E8 F177			 call	 wrWait
   3128	    187F  E9 01F4			 jmp	 Snext40
   3129	    1882			 Sansw2:
   3130	    1882  3C 1C				 cmp	 al, 01ch
   3131	    1884  0F 85	0098			 jne	 Sansw3
   3132	    1888  E8 EB60			 call	 drawKillOpponent
   3133	    188B  80 2E	0411r 01		 sub	 Nship , 1
   3134	    1890  33 C0				 xor	 ax , ax
   3135	    1892  A0 060Dr			 mov	 al , x
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 56
umi.ASM



   3136	    1895  8B F0				 mov	 si , ax
   3137	    1897  33 C0				 xor	 ax , ax
   3138	    1899  33 DB				 xor	 bx , bx
   3139	    189B  33 D2				 xor	 dx , dx
   3140	    189D  8A 1E	060Er			 mov	 bl , y
   3141	    18A1  B8 000C			 mov	 ax , 12
   3142	    18A4  F7 E3				 mul	 bx
   3143	    18A6  8B D8				 mov	 bx , ax
   3144	    18A8  C6 80	04ACr 01		 mov	 fieldOp[bx][si] , 1
   3145	    18AD  83 EB	0C			 sub	 bx , 12
   3146	    18B0  83 EE	01			 sub	 si , 1
   3147	    18B3  80 2E	060Dr 01		 sub	 x , 1
   3148	    18B8  80 2E	060Er 01		 sub	 y , 1
   3149	    18BD  80 B8	04ACr 05		 cmp	 fieldOp[bx][si] , 5
   3150	    18C2  74 08				 je	 Sansw21
   3151	    18C4  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   3152	    18C9  E8 EB72			 call	 drawMissOpponent
   3153	    18CC			 Sansw21:
   3154	    18CC  83 C6	02			 add	 si , 2
   3155	    18CF  80 06	060Dr 02		 add	 x , 2
   3156	    18D4  80 B8	04ACr 05		 cmp	 fieldOp[bx][si] , 5
   3157	    18D9  74 08				 je	 Sansw23
   3158	    18DB  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   3159	    18E0  E8 EB5B			 call	 drawMissOpponent
   3160	    18E3			 Sansw23:
   3161	    18E3  83 C3	18			 add	 bx , 24
   3162	    18E6  80 06	060Er 02		 add	 y , 2
   3163	    18EB  80 B8	04ACr 05		 cmp	 fieldOp[bx][si] , 5
   3164	    18F0  74 08				 je	 Sansw24
   3165	    18F2  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   3166	    18F7  E8 EB44			 call	 drawMissOpponent
   3167	    18FA			 Sansw24:
   3168	    18FA  83 EE	02			 sub	 si , 2
   3169	    18FD  80 2E	060Dr 02		 sub	 x , 2
   3170	    1902  80 B8	04ACr 05		 cmp	 fieldOp[bx][si] , 5
   3171	    1907  74 08				 je	 Shhh
   3172	    1909  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   3173	    190E  E8 EB2D			 call	 drawMissOpponent
   3174	    1911			 Shhh:
   3175	    1911  C7 06	0777r 0001		 mov	 myHod , 1
   3176	    1917  C7 06	077Fr 0000		 mov	 fyes ,	0
   3177	    191D  E9 0156			 jmp	 Snext40
   3178	    1920			 Sansw3:
   3179	    1920  3C 2C				 cmp	 al, 02ch
   3180	    1922  0F 85	FEF6			 jne	 Sansw	 ;хотя по идее это ошибка
   3181	    1926  E8 EAC2			 call	 drawKillOpponent
   3182	    1929  80 2E	0411r 01		 sub	 Nship , 1
   3183	    192E  33 C0				 xor	 ax , ax
   3184	    1930  A0 060Dr			 mov	 al , x
   3185	    1933  8B F0				 mov	 si , ax
   3186	    1935  33 C0				 xor	 ax , ax
   3187	    1937  33 DB				 xor	 bx , bx
   3188	    1939  33 D2				 xor	 dx , dx
   3189	    193B  8A 1E	060Er			 mov	 bl , y
   3190	    193F  B8 000C			 mov	 ax , 12
   3191	    1942  F7 E3				 mul	 bx
   3192	    1944  8B D8				 mov	 bx , ax
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 57
umi.ASM



   3193	    1946  C6 80	04ACr 01		 mov	 fieldOp[bx][si] , 1
   3194	    194B  83 EB	0C			 sub	 bx , 12
   3195	    194E  83 EE	01			 sub	 si , 1
   3196	    1951  80 2E	060Dr 01		 sub	 x , 1
   3197	    1956  80 2E	060Er 01		 sub	 y , 1
   3198	    195B  80 B8	04ACr 05		 cmp	 fieldOp[bx][si] , 5
   3199	    1960  74 08				 je	 Sansw31
   3200	    1962  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   3201	    1967  E8 EAD4			 call	 drawMissOpponent
   3202	    196A			 Sansw31:
   3203	    196A  83 C6	02			 add	 si , 2
   3204	    196D  80 06	060Dr 02		 add	 x , 2
   3205	    1972  80 B8	04ACr 05		 cmp	 fieldOp[bx][si] , 5
   3206	    1977  74 08				 je	 Sansw33
   3207	    1979  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   3208	    197E  E8 EABD			 call	 drawMissOpponent
   3209	    1981			 Sansw33:
   3210	    1981  83 C3	18			 add	 bx , 24
   3211	    1984  80 06	060Er 02		 add	 y , 2
   3212	    1989  80 B8	04ACr 05		 cmp	 fieldOp[bx][si] , 5
   3213	    198E  74 08				 je	 Sansw34
   3214	    1990  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   3215	    1995  E8 EAA6			 call	 drawMissOpponent
   3216	    1998			 Sansw34:
   3217	    1998  83 EE	02			 sub	 si , 2
   3218	    199B  80 2E	060Dr 02		 sub	 x , 2
   3219	    19A0  80 B8	04ACr 05		 cmp	 fieldOp[bx][si] , 5
   3220	    19A5  74 08				 je	 Sansw35
   3221	    19A7  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   3222	    19AC  E8 EA8F			 call	 drawMissOpponent
   3223	    19AF			 Sansw35:
   3224	    19AF  83 C6	01			 add	 si , 1
   3225	    19B2  80 06	060Dr 01		 add	 x , 1
   3226	    19B7  83 EB	0C			 sub	 bx , 12
   3227	    19BA  80 2E	060Er 01		 sub	 y , 1
   3228	    19BF  8B C6				 mov	 ax , si
   3229	    19C1  A2 0763r			 mov	 xxx , al
   3230	    19C4  A0 060Er			 mov	 al , y
   3231	    19C7  A2 0764r			 mov	 yyy , al
   3232	    19CA			 Sansw36:
   3233	    19CA  83 EB	0C			 sub	 bx , 12
   3234	    19CD  80 2E	060Er 01		 sub	 y , 1
   3235	    19D2  80 B8	04ACr 01		 cmp	 fieldOp[bx][si] , 1
   3236	    19D7  74 F1				 je	 Sansw36
   3237	    19D9  80 B8	04ACr 00		 cmp	 fieldOp[bx][si] , 0
   3238	    19DE  75 08				 jne	 Sansw37
   3239	    19E0  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   3240	    19E5  E8 EA56			 call	 drawMissOpponent
   3241	    19E8			 Sansw37:
   3242	    19E8  33 C0				 xor	 ax , ax
   3243	    19EA  A0 0764r			 mov	 al , yyy
   3244	    19ED  A2 060Er			 mov	 y , al
   3245	    19F0  BB 000C			 mov	 bx , 12
   3246	    19F3  F7 E3				 mul	 bx
   3247	    19F5  8B D8				 mov	 bx , ax
   3248	    19F7			 Sansw371:
   3249	    19F7  83 C3	0C			 add	 bx , 12
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 58
umi.ASM



   3250	    19FA  80 06	060Er 01		 add	 y , 1
   3251	    19FF  80 B8	04ACr 01		 cmp	 fieldOp[bx][si] , 1
   3252	    1A04  74 F1				 je	 Sansw371
   3253	    1A06  80 B8	04ACr 00		 cmp	 fieldOp[bx][si] , 0
   3254	    1A0B  75 08				 jne	 Sansw38
   3255	    1A0D  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   3256	    1A12  E8 EA29			 call	 drawMissOpponent
   3257	    1A15			 Sansw38:
   3258	    1A15  33 C0				 xor	 ax , ax
   3259	    1A17  A0 0764r			 mov	 al , yyy
   3260	    1A1A  A2 060Er			 mov	 y , al
   3261	    1A1D  BB 000C			 mov	 bx , 12
   3262	    1A20  F7 E3				 mul	 bx
   3263	    1A22  8B D8				 mov	 bx , ax
   3264	    1A24			 Sansw381:
   3265	    1A24  83 C6	01			 add	 si , 1
   3266	    1A27  80 06	060Dr 01		 add	 x , 1
   3267	    1A2C  80 B8	04ACr 01		 cmp	 fieldOp[bx][si] , 1
   3268	    1A31  74 F1				 je	 Sansw381
   3269	    1A33  80 B8	04ACr 00		 cmp	 fieldOp[bx][si] , 0
   3270	    1A38  75 08				 jne	 Sansw39
   3271	    1A3A  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   3272	    1A3F  E8 E9FC			 call	 drawMissOpponent
   3273	    1A42			 Sansw39:
   3274	    1A42  33 C0				 xor	 ax , ax
   3275	    1A44  A0 0763r			 mov	 al , xxx
   3276	    1A47  A2 060Dr			 mov	 x , al
   3277	    1A4A  8B F0				 mov	 si , ax
   3278	    1A4C			 Sansw391:
   3279	    1A4C  83 EE	01			 sub	 si , 1
   3280	    1A4F  80 2E	060Dr 01		 sub	 x , 1
   3281	    1A54  80 B8	04ACr 01		 cmp	 fieldOp[bx][si] , 1
   3282	    1A59  74 F1				 je	 Sansw391
   3283	    1A5B  80 B8	04ACr 00		 cmp	 fieldOp[bx][si] , 0
   3284	    1A60  75 08				 jne	 Shhhh
   3285	    1A62  C6 80	04ACr 02		 mov	 fieldOp[bx][si] , 2
   3286	    1A67  E8 E9D4			 call	 drawMissOpponent
   3287	    1A6A			 Shhhh:
   3288	    1A6A  C7 06	0777r 0001		 mov	 myHod , 1
   3289	    1A70  C7 06	077Fr 0000		 mov	 fyes ,	0
   3290
   3291	    1A76			 Snext40:
   3292	    1A76  80 3E	0410r 01		 cmp	 hidec,1
   3293	    1A7B  75 0A				 jne	 Snext40w
   3294	    1A7D  B8 0001			 mov	 ax,01h
   3295	    1A80  CD 33				 int	 33h
   3296	    1A82  C6 06	0410r 00		 mov	 hidec,0
   3297	    1A87			 Snext40w:
   3298	    1A87  83 3E	075Cr 01		 cmp	 okFin , 1
   3299	    1A8C  75 08				 jne	 next41
   3300	    1A8E  B0 A6				 mov	 al , 0A6h
   3301	    1A90  E8 E7D6			 call	 Out_Chr
   3302	    1A93  E9 02BF			 jmp	 SCondition6
   3303	    1A96			 next41:
   3304	    1A96  83 3E	075Ar 01		 cmp	 okGB ,	1
   3305	    1A9B  75 08				 jne	 next42
   3306	    1A9D  B0 A7				 mov	 al , 0A7h
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 59
umi.ASM



   3307	    1A9F  E8 E7C7			 call	 Out_Chr
   3308	    1AA2  E9 0304			 jmp	 SCondition7
   3309	    1AA5			 next42:
   3310	    1AA5  80 3E	0411r 00		 cmp	 Nship,	0
   3311	    1AAA  75 31				 jne	 next43
   3312	    1AAC  C7 06	0777r 0000		 mov	 myHod , 0
   3313	    1AB2  B0 A9				 mov	 al , 0a9h
   3314	    1AB4  E8 E7B2			 call	 Out_Chr
   3315	    1AB7			 next421:
   3316						 ;cmp	 Sflagerr , 1
   3317						 ;je	 SCondition8
   3318	    1AB7  E8 E7D6			 call	 Get_Chr
   3319	    1ABA  72 FB				 jc	 next421
   3320	    1ABC  3C AA				 cmp	 al,0aah
   3321	    1ABE  75 0D				 jne	 next421w
   3322	    1AC0  B0 01				 mov	 al,1
   3323	    1AC2  C7 06	0565r 0000		 mov SCountIn,0
   3324	    1AC8  E8 E79E			 call	 Out_Chr
   3325	    1ACB  EB EA				 jmp	 next421
   3326	    1ACD			 next421w:
   3327	    1ACD  C7 06	0565r 0000		 mov	 ScountIn , 0
   3328	    1AD3  3C 9A				 cmp	 al , 9ah
   3329	    1AD5  75 E0				 jne	 next421 ; хотя	по идее	ошибка
   3330	    1AD7  E8 EDED			 call	 wrWin
   3331	    1ADA  E9 F814			 jmp	 Condition9
   3332	    1ADD			 next43:
   3333	    1ADD  E8 E7B0			 call	 Get_Chr
   3334	    1AE0  0F 82	FD11			 jc	 SCondition41
   3335	    1AE4  3C AA				 cmp	 al, 0aah
   3336	    1AE6  75 0E				 jne	 nextS41
   3337	    1AE8  B0 01				 mov	 al , 01h
   3338	    1AEA  E8 E77C			 call	 Out_Chr
   3339	    1AED  C7 06	0565r 0000		 mov	 ScountIn , 0
   3340	    1AF3  E9 FCFF			 jmp	 SCondition41
   3341	    1AF6			 nextS41:
   3342	    1AF6  3C A6				 cmp	 al, 0a6h
   3343	    1AF8  75 0E				 jne	 nextS42
   3344	    1AFA  C7 06	0565r 0000		 mov	 ScountIn , 0
   3345	    1B00  B0 6A				 mov	 al , 06ah
   3346	    1B02  E8 E764			 call	 Out_Chr
   3347	    1B05  E9 024D			 jmp	 SCondition6
   3348	    1B08			 nextS42:
   3349	    1B08  3C A7				 cmp	 al, 0a7h
   3350	    1B0A  75 0E				 jne	 nextS43
   3351	    1B0C  C7 06	0565r 0000		 mov	 ScountIn , 0
   3352	    1B12  B0 7A				 mov	 al , 07ah
   3353	    1B14  E8 E752			 call	 Out_Chr
   3354	    1B17  E9 028F			 jmp	 SCondition7
   3355	    1B1A			 nextS43:
   3356	    1B1A  3C A8				 cmp	 al, 0a8h
   3357	    1B1C  75 14				 jne	 nextS44
   3358	    1B1E  C7 06	0565r 0000		 mov	 ScountIn , 0
   3359	    1B24  B0 8A				 mov	 al , 08ah
   3360	    1B26  E8 E740			 call	 Out_Chr
   3361	    1B29  C7 06	0775r 0001		 mov	 myErr , 1
   3362	    1B2F  E9 033D			 jmp	 SCondition8
   3363	    1B32			 nextS44:
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 60
umi.ASM



   3364	    1B32  3C C0				 cmp	 al, 0c0h
   3365	    1B34  0F 85	010D			 jne	 next49
   3366	    1B38  C7 06	0565r 0000		 mov	 ScountIn , 0
   3367	    1B3E			 next441:
   3368	    1B3E  E8 E74F			 call	 Get_Chr
   3369	    1B41  72 FB				 jc	 next441
   3370
   3371	    1B43  A2 0000r			 mov	 xx , al
   3372	    1B46  A2 060Dr			 mov	 x , al
   3373	    1B49  C7 06	0565r 0000		 mov	 ScountIn , 0
   3374	    1B4F			 next442:
   3375	    1B4F  E8 E73E			 call	 Get_Chr
   3376	    1B52  72 FB				 jc	 next442
   3377
   3378	    1B54  A2 0001r			 mov	 yy , al
   3379	    1B57  A2 060Er			 mov	 y , al
   3380	    1B5A  C7 06	0565r 0000		 mov	 ScountIn , 0
   3381	    1B60  33 C0				 xor	 ax , ax
   3382	    1B62  33 DB				 xor	 bx , bx
   3383	    1B64  B8 000C			 mov	 ax , 12
   3384	    1B67  8A 1E	0001r			 mov	 bl , yy
   3385	    1B6B  F7 E3				 mul	 bx
   3386	    1B6D  8B D8				 mov	 bx , ax
   3387	    1B6F  33 C0				 xor	 ax , ax
   3388	    1B71  A0 0000r			 mov	 al , xx
   3389	    1B74  8B F0				 mov	 si , ax
   3390	    1B76  80 B8	041Cr 00		 cmp	 field[bx][si] , 0
   3391	    1B7B  75 19				 jne	 next443
   3392	    1B7D  C7 06	0777r 0001		 mov	 myHod , 1
   3393	    1B83  E8 EEC3			 call	 wrHod
   3394	    1B86  C6 80	041Cr 03		 mov	 field[bx][si] , 3
   3395	    1B8B  E8 E900			 call	 drawMissMy
   3396	    1B8E  B0 0C				 mov	 al , 00ch
   3397	    1B90  E8 E6D6			 call	 Out_Chr
   3398	    1B93  E9 FC5F			 jmp	 SCondition41
   3399	    1B96			 next443:
   3400	    1B96  80 B8	041Cr 02		 cmp	 field[bx][si] , 2
   3401	    1B9B  75 11				 jne	 next444
   3402	    1B9D  C7 06	0777r 0001		 mov	 myHod , 1
   3403	    1BA3  E8 EEA3			 call	 wrHod
   3404	    1BA6  B0 3C				 mov	 al , 03ch
   3405	    1BA8  E8 E6BE			 call	 Out_Chr
   3406	    1BAB  E9 FC47			 jmp	 SCondition41
   3407	    1BAE			 next444:
   3408	    1BAE  80 B8	041Cr 03		 cmp	 field[bx][si] , 3
   3409	    1BB3  75 11				 jne	 next445
   3410	    1BB5  B0 3C				 mov	 al , 03ch
   3411	    1BB7  E8 E6AF			 call	 Out_Chr
   3412	    1BBA  C7 06	0777r 0001		 mov	 myHod , 1
   3413	    1BC0  E8 EE86			 call	 wrHod
   3414	    1BC3  E9 FC2F			 jmp	 SCondition41
   3415	    1BC6			 next445:
   3416	    1BC6  C6 80	041Cr 02		 mov	 field[bx][si] , 2
   3417	    1BCB  53				 push	 bx
   3418	    1BCC  B3 3C				 mov	 bl , 00111100b
   3419	    1BCE  E8 E7D9			 call	 drawKillMy
   3420	    1BD1  5B				 pop	 bx
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 61
umi.ASM



   3421	    1BD2			 next4451:
   3422	    1BD2  83 EB	0C			 sub	 bx , 12
   3423	    1BD5  80 B8	041Cr 01		 cmp	 field[bx][si] , 1
   3424	    1BDA  74 61				 je	 next48
   3425	    1BDC  80 B8	041Cr 02		 cmp	 field[bx][si] , 2
   3426	    1BE1  74 EF				 je	 next4451
   3427	    1BE3			 next446:
   3428	    1BE3  33 C0				 xor	 ax , ax
   3429	    1BE5  33 D2				 xor	 dx , dx
   3430	    1BE7  A0 0001r			 mov	 al , yy
   3431	    1BEA  BB 000C			 mov	 bx , 12
   3432	    1BED  F7 E3				 mul	 bx
   3433	    1BEF  8B D8				 mov	 bx , ax
   3434	    1BF1			 next4461:
   3435	    1BF1  83 C3	0C			 add	 bx , 12
   3436	    1BF4  80 B8	041Cr 01		 cmp	 field[bx][si] , 1
   3437	    1BF9  74 42				 je	 next48
   3438	    1BFB  80 B8	041Cr 02		 cmp	 field[bx][si] , 2
   3439	    1C00  74 EF				 je	 next4461
   3440	    1C02			 next447:
   3441	    1C02  33 C0				 xor	 ax , ax
   3442	    1C04  33 D2				 xor	 dx , dx
   3443	    1C06  A0 0001r			 mov	 al , yy
   3444	    1C09  BB 000C			 mov	 bx , 12
   3445	    1C0C  F7 E3				 mul	 bx
   3446	    1C0E  8B D8				 mov	 bx , ax
   3447	    1C10			 next4471:
   3448	    1C10  4E				 dec	 si
   3449	    1C11  80 B8	041Cr 01		 cmp	 field[bx][si] , 1
   3450	    1C16  74 25				 je	 next48
   3451	    1C18  80 B8	041Cr 02		 cmp	 field[bx][si] , 2
   3452	    1C1D  74 F1				 je	 next4471
   3453	    1C1F			 next448:
   3454	    1C1F  33 D2				 xor	 dx , dx
   3455	    1C21  A0 0000r			 mov	 al , xx
   3456	    1C24  8B F0				 mov	 si , ax
   3457	    1C26			 next4481:
   3458	    1C26  46				 inc	 si
   3459	    1C27  80 B8	041Cr 01		 cmp	 field[bx][si] , 1
   3460	    1C2C  74 0F				 je	 next48
   3461	    1C2E  80 B8	041Cr 02		 cmp	 field[bx][si] , 2
   3462	    1C33  74 F1				 je	 next4481
   3463
   3464	    1C35  B0 2C				 mov	 al , 2ch
   3465	    1C37  E8 E62F			 call	 Out_Chr
   3466	    1C3A  E9 FBB8			 jmp	 SCondition41
   3467
   3468	    1C3D			 next48:
   3469	    1C3D  B0 1C				 mov	 al , 1ch
   3470	    1C3F  E8 E627			 call	 Out_Chr
   3471	    1C42  E9 FBB0			 jmp	 SCondition41
   3472
   3473	    1C45			 next49:
   3474	    1C45  3C A9				 cmp	 al, 0a9h
   3475	    1C47  75 0B				 jne	 next4a
   3476	    1C49  B0 9A				 mov	 al , 09ah
   3477	    1C4B  E8 E61B			 call	 Out_Chr
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 62
umi.ASM



   3478	    1C4E  E8 EC93			 call	 wrWon
   3479	    1C51  E9 F69D			 jmp	 Condition9
   3480	    1C54			 next4a:
   3481	    1C54  3C B1				 cmp	 al, 0b1h
   3482	    1C56  75 48				 jne	 next4b
   3483	    1C58  C7 06	0565r 0000		 mov	 ScountIn , 0
   3484	    1C5E			 next4a1:
   3485	    1C5E  E8 E62F			 call	 Get_Chr
   3486	    1C61  72 FB				 jc	 next4a1
   3487
   3488	    1C63  C7 06	0565r 0000		 mov	 ScountIn , 0
   3489	    1C69  A2 0762r			 mov	 pp , al
   3490	    1C6C  BE 0000			 mov	 si , 0
   3491	    1C6F			 next4a2:
   3492	    1C6F  E8 E61E			 call	 Get_Chr
   3493	    1C72  72 FB				 jc	 next4a2
   3494
   3495	    1C74  C7 06	0565r 0000		 mov	 ScountIn , 0
   3496	    1C7A  88 84	0557r			 mov	 opName[si] , al
   3497	    1C7E  46				 inc	 si
   3498	    1C7F  83 FE	0A			 cmp	 si , 10
   3499	    1C82  7C 0A				 jl	 next4a21
   3500	    1C84  E8 EC7A			 call	 wrNic
   3501	    1C87  B0 1B				 mov	 al , 01bh
   3502	    1C89  E8 E5DD			 call	 Out_Chr
   3503	    1C8C  EB 12				 jmp	 next4b
   3504	    1C8E			 next4a21:
   3505	    1C8E  33 D2				 xor	 dx , dx
   3506	    1C90  8B D6				 mov	 dx , si
   3507	    1C92  3A 16	0762r			 cmp	 dl , pp
   3508	    1C96  7C D7				 jl	 next4a2
   3509	    1C98  E8 EC66			 call	 wrNic
   3510	    1C9B  B0 1B				 mov	 al , 01bh
   3511	    1C9D  E8 E5C9			 call	 Out_Chr
   3512	    1CA0			 next4b:
   3513	    1CA0  3C 1B				 cmp	 al, 1bh
   3514	    1CA2  75 09				 jne	 next4c
   3515	    1CA4  C7 06	0565r 0000		 mov	 ScountIn , 0
   3516	    1CAA  E9 FB48			 jmp	 SCondition41
   3517	    1CAD			 next4c:
   3518	    1CAD  0F 82	FB44			 jc	 SCondition41
   3519	    1CB1  E9 FB41			 jmp	 SCondition41
   3520
   3521	    1CB4			 SCondition5:
   3522
   3523	    1CB4  B8 A000			 mov	 ax , 0a000h
   3524	    1CB7  8E C0				 mov	 es , ax
   3525	    1CB9  33 C0				 xor	 ax , ax
   3526	    1CBB  B0 00				 mov	 al , 0h
   3527	    1CBD  B9 7000			 mov	 cx , 07000h
   3528	    1CC0  33 FF				 xor	 di , di
   3529	    1CC2  F3> AA			 rep	 stosb
   3530
   3531	    1CC4  C7 06	075Er 0000		 mov	 okRS ,	0
   3532	    1CCA  C7 06	0760r 0000		 mov	 okRD ,	0
   3533	    1CD0  C7 06	075Cr 0000		 mov	 OkFin , 0
   3534	    1CD6  C7 06	075Ar 0000		 mov	 OkGB ,	0
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 63
umi.ASM



   3535	    1CDC  C7 06	0765r 0000		 mov	 fh4 , 0
   3536	    1CE2  C7 06	0767r 0000		 mov	 fv4 , 0
   3537	    1CE8  C7 06	0769r 0000		 mov	 fh3 , 0
   3538	    1CEE  C7 06	076Br 0000		 mov	 fv3 , 0
   3539	    1CF4  C7 06	076Dr 0000		 mov	 fh2 , 0
   3540	    1CFA  C7 06	076Fr 0000		 mov	 fv2 , 0
   3541	    1D00  C7 06	0771r 0000		 mov	 f1 , 0
   3542
   3543	    1D06  BB 000C			 mov	 bx , 12
   3544	    1D09  BE 0001			 mov	 si , 1
   3545	    1D0C  B9 0009			 mov	 cx , 9
   3546	    1D0F			 Scycle1:
   3547	    1D0F  C6 80	041Cr 00		 mov	 field[bx][si] , 0
   3548	    1D14  C6 80	04ACr 00		 mov	 fieldOp[bx][si] , 0
   3549	    1D19  46				 inc	 si
   3550	    1D1A  83 FE	0B			 cmp	 si , 11
   3551	    1D1D  7C F0				 jl	 Scycle1
   3552	    1D1F  83 EE	0A			 sub	 si , 10
   3553	    1D22  83 C3	0C			 add	 bx , 12
   3554	    1D25  E2 E8				 loop	 Scycle1
   3555
   3556	    1D27  C7 06	0781r 0000		 mov	 Sflagerr , 0
   3557	    1D2D  C7 06	0565r 0000		 mov	 ScountIn , 0
   3558	    1D33  C6 06	0410r 00		 mov	 hidec,0
   3559	    1D38  C6 06	078Ar 00		 mov wstate4,0
   3560	    1D3D  C6 06	0789r 00		 mov	 state,0
   3561	    1D42  C6 06	0786r 01		 mov cansenda,1
   3562	    1D47  C7 06	0563r 0000		 mov	 McountIn , 0
   3563	    1D4D  C6 06	0785r 00		 mov slaveR,0
   3564	    1D52  E9 F830			 jmp	 _Slave0
   3565
   3566	    1D55			 SCondition6:
   3567	    1D55  B8 000C			 mov	 ax , 000Ch
   3568	    1D58  B9 0000			 mov	 cx , 0000h ; удалить обработчик событий мыши
   3569	    1D5B  CD 33				 int	 33h
   3570
   3571	    1D5D  B2 00				 mov	 dl , 0
   3572	    1D5F  B6 00				 mov	 dh , 0
   3573	    1D61  B9 0050			 mov	 cx , 80
   3574	    1D64  E8 EB23			 call	 wrClean
   3575
   3576	    1D67  83 3E	075Cr 01		 cmp	 okFin , 1
   3577	    1D6C  75 05				 jne	 SnoI
   3578	    1D6E  BD 0740r			 lea	 bp , msgShur1
   3579	    1D71  EB 03				 jmp	 SII
   3580	    1D73			 SnoI:
   3581	    1D73  BD 0726r			 lea	 bp , msgShur
   3582	    1D76			 SII:
   3583	    1D76  B4 13				 mov	 ah, 13h
   3584	    1D78  B0 01				 mov	 al , 01h
   3585	    1D7A  B7 00				 mov	 bh , 0
   3586	    1D7C  B3 3B				 mov	 bl , 00111011b
   3587	    1D7E  B9 001A			 mov	 cx , 26
   3588	    1D81  B2 00				 mov	 dl , 0
   3589	    1D83  B6 00				 mov	 dh , 0
   3590	    1D85  CD 10				 int	 10h
   3591	    1D87  C6 06	0410r 00			 mov	 hidec,0
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 64
umi.ASM



   3592	    1D8C  C6 06	078Ar 00		 mov wstate4,0
   3593	    1D91  C6 06	0789r 00		 mov	 state,0
   3594	    1D96  C6 06	0786r 01		 mov cansenda,1
   3595	    1D9B  C7 06	0563r 0000		 mov	 McountIn , 0
   3596	    1DA1  C6 06	0785r 00		 mov slaveR,0
   3597	    1DA6  E9 F548			 jmp	 Condition9
   3598
   3599
   3600	    1DA9			 SCondition7:
   3601	    1DA9  B8 000C			 mov	 ax , 000Ch
   3602	    1DAC  B9 0000			 mov	 cx , 0000h ; удалить обработчик событий мыши
   3603	    1DAF  CD 33				 int	 33h
   3604
   3605	    1DB1  83 3E	075Ar 01		 cmp	 okGB ,	1
   3606	    1DB6  0F 84	018B			 je	 fin
   3607
   3608	    1DBA  B8 A000			 mov	 ax , 0a000h
   3609	    1DBD  8E C0				 mov	 es , ax
   3610	    1DBF  33 C0				 xor	 ax , ax
   3611	    1DC1  B0 00				 mov	 al , 0h
   3612	    1DC3  B9 7000			 mov	 cx , 07000h
   3613	    1DC6  33 FF				 xor	 di , di
   3614	    1DC8  F3> AA			 rep	 stosb
   3615
   3616	    1DCA  B4 13				 mov	 ah, 13h
   3617	    1DCC  B0 01				 mov	 al , 01h
   3618	    1DCE  B7 00				 mov	 bh , 0
   3619	    1DD0  B3 3B				 mov	 bl , 00111011b
   3620	    1DD2  B9 001A			 mov	 cx , 26
   3621	    1DD5  B2 00				 mov	 dl , 0
   3622	    1DD7  B6 01				 mov	 dh , 1
   3623	    1DD9  BD 06A4r			 lea	 bp , mGB
   3624	    1DDC  CD 10				 int	 10h
   3625
   3626
   3627
   3628	    1DDE  C7 06	075Er 0000		 mov	 okRS ,	0
   3629	    1DE4  C7 06	0760r 0000		 mov	 okRD ,	0
   3630	    1DEA  C7 06	075Cr 0000		 mov	 OkFin , 0
   3631	    1DF0  C7 06	075Ar 0000		 mov	 OkGB ,	0
   3632	    1DF6  C7 06	0765r 0000		 mov	 fh4 , 0
   3633	    1DFC  C7 06	0767r 0000		 mov	 fv4 , 0
   3634	    1E02  C7 06	0769r 0000		 mov	 fh3 , 0
   3635	    1E08  C7 06	076Br 0000		 mov	 fv3 , 0
   3636	    1E0E  C7 06	076Dr 0000		 mov	 fh2 , 0
   3637	    1E14  C7 06	076Fr 0000		 mov	 fv2 , 0
   3638	    1E1A  C7 06	0771r 0000		 mov	 f1 , 0
   3639
   3640	    1E20  BB 000C			 mov	 bx , 12
   3641	    1E23  BE 0001			 mov	 si , 1
   3642	    1E26  B9 0009			 mov	 cx , 9
   3643	    1E29			 Scycle2:
   3644	    1E29  C6 80	041Cr 00		 mov	 field[bx][si] , 0
   3645	    1E2E  C6 80	04ACr 00		 mov	 fieldOp[bx][si] , 0
   3646	    1E33  46				 inc	 si
   3647	    1E34  83 FE	0B			 cmp	 si , 11
   3648	    1E37  7C F0				 jl	 Scycle2
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 65
umi.ASM



   3649	    1E39  83 EE	0A			 sub	 si , 10
   3650	    1E3C  83 C3	0C			 add	 bx , 12
   3651	    1E3F  E2 E8				 loop	 Scycle2
   3652
   3653	    1E41  C7 06	0781r 0000		 mov	 Sflagerr , 0
   3654	    1E47  C7 06	0565r 0000		 mov	 ScountIn , 0
   3655	    1E4D  C6 06	0410r 00		 mov	 hidec,0
   3656	    1E52  C6 06	078Ar 00		 mov wstate4,0
   3657	    1E57  C6 06	0789r 00		 mov	 state,0
   3658	    1E5C  C6 06	0786r 01		 mov cansenda,1
   3659	    1E61  C7 06	0563r 0000		 mov	 McountIn , 0
   3660	    1E67  C6 06	0785r 00		 mov slaveR,0
   3661	    1E6C  E9 F716			 jmp	 _Slave0
   3662
   3663	    1E6F			 SCondition8:
   3664	    1E6F  B8 000C			 mov	 ax , 000Ch
   3665	    1E72  B9 0000			 mov	 cx , 0000h ; удалить обработчик событий мыши
   3666	    1E75  CD 33				 int	 33h
   3667
   3668	    1E77  83 3E	0775r 01		 cmp	 myErr , 1
   3669	    1E7C  74 05				 je	 Smr
   3670	    1E7E  BD 070Cr			 lea	 bp , opErrProt
   3671	    1E81  EB 03				 jmp	 Snmr
   3672	    1E83			 Smr:
   3673	    1E83  BD 06F2r			 lea	 bp , myErrProt
   3674	    1E86			 Snmr:
   3675	    1E86  B4 13				 mov	 ah, 13h
   3676	    1E88  B0 01				 mov	 al , 01h
   3677	    1E8A  B7 00				 mov	 bh , 0
   3678	    1E8C  B3 3B				 mov	 bl , 00111011b
   3679	    1E8E  B9 001A			 mov	 cx , 26
   3680	    1E91  B2 00				 mov	 dl , 0
   3681	    1E93  B6 00				 mov	 dh , 0
   3682	    1E95  CD 10				 int	 10h
   3683	    1E97			 Sohoho:
   3684	    1E97  B8 0003			 mov	 ax , 03h
   3685	    1E9A  CD 33				 int	 33h
   3686	    1E9C  80 E3	02			 and	 bl , 0010b
   3687	    1E9F  80 FB	02			 cmp	 bl , 0010b
   3688	    1EA2  75 F3				 jne	 Sohoho
   3689
   3690	    1EA4  B8 A000			 mov	 ax , 0a000h
   3691	    1EA7  8E C0				 mov	 es , ax
   3692	    1EA9  33 C0				 xor	 ax , ax
   3693	    1EAB  B0 00				 mov	 al , 0h
   3694	    1EAD  B9 7000			 mov	 cx , 07000h
   3695	    1EB0  33 FF				 xor	 di , di
   3696	    1EB2  F3> AA			 rep	 stosb
   3697
   3698	    1EB4  C7 06	075Er 0000		 mov	 okRS ,	0
   3699	    1EBA  C7 06	0760r 0000		 mov	 okRD ,	0
   3700	    1EC0  C7 06	075Cr 0000		 mov	 OkFin , 0
   3701	    1EC6  C7 06	075Ar 0000		 mov	 OkGB ,	0
   3702	    1ECC  C7 06	0765r 0000		 mov	 fh4 , 0
   3703	    1ED2  C7 06	0767r 0000		 mov	 fv4 , 0
   3704	    1ED8  C7 06	0769r 0000		 mov	 fh3 , 0
   3705	    1EDE  C7 06	076Br 0000		 mov	 fv3 , 0
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 66
umi.ASM



   3706	    1EE4  C7 06	076Dr 0000		 mov	 fh2 , 0
   3707	    1EEA  C7 06	076Fr 0000		 mov	 fv2 , 0
   3708	    1EF0  C7 06	0771r 0000		 mov	 f1 , 0
   3709
   3710	    1EF6  BB 000C			 mov	 bx , 12
   3711	    1EF9  BE 0001			 mov	 si , 1
   3712	    1EFC  B9 0009			 mov	 cx , 9
   3713	    1EFF			 Scycle3:
   3714	    1EFF  C6 80	041Cr 00		 mov	 field[bx][si] , 0
   3715	    1F04  C6 80	04ACr 00		 mov	 fieldOp[bx][si] , 0
   3716	    1F09  46				 inc	 si
   3717	    1F0A  83 FE	0B			 cmp	 si , 11
   3718	    1F0D  7C F0				 jl	 Scycle3
   3719	    1F0F  83 EE	0A			 sub	 si , 10
   3720	    1F12  83 C3	0C			 add	 bx , 12
   3721	    1F15  E2 E8				 loop	 Scycle3
   3722
   3723	    1F17  C7 06	0781r 0000		 mov	 Sflagerr , 0
   3724	    1F1D  C7 06	0565r 0000		 mov	 ScountIn , 0
   3725	    1F23  C6 06	0410r 00		 mov	 hidec,0
   3726	    1F28  C6 06	078Ar 00		 mov wstate4,0
   3727	    1F2D  C6 06	0789r 00		 mov	 state,0
   3728	    1F32  C6 06	0786r 01		 mov cansenda,1
   3729	    1F37  C7 06	0563r 0000		 mov	 McountIn , 0
   3730	    1F3D  C6 06	0785r 00		 mov slaveR,0
   3731	    1F42  E9 F640			 jmp	 _Slave0
   3732
   3733
   3734					 ;###############++Final and Err States++############;
   3735	    1F45			 fin:
   3736	    1F45  E8 E263			 call	 Ser_Rst
   3737
   3738	    1F48  B8 0003			 mov	 ax, 0003h
   3739	    1F4B  CD 10				 int	 10h
   3740
   3741	    1F4D  B8 000C			 mov	 ax , 000Ch
   3742	    1F50  B9 0000			 mov	 cx , 0000h ; удалить обработчик событий мыши
   3743	    1F53  CD 33				 int	 33h
   3744
   3745	    1F55  E8 061C			 call	 intun
   3746	    1F58  2E: 8E 06 002C		 mov	 es , word ptr cs:[2Ch]	;Получим сегмент окружения DOS.
   3747	    1F5D  B4 49				 mov	 ah , 49h		;Функция освобождения памяти.
   3748	    1F5F  CD 21				 int	 21h
   3749					 ;	 int 20h
   3750					 ;	 mov	 sp, 0FFFEh
   3751
   3752	    1F61			 @@d:
   3753
   3754	    1F61  C3			 ret
   3755
   3756	    1F62			 _ms:
   3757	    1F62  BE 0082			 mov	 si,0082h
   3758	    1F65			 _2:
   3759	    1F65  AC				 lodsb
   3760	    1F66  46				 inc	 si
   3761	    1F67  3C 20				 cmp	 al,20h
   3762	    1F69  74 FA				 je	 _2
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 67
umi.ASM



   3763	    1F6B  3C 0D				 cmp	 al,0dh
   3764	    1F6D  74 08				 je	 _d1
   3765	    1F6F  3C 6D				 cmp	 al,6dh
   3766	    1F71  75 04				 jne	 _d1
   3767	    1F73  FF 06	0561r			 inc	 master
   3768	    1F77			 _d1:
   3769	    1F77  C3			 ret
   3770	    1F78			 _intset:
   3771	    1F78  33 C0				 xor	 ax,ax
   3772	    1F7A  50				 push	 ax
   3773	    1F7B  1F				 pop	 ds
   3774	    1F7C  BE 0020			 mov	 si,8h*4
   3775	    1F7F  BF 0B00r			 mov	 di,offset Int_08h_old
   3776	    1F82  A5				 movsw
   3777	    1F83  A5				 movsw
   3778	    1F84  1E				 push	 ds
   3779	    1F85  07				 pop	 es
   3780	    1F86  0E				 push	 cs
   3781	    1F87  1F				 pop	 ds
   3782
   3783	    1F88  B8 0AA8r			 mov	 ax,offset Int_08h
   3784	    1F8B  BF 0020			 mov	 di,8h*4
   3785	    1F8E  FA				 cli
   3786	    1F8F  AB				 stosw
   3787	    1F90  0E				 push	 cs
   3788	    1F91  58				 pop	 ax
   3789	    1F92  AB				 stosw
   3790	    1F93  FB				 sti
   3791	    1F94  C3			 ret
   3792	    1F95			 _vset:
   3793	    1F95  B0 10				 mov	 al,10h
   3794	    1F97  32 E4				 xor	 ah,ah
   3795	    1F99  CD 10				 int	 10h
   3796	    1F9B  8A C4				 mov	 al,ah
   3797	    1F9D  B4 05				 mov	 ah,05h
   3798	    1F9F  CD 10				 int	 10h
   3799	    1FA1  C3			 ret
   3800
   3801	    1FA2			 _inp:
   3802	    1FA2  32 E4				 xor	 ah,ah
   3803	    1FA4  B0 10				 mov	 al,10h
   3804	    1FA6  CD 10				 int	 10h
   3805
   3806	    1FA8  B4 13				 mov	 ah,13h
   3807	    1FAA  B0 01				 mov	 al,01h
   3808	    1FAC  32 FF				 xor	 bh,bh
   3809	    1FAE  B3 24				 mov	 bl,24h
   3810					 ;	 mov	 cx,14
   3811					 ;	 mov	 dx,0707h
   3812					 ;	 mov	 bp,offset namae
   3813					 ;	 int	 10h
   3814	    1FB0  BD 078Br			 mov	 bp,offset sheepField
   3815	    1FB3  B9 0014			 mov	 cx,20
   3816	    1FB6  BA 0A11			 mov	 dx,0A11h
   3817	    1FB9  CD 10				 int	 10h
   3818	    1FBB  BD 079Fr			 mov	 bp,offset sheep4
   3819	    1FBE  B6 0D				 mov	 dh,0dh
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 68
umi.ASM



   3820	    1FC0  CD 10				 int	 10h
   3821	    1FC2  BD 07B3r			 mov	 bp,offset sheep3
   3822	    1FC5  B6 10				 mov	 dh,10h
   3823	    1FC7  CD 10				 int	 10h
   3824	    1FC9  BD 07C7r			 mov	 bp,offset sheep2
   3825	    1FCC  B6 13				 mov	 dh,13h
   3826	    1FCE  CD 10				 int	 10h
   3827	    1FD0  BD 07DBr			 mov	 bp,offset sheep1
   3828	    1FD3  B6 16				 mov	 dh,16h
   3829	    1FD5  CD 10				 int	 10h
   3830	    1FD7  B4 02				 mov	 ah,02h
   3831	    1FD9  BA 0922			 mov	 dx,0922h
   3832	    1FDC  CD 10				 int	 10h
   3833	    1FDE  B9 0001			 mov	 cx,1
   3834	    1FE1  B4 0A				 mov	 ah,0Ah
   3835	    1FE3  B0 1E				 mov	 al,1Eh
   3836	    1FE5  CD 10				 int	 10h
   3837	    1FE7  B4 02				 mov	 ah,02h
   3838	    1FE9  B6 0C				 mov	 dh,0Ch
   3839	    1FEB  CD 10				 int	 10h
   3840	    1FED  B4 0A				 mov	 ah,0Ah
   3841	    1FEF  CD 10				 int	 10h
   3842	    1FF1  B4 02				 mov	 ah,02h
   3843	    1FF3  B6 0F				 mov	 dh,0Fh
   3844	    1FF5  CD 10				 int	 10h
   3845	    1FF7  B4 0A				 mov	 ah,0Ah
   3846	    1FF9  CD 10				 int	 10h
   3847	    1FFB  B4 02				 mov	 ah,02h
   3848	    1FFD  B6 12				 mov	 dh,12h
   3849	    1FFF  CD 10				 int	 10h
   3850	    2001  B4 0A				 mov	 ah,0Ah
   3851	    2003  CD 10				 int	 10h
   3852	    2005  B4 02				 mov	 ah,02h
   3853	    2007  B6 15				 mov	 dh,15h
   3854	    2009  CD 10				 int	 10h
   3855	    200B  B4 0A				 mov	 ah,0Ah
   3856	    200D  CD 10				 int	 10h
   3857
   3858	    200F  B4 02				 mov	 ah,02h
   3859	    2011  B6 0B				 mov	 dh,0Bh
   3860	    2013  CD 10				 int	 10h
   3861	    2015  B0 1F				 mov	 al,1Fh
   3862	    2017  B4 0A				 mov	 ah,0Ah
   3863	    2019  CD 10				 int	 10h
   3864	    201B  B4 02				 mov	 ah,02h
   3865	    201D  B6 0E				 mov	 dh,0Eh
   3866	    201F  CD 10				 int	 10h
   3867	    2021  B4 0A				 mov	 ah,0Ah
   3868	    2023  CD 10				 int	 10h
   3869	    2025  B4 02				 mov	 ah,02h
   3870	    2027  B6 11				 mov	 dh,11h
   3871	    2029  CD 10				 int	 10h
   3872	    202B  B4 0A				 mov	 ah,0Ah
   3873	    202D  CD 10				 int	 10h
   3874	    202F  B4 02				 mov	 ah,02h
   3875	    2031  B6 14				 mov	 dh,14h
   3876	    2033  CD 10				 int	 10h
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 69
umi.ASM



   3877	    2035  B4 0A				 mov	 ah,0ah
   3878	    2037  CD 10				 int	 10h
   3879	    2039  B4 02				 mov	 ah,02h
   3880	    203B  B6 17				 mov	 dh,17h
   3881	    203D  CD 10				 int	 10h
   3882	    203F  B4 0A				 mov	 ah,0Ah
   3883	    2041  CD 10				 int	 10h
   3884
   3885	    2043  C3			 ret
   3886					 ;;****	 obr wrDAta data parametrs****;;
   3887	    2044			 _obr1:
   3888	    2044  1E				 push ds
   3889	    2045  0E				 push cs
   3890	    2046  1F				 pop ds
   3891	    2047  50				 push	 ax
   3892	    2048  53				 push	 bx
   3893	    2049  51				 push	 cx
   3894	    204A  52				 push	 dx
   3895
   3896	    204B  A9 0002			 test	 ax, 00000010b
   3897	    204E  75 03				 jnz	 _ndo
   3898	    2050  E9 00A2			 jmp	 _endo
   3899	    2053			 _ndo:
   3900	    2053  B8 0002			 mov	 ax, 2
   3901	    2056  CD 33				 int	 33h
   3902
   3903	    2058  C1 E9	03			 shr	 cx, 3
   3904	    205B  8B C2				 mov	 ax,dx
   3905	    205D  B2 0E				 mov	 dl,14
   3906	    205F  F6 F2				 div	 dl
   3907	    2061  8A D0				 mov	 dl,al
   3908	    2063  B6 00				 mov	 dh,0
   3909
   3910	    2065  83 F9	22			 cmp	 cx,22h
   3911	    2068  74 03				 je	 _nd
   3912	    206A  E9 0088			 jmp	 _endo
   3913	    206D			 _nd:
   3914	    206D  83 FA	09			 cmp	 dx,09h
   3915	    2070  73 03				 jae	 _nd1
   3916	    2072  E9 0080			 jmp	 _endo
   3917	    2075			 _nd1:
   3918	    2075  83 FA	17			 cmp	 dx,17h
   3919	    2078  77 7B				 ja	 _endo
   3920	    207A  B3 03				 mov	 bl,3
   3921	    207C  8B C2				 mov	 ax,dx
   3922	    207E  F6 F3				 div	 bl
   3923	    2080  80 FC	01			 cmp	 ah,1
   3924	    2083  74 70				 je	 _endo
   3925	    2085  2A C3				 sub	 al,bl
   3926	    2087  8A D8				 mov	 bl,al
   3927	    2089  32 FF				 xor	 bh,bh
   3928	    208B  8A 8F	0806r			 mov	 cl,masp[bx]
   3929	    208F  80 FC	00			 cmp	 ah,0
   3930	    2092  75 1F				 jne	 _sub
   3931
   3932	    2094  3A 8F	080Br			 cmp	 cl,maxp[bx]
   3933	    2098  74 5B				 je	 _endo
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 70
umi.ASM



   3934
   3935	    209A  FE C1				 inc	 cl
   3936	    209C  88 8F	0806r			 mov	 masp[bx],cl
   3937	    20A0  5A				 pop	 dx
   3938	    20A1  59				 pop	 cx
   3939	    20A2  51				 push	 cx
   3940	    20A3  52				 push	 dx
   3941	    20A4  53				 push	 bx
   3942
   3943	    20A5  8B C2				 mov	 ax,dx
   3944	    20A7  B2 0E				 mov	 dl,14
   3945	    20A9  F6 F2				 div	 dl
   3946	    20AB  8A D0				 mov	 dl,al
   3947	    20AD  B6 00				 mov	 dh,0
   3948	    20AF  FE C2				 inc	 dl
   3949	    20B1  EB 1D				 jmp	 _endo1
   3950	    20B3			 _sub:
   3951	    20B3  3A 8F	0810r			 cmp	 cl,minp[bx]
   3952	    20B7  74 3C				 je	 _endo
   3953
   3954	    20B9  FE C9				 dec	 cl
   3955	    20BB  88 8F	0806r			 mov	 masp[bx],cl
   3956	    20BF  5A				 pop	 dx
   3957	    20C0  59				 pop	 cx
   3958	    20C1  51				 push	 cx
   3959	    20C2  52				 push	 dx
   3960	    20C3  53				 push	 bx
   3961
   3962	    20C4  8B C2				 mov	 ax,dx
   3963	    20C6  B2 0E				 mov	 dl,14
   3964	    20C8  F6 F2				 div	 dl
   3965	    20CA  8A D0				 mov	 dl,al
   3966	    20CC  B6 00				 mov	 dh,0
   3967	    20CE  FE CA				 dec	 dl
   3968	    20D0			 _endo1:
   3969	    20D0  C1 E9	03			 shr	 cx,3
   3970	    20D3  B4 02				 mov	 ah,02h
   3971	    20D5  8A F2				 mov	 dh,dl
   3972	    20D7  8A D1				 mov	 dl,cl
   3973	    20D9  32 FF				 xor	 bh,bh
   3974	    20DB  CD 10				 int	 10h
   3975
   3976	    20DD  5B				 pop	 bx
   3977	    20DE  8A 87	0806r			 mov	 al,masp[bx]
   3978	    20E2  04 30				 add	 al,30h
   3979	    20E4  3C 3A				 cmp	 al,3ah
   3980	    20E6  75 02				 jne	 _na
   3981	    20E8  B0 61				 mov	 al,'a'
   3982	    20EA			 _na:
   3983	    20EA  B3 04				 mov	 bl,4
   3984	    20EC  32 FF				 xor	 bh,bh
   3985	    20EE  B4 0A				 mov	 ah,0Ah
   3986	    20F0  B9 0001			 mov	 cx,1
   3987	    20F3  CD 10				 int	 10h
   3988	    20F5			 _endo:
   3989
   3990	    20F5  B8 0001			 mov	 ax, 1
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 71
umi.ASM



   3991	    20F8  CD 33				 int	 33h
   3992	    20FA  1F				 pop	 ds
   3993	    20FB  5A				 pop	 dx
   3994	    20FC  59				 pop	 cx
   3995	    20FD  5B				 pop	 bx
   3996	    20FE  58				 pop	 ax
   3997	    20FF  CB				 retf
   3998
   3999					 ;!!!!!!!!!!!!!!
   4000	    2100			 ObrRasstS:
   4001
   4002	    2100  50				 push	 ax
   4003	    2101  53				 push	 bx
   4004	    2102  51				 push	 cx
   4005	    2103  52				 push	 dx
   4006	    2104  56				 push	 si
   4007	    2105  57				 push	 di
   4008	    2106  55				 push	 bp
   4009
   4010	    2107  51				 push	 cx
   4011	    2108  52				 push	 dx
   4012	    2109  B0 01				 mov	 al , 01h
   4013	    210B  B7 00				 mov	 bh , 0
   4014	    210D  B4 13				 mov	 ah , 13h
   4015	    210F  B9 0050			 mov	 cx , 80
   4016	    2112  B2 00				 mov	 dl , 0
   4017	    2114  B6 01				 mov	 dh , 1
   4018	    2116  BD 056Dr			 lea	 bp , clean
   4019	    2119  CD 10				 int	 10h
   4020	    211B  5A				 pop	 dx
   4021	    211C  59				 pop	 cx
   4022						 ;mov	 cx , 80
   4023						 ;mov	 dl , 0
   4024						 ;mov	 dh , 1
   4025						 ;call	 wrClean
   4026	    211D  89 0E	060Fr			 mov	 x1 , cx
   4027	    2121  89 16	0611r			 mov	 y1 , dx
   4028	    2125  3B 0E	0543r			 cmp	 cx , rightBord1f
   4029	    2129  0F 8F	01C9			 jg	 mm
   4030	    212D  3B 16	0549r			 cmp	 dx , topBord
   4031	    2131  0F 8C	03C3			 jl	 uff
   4032	    2135  3B 16	0547r			 cmp	 dx , bottomBord
   4033	    2139  0F 8F	01B9			 jg	 mm
   4034
   4035
   4036	    213D  89 0E	060Fr			 mov	 x1 , cx
   4037	    2141  89 16	0611r			 mov	 y1 , dx
   4038	    2145  E8 E3A1			 call	 calcPlaceShip
   4039	    2148  B8 0002			 mov	 ax , 02h
   4040	    214B  CD 33				 int	 33h
   4041	    214D  83 3E	0765r 01		 cmp	 fh4 , 1
   4042	    2152  75 40				 jne	 g
   4043	    2154  C7 06	054Br 0000		 mov	 ok , 0
   4044	    215A  E8 E456			 call calcCorrectHor4
   4045	    215D  83 3E	054Br 01		 cmp	 ok , 1
   4046	    2162  0F 85	038F			 jne	 uncor
   4047	    2166  E8 E241			 call drawKillMy
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 72
umi.ASM



   4048	    2169  80 06	060Dr 01		 add	 x , 1
   4049	    216E  E8 E239			 call drawKillMy
   4050	    2171  80 06	060Dr 01		 add	 x , 1
   4051	    2176  E8 E231			 call drawKillMy
   4052	    2179  80 06	060Dr 01		 add	 x , 1
   4053	    217E  E8 E229			 call drawKillMy
   4054	    2181  C7 06	0765r 0000		 mov	 fh4 , 0
   4055	    2187  80 2E	0416r 04		 sub	 hNship	, 4
   4056	    218C  80 2E	041Ar 01		 sub	 hship4	, 1
   4057	    2191  E9 0364			 jmp	 uff
   4058	    2194			 g:
   4059	    2194  83 3E	0767r 01		 cmp	 fv4 , 1
   4060	    2199  75 40				 jne	 gg
   4061	    219B  C7 06	054Br 0000		 mov	 ok , 0
   4062	    21A1  E8 E38E			 call calcCorrectVert4
   4063	    21A4  83 3E	054Br 01		 cmp	 ok , 1
   4064	    21A9  0F 85	0348			 jne	 uncor
   4065	    21AD  E8 E1FA			 call drawKillMy
   4066	    21B0  80 06	060Er 01		 add	 y , 1
   4067	    21B5  E8 E1F2			 call drawKillMy
   4068	    21B8  80 06	060Er 01		 add	 y , 1
   4069	    21BD  E8 E1EA			 call drawKillMy
   4070	    21C0  80 06	060Er 01		 add	 y , 1
   4071	    21C5  E8 E1E2			 call drawKillMy
   4072	    21C8  C7 06	0767r 0000		 mov	 fv4 , 0
   4073	    21CE  80 2E	0416r 04		 sub	 hNship	, 4
   4074	    21D3  80 2E	041Ar 01		 sub	 hship4	, 1
   4075	    21D8  E9 031D			 jmp	 uff
   4076	    21DB			 gg:
   4077	    21DB  83 3E	0769r 01		 cmp	 fh3 , 1
   4078	    21E0  75 38				 jne	 g3
   4079	    21E2  C7 06	054Br 0000		 mov	 ok , 0
   4080	    21E8  E8 E439			 call calcCorrectHor3
   4081	    21EB  83 3E	054Br 01		 cmp	 ok , 1
   4082	    21F0  0F 85	0301			 jne	 uncor
   4083	    21F4  E8 E1B3			 call drawKillMy
   4084	    21F7  80 06	060Dr 01		 add	 x , 1
   4085	    21FC  E8 E1AB			 call drawKillMy
   4086	    21FF  80 06	060Dr 01		 add	 x , 1
   4087	    2204  E8 E1A3			 call drawKillMy
   4088	    2207  C7 06	0769r 0000		 mov	 fh3 , 0
   4089	    220D  80 2E	0416r 03		 sub	 hNship	, 3
   4090	    2212  80 2E	0419r 01		 sub	 hship3	, 1
   4091	    2217  E9 02DE			 jmp	 uff
   4092	    221A			 g3:
   4093	    221A  83 3E	076Br 01		 cmp	 fv3 , 1
   4094	    221F  75 38				 jne	 gg3
   4095	    2221  C7 06	054Br 0000		 mov	 ok , 0
   4096	    2227  E8 E465			 call calcCorrectVert3
   4097	    222A  83 3E	054Br 01		 cmp	 ok , 1
   4098	    222F  0F 85	02C2			 jne	 uncor
   4099	    2233  E8 E174			 call drawKillMy
   4100	    2236  80 06	060Er 01		 add	 y , 1
   4101	    223B  E8 E16C			 call drawKillMy
   4102	    223E  80 06	060Er 01		 add	 y , 1
   4103	    2243  E8 E164			 call drawKillMy
   4104	    2246  C7 06	076Br 0000		 mov	 fv3 , 0
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 73
umi.ASM



   4105	    224C  80 2E	0416r 03		 sub	 hNship	, 3
   4106	    2251  80 2E	0419r 01		 sub	 hship3	, 1
   4107	    2256  E9 029F			 jmp	 uff
   4108	    2259			 gg3:
   4109	    2259  83 3E	076Dr 01		 cmp	 fh2 , 1
   4110	    225E  75 30				 jne	 g2
   4111	    2260  C7 06	054Br 0000		 mov	 ok , 0
   4112	    2266  E8 E50C			 call calcCorrectHor2
   4113	    2269  83 3E	054Br 01		 cmp	 ok , 1
   4114	    226E  0F 85	0283			 jne	 uncor
   4115	    2272  E8 E135			 call drawKillMy
   4116	    2275  80 06	060Dr 01		 add	 x , 1
   4117	    227A  E8 E12D			 call drawKillMy
   4118	    227D  C7 06	076Dr 0000		 mov	 fh2 , 0
   4119	    2283  80 2E	0416r 02		 sub	 hNship	, 2
   4120	    2288  80 2E	0418r 01		 sub	 hship2	, 1
   4121	    228D  E9 0268			 jmp	 uff
   4122	    2290			 g2:
   4123	    2290  83 3E	076Fr 01		 cmp	 fv2 , 1
   4124	    2295  75 30				 jne	 gg2
   4125	    2297  C7 06	054Br 0000		 mov	 ok , 0
   4126	    229D  E8 E466			 call calcCorrectVert2
   4127	    22A0  83 3E	054Br 01		 cmp	 ok , 1
   4128	    22A5  0F 85	024C			 jne	 uncor
   4129	    22A9  E8 E0FE			 call drawKillMy
   4130	    22AC  80 06	060Er 01		 add	 y , 1
   4131	    22B1  E8 E0F6			 call drawKillMy
   4132	    22B4  C7 06	076Fr 0000		 mov	 fv2 , 0
   4133	    22BA  80 2E	0416r 02		 sub	 hNship	, 2
   4134	    22BF  80 2E	0418r 01		 sub	 hship2	, 1
   4135	    22C4  E9 0231			 jmp	 uff
   4136	    22C7			 gg2:
   4137	    22C7  83 3E	0771r 01		 cmp	 f1 , 1
   4138	    22CC  75 28				 jne	 mm
   4139	    22CE  C7 06	054Br 0000		 mov	 ok , 0
   4140	    22D4  E8 E503			 call calcCorrect1
   4141	    22D7  83 3E	054Br 01		 cmp	 ok , 1
   4142	    22DC  0F 85	0215			 jne	 uncor
   4143	    22E0  E8 E0C7			 call drawKillMy
   4144	    22E3  C7 06	0771r 0000		 mov	 f1 , 0
   4145	    22E9  80 2E	0416r 01		 sub	 hNship	, 1
   4146	    22EE  80 2E	0417r 01		 sub	 hship1	, 1
   4147	    22F3  E9 0202			 jmp	 uff
   4148	    22F6			 mm:
   4149
   4150	    22F6  81 3E	060Fr 0230		 cmp	 x1 , 560
   4151	    22FC  0F 8C	01F8			 jl	 uff
   4152	    2300  83 3E	0611r 38		 cmp	 y1 , 56
   4153	    2305  7F 09				 jg	 noGB
   4154	    2307  C7 06	075Ar 0001		 mov	 okGB ,	1
   4155	    230D  E9 01E8			 jmp	 uff
   4156	    2310			 noGB:
   4157	    2310  83 3E	0611r 54		 cmp	 y1 , 84
   4158	    2315  7F 09				 jg	 noFinn
   4159	    2317  C7 06	075Cr 0001		 mov	 okFin , 1
   4160	    231D  E9 01D8			 jmp	 uff
   4161	    2320			 noFinn:
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 74
umi.ASM



   4162	    2320  83 3E	0611r 70		 cmp	 y1 , 112
   4163	    2325  7F 09				 jg	 noRS
   4164	    2327  C7 06	075Er 0001		 mov	 okRS ,	1
   4165	    232D  E9 01C8			 jmp	 uff
   4166	    2330			 noRS:
   4167	    2330  81 3E	0611r 008C		 cmp	 y1 , 140
   4168	    2336  7F 36				 jg	 no4v
   4169	    2338  80 3E	041Ar 00		 cmp	 hship4	, 0
   4170	    233D  0F 8E	01B7			 jle	 uff
   4171	    2341  C7 06	0767r 0001		 mov	 fv4 , 1
   4172	    2347  C7 06	0765r 0000		 mov	 fh4 , 0
   4173	    234D  C7 06	076Br 0000		 mov	 fv3 , 0
   4174	    2353  C7 06	0769r 0000		 mov	 fh3 , 0
   4175	    2359  C7 06	076Fr 0000		 mov	 fv2 , 0
   4176	    235F  C7 06	076Dr 0000		 mov	 fh2 , 0
   4177	    2365  C7 06	0771r 0000		 mov	 f1 , 0
   4178	    236B  E9 018A			 jmp	 uff
   4179	    236E			 no4v:
   4180	    236E  81 3E	0611r 00A8		 cmp	 y1 , 168
   4181	    2374  7F 36				 jg	 no4h
   4182	    2376  80 3E	041Ar 00		 cmp	 hship4	, 0
   4183	    237B  0F 8E	0179			 jle	 uff
   4184	    237F  C7 06	0767r 0000		 mov	 fv4 , 0
   4185	    2385  C7 06	0765r 0001		 mov	 fh4 , 1
   4186	    238B  C7 06	076Br 0000		 mov	 fv3 , 0
   4187	    2391  C7 06	0769r 0000		 mov	 fh3 , 0
   4188	    2397  C7 06	076Fr 0000		 mov	 fv2 , 0
   4189	    239D  C7 06	076Dr 0000		 mov	 fh2 , 0
   4190	    23A3  C7 06	0771r 0000		 mov	 f1 , 0
   4191	    23A9  E9 014C			 jmp	 uff
   4192	    23AC			 no4h:
   4193	    23AC  81 3E	0611r 00C4		 cmp	 y1 , 196
   4194	    23B2  7F 36				 jg	 no3v
   4195	    23B4  80 3E	0419r 00		 cmp	 hship3	, 0
   4196	    23B9  0F 8E	013B			 jle	 uff
   4197	    23BD  C7 06	0767r 0000		 mov	 fv4 , 0
   4198	    23C3  C7 06	0765r 0000		 mov	 fh4 , 0
   4199	    23C9  C7 06	076Br 0001		 mov	 fv3 , 1
   4200	    23CF  C7 06	0769r 0000		 mov	 fh3 , 0
   4201	    23D5  C7 06	076Fr 0000		 mov	 fv2 , 0
   4202	    23DB  C7 06	076Dr 0000		 mov	 fh2 , 0
   4203	    23E1  C7 06	0771r 0000		 mov	 f1 , 0
   4204	    23E7  E9 010E			 jmp	 uff
   4205	    23EA			 no3v:
   4206	    23EA  81 3E	0611r 00E0		 cmp	 y1 , 224
   4207	    23F0  7F 36				 jg	 no3h
   4208	    23F2  80 3E	0419r 00		 cmp	 hship3	, 0
   4209	    23F7  0F 8E	00FD			 jle	 uff
   4210	    23FB  C7 06	0767r 0000		 mov	 fv4 , 0
   4211	    2401  C7 06	0765r 0000		 mov	 fh4 , 0
   4212	    2407  C7 06	076Br 0000		 mov	 fv3 , 0
   4213	    240D  C7 06	0769r 0001		 mov	 fh3 , 1
   4214	    2413  C7 06	076Fr 0000		 mov	 fv2 , 0
   4215	    2419  C7 06	076Dr 0000		 mov	 fh2 , 0
   4216	    241F  C7 06	0771r 0000		 mov	 f1 , 0
   4217	    2425  E9 00D0			 jmp	 uff
   4218	    2428			 no3h:
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 75
umi.ASM



   4219	    2428  81 3E	0611r 00FC		 cmp	 y1 , 252
   4220	    242E  7F 36				 jg	 no2v
   4221	    2430  80 3E	0418r 00		 cmp	 hship2	, 0
   4222	    2435  0F 8E	00BF			 jle	 uff
   4223	    2439  C7 06	0767r 0000		 mov	 fv4 , 0
   4224	    243F  C7 06	0765r 0000		 mov	 fh4 , 0
   4225	    2445  C7 06	076Br 0000		 mov	 fv3 , 0
   4226	    244B  C7 06	0769r 0000		 mov	 fh3 , 0
   4227	    2451  C7 06	076Fr 0001		 mov	 fv2 , 1
   4228	    2457  C7 06	076Dr 0000		 mov	 fh2 , 0
   4229	    245D  C7 06	0771r 0000		 mov	 f1 , 0
   4230	    2463  E9 0092			 jmp	 uff
   4231	    2466			 no2v:
   4232	    2466  81 3E	0611r 0118		 cmp	 y1 , 280
   4233	    246C  7F 35				 jg	 no2h
   4234	    246E  80 3E	0418r 00		 cmp	 hship2	, 0
   4235	    2473  0F 8E	0081			 jle	 uff
   4236	    2477  C7 06	0767r 0000		 mov	 fv4 , 0
   4237	    247D  C7 06	0765r 0000		 mov	 fh4 , 0
   4238	    2483  C7 06	076Br 0000		 mov	 fv3 , 0
   4239	    2489  C7 06	0769r 0000		 mov	 fh3 , 0
   4240	    248F  C7 06	076Fr 0000		 mov	 fv2 , 0
   4241	    2495  C7 06	076Dr 0001		 mov	 fh2 , 1
   4242	    249B  C7 06	0771r 0000		 mov	 f1 , 0
   4243	    24A1  EB 55				 jmp	 uff
   4244	    24A3			 no2h:
   4245	    24A3  81 3E	0611r 0134		 cmp	 y1 , 308
   4246	    24A9  7F 33				 jg	 no11
   4247	    24AB  80 3E	0417r 00		 cmp	 hship1	, 0
   4248	    24B0  7E 46				 jle	 uff
   4249	    24B2  C7 06	0767r 0000		 mov	 fv4 , 0
   4250	    24B8  C7 06	0765r 0000		 mov	 fh4 , 0
   4251	    24BE  C7 06	076Br 0000		 mov	 fv3 , 0
   4252	    24C4  C7 06	0769r 0000		 mov	 fh3 , 0
   4253	    24CA  C7 06	076Fr 0000		 mov	 fv2 , 0
   4254	    24D0  C7 06	076Dr 0000		 mov	 fh2 , 0
   4255	    24D6  C7 06	0771r 0001		 mov	 f1 , 1
   4256	    24DC  EB 1A				 jmp	 uff
   4257	    24DE			 no11:
   4258	    24DE  81 3E	0611r 0150		 cmp	 y1 , 336
   4259	    24E4  7F 12				 jg	 uff
   4260	    24E6  80 3E	0416r 00		 cmp	 hNship	, 0
   4261	    24EB  75 08				 jne	 uncor
   4262	    24ED  C7 06	0760r 0001		 mov	 okRD ,	1
   4263	    24F3  EB 03				 jmp	 uff
   4264	    24F5			 uncor:
   4265	    24F5  E8 E3A4			 call	 wrErrMsg
   4266	    24F8			 uff:
   4267	    24F8  B8 0001			 mov	 ax , 01h
   4268	    24FB  CD 33				 int	 33h
   4269
   4270	    24FD  5D				 pop	 bp
   4271	    24FE  5F				 pop	 di
   4272	    24FF  5E				 pop	 si
   4273	    2500  5A				 pop	 dx
   4274	    2501  59				 pop	 cx
   4275	    2502  5B				 pop	 bx
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 76
umi.ASM



   4276	    2503  58				 pop	 ax
   4277	    2504  CB			 retf
   4278
   4279						 ;@@@@@@
   4280	    2505			 Game:
   4281	    2505  1E			 push	 ds
   4282	    2506  0E			 push	 cs
   4283	    2507  1F			 pop		 ds
   4284	    2508  50				 push	 ax
   4285	    2509  53				 push	 bx
   4286	    250A  51				 push	 cx
   4287	    250B  52				 push	 dx
   4288	    250C  56				 push	 si
   4289	    250D  57				 push	 di
   4290	    250E  55				 push	 bp
   4291
   4292	    250F  3B 0E	0541r			 cmp	 cx,rightBord2f
   4293	    2513  7F 31				 jg	 mmg
   4294	    2515  3B 16	0549r			 cmp	 dx,topBord
   4295	    2519  7C 4B				 jl	 uffg
   4296	    251B  3B 16	0547r			 cmp	 dx,bottomBord
   4297	    251F  7F 25				 jg	 mmg
   4298	    2521  3B 0E	0545r			 cmp	 cx,leftBord2f
   4299	    2525  7C 1F				 jl	 mmg
   4300
   4301	    2527  83 3E	0777r 01		 cmp	 myHod,1
   4302	    252C  75 38				 jne	 uffg
   4303
   4304	    252E  C7 06	077Fr 0001		 mov	 fyes,1
   4305	    2534  C7 06	0777r 0000		 mov	 myHod,0
   4306	    253A  89 0E	060Fr			 mov	 x1,cx
   4307	    253E  89 16	0611r			 mov	 y1,dx
   4308	    2542  EB 22				 jmp	 uffg
   4309
   4310
   4311	    2544  EB 20				 jmp	 uffg
   4312
   4313	    2546			 mmg:
   4314	    2546  81 F9	0230			 cmp	 cx,560
   4315	    254A  7C 1A				 jl	 uffg
   4316	    254C  83 FA	38			 cmp	 dx,56
   4317	    254F  7F 08				 jg	 noGBg
   4318	    2551  C7 06	075Ar 0001		 mov	 okGB,1
   4319	    2557  EB 9F				 jmp	 uff
   4320	    2559			 noGBg:
   4321	    2559  83 FA	54			 cmp	 dx,84
   4322	    255C  7F 08				 jg	 uffg
   4323	    255E  C7 06	075Cr 0001		 mov	 okFin,1
   4324	    2564  EB 00				 jmp	 uffg
   4325	    2566			 uffg:
   4326	    2566  B8 0001			 mov	 ax,01h
   4327	    2569  CD 33				 int	 33h
   4328	    256B  1F				 pop		 ds
   4329	    256C  5D				 pop	 bp
   4330	    256D  5F				 pop	 di
   4331	    256E  5E				 pop	 si
   4332	    256F  5A				 pop	 dx
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 77
umi.ASM



   4333	    2570  59				 pop	 cx
   4334	    2571  5B				 pop	 bx
   4335	    2572  58				 pop	 ax
   4336	    2573  CB			 retf
   4337					 ;@@@@@@
   4338
   4339	    2574			 intun:
   4340					 ;Timer	uninstall
   4341	    2574  33 C0			      xor      ax,ax
   4342	    2576  8E C0			      mov      es,ax
   4343	    2578  BE 0B00r		      mov      si, offset Int_08h_old
   4344	    257B  BF 0020		      mov	   di, 8h*4
   4345	    257E  FA			      cli
   4346	    257F  A5			      movsw
   4347	    2580  A5			      movsw
   4348	    2581  FB			      sti
   4349	    2582  C3				 ret
   4350					 end	 _start
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 78
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "01/08/11"
??FILENAME			  Text	 "umi	  "
??TIME				  Text	 "04:33:07"
??VERSION			  Number 030A
@32BIT				  Text	 0
@@0				  Near	 DGROUP:0122
@@1				  Near	 DGROUP:0128
@@2				  Near	 DGROUP:013E
@@D				  Near	 DGROUP:1F61
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0F0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 UMI
@INTERFACE			  Text	 00H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
ALLPAR				  Byte	 DGROUP:053C
B2				  Byte	 DGROUP:0787
BOTTOMBORD			  Word	 DGROUP:0547
BUFFER				  Byte	 DGROUP:0103
BUF_SIZE			  Number 0400
CALCATTACKSHIP			  Near	 DGROUP:050C
CALCCORRECT1			  Near	 DGROUP:07DA
CALCCORRECTHOR2			  Near	 DGROUP:0775
CALCCORRECTHOR3			  Near	 DGROUP:0624
CALCCORRECTHOR4			  Near	 DGROUP:05B3
CALCCORRECTVERT2		  Near	 DGROUP:0706
CALCCORRECTVERT3		  Near	 DGROUP:068F
CALCCORRECTVERT4		  Near	 DGROUP:0532
CALCNSHIP			  Near	 DGROUP:0832
CALCPLACESHIP			  Near	 DGROUP:04E9
CALCSTATUS			  Near	 DGROUP:0866
CANCLE				  Near	 DGROUP:0978
CANSENDA			  Byte	 DGROUP:0786
CLEAN				  Byte	 DGROUP:056D
CLEAN1				  Byte	 DGROUP:05BD
CLEAN4				  Near	 DGROUP:0E07
CLEAN42				  Near	 DGROUP:17CA
CONDITION5			  Near	 DGROUP:12FC
CONDITION6			  Near	 DGROUP:1396
CONDITION7			  Near	 DGROUP:13E5
CONDITION8			  Near	 DGROUP:14A9
CONDITION9			  Near	 DGROUP:12F1
COUNT				  Word	 DGROUP:0406
CYCLE1				  Near	 DGROUP:135E
CYCLE2				  Near	 DGROUP:1465
CYCLE3				  Near	 DGROUP:1539
DECSI				  Near	 DGROUP:0803
DRAWFIELD			  Near	 DGROUP:02B7
DRAWKILLMY			  Near	 DGROUP:03AA
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 79
Symbol Table



DRAWKILLOPPONENT		  Near	 DGROUP:03EB
DRAWMISSMY			  Near	 DGROUP:048E
DRAWMISSOPPONENT		  Near	 DGROUP:043E
ERRMSG				  Byte	 DGROUP:08BB
EXIT				  Word	 DGROUP:056B
F1				  Word	 DGROUP:0771
FH2				  Word	 DGROUP:076D
FH3				  Word	 DGROUP:0769
FH4				  Word	 DGROUP:0765
FIELD				  Byte	 DGROUP:041C
FIELDOP				  Byte	 DGROUP:04AC
FIN				  Near	 DGROUP:1F45
FINSTATUS			  Near	 DGROUP:0887
FV2				  Word	 DGROUP:076F
FV3				  Word	 DGROUP:076B
FV4				  Word	 DGROUP:0767
FYES				  Word	 DGROUP:077F
G				  Near	 DGROUP:2194
G2				  Near	 DGROUP:2290
G3				  Near	 DGROUP:221A
GAME				  Near	 DGROUP:2505
GET_CHR				  Near	 DGROUP:0290
GG				  Near	 DGROUP:21DB
GG2				  Near	 DGROUP:22C7
GG3				  Near	 DGROUP:2259
GGGGGG				  Byte	 DGROUP:0A6E
HH				  Byte	 DGROUP:09D8
HHH				  Near	 DGROUP:0F5C
HHHH				  Near	 DGROUP:10B5
HIDEC				  Byte	 DGROUP:0410
HNSHIP				  Byte	 DGROUP:0416
HSHIP1				  Byte	 DGROUP:0417
HSHIP2				  Byte	 DGROUP:0418
HSHIP3				  Byte	 DGROUP:0419
HSHIP4				  Byte	 DGROUP:041A
II				  Near	 DGROUP:13B7
INCSI				  Near	 DGROUP:07A5
INCSI2				  Near	 DGROUP:073E
INCSI3				  Near	 DGROUP:06C7
INCSI4				  Near	 DGROUP:056C
INCSIH3				  Near	 DGROUP:0654
INCSIH4				  Near	 DGROUP:05E3
INTUN				  Near	 DGROUP:2574
INT_08H				  Near	 DGROUP:0AA8
INT_08H_OLD			  Word	 DGROUP:0B00
INT_RET				  Near	 DGROUP:0265
INT_STS				  Byte	 DGROUP:040E
IS_INT				  Near	 DGROUP:0210
KILL				  Byte	 DGROUP:03E7
KOORDMISSMY			  Byte	 DGROUP:04E8
KOORDMISSY			  Byte	 DGROUP:048D
KOORDOPX			  Byte	 DGROUP:043C
KOORDOPY			  Byte	 DGROUP:043D
KOORDX				  Byte	 DGROUP:03E9
KOORDY				  Byte	 DGROUP:03EA
LEFTBORD2F			  Word	 DGROUP:0545
LGTH				  Byte	 DGROUP:0788
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 80
Symbol Table



LLV				  Word	 DGROUP:03A6
LOC_1729			  Near	 DGROUP:0299
LOC_1730			  Near	 DGROUP:02AD
MANSW				  Near	 DGROUP:0E6C
MANSW1				  Near	 DGROUP:0EB7
MANSW2				  Near	 DGROUP:0ECD
MANSW21				  Near	 DGROUP:0F17
MANSW23				  Near	 DGROUP:0F2E
MANSW24				  Near	 DGROUP:0F45
MANSW3				  Near	 DGROUP:0F6B
MANSW31				  Near	 DGROUP:0FB5
MANSW33				  Near	 DGROUP:0FCC
MANSW34				  Near	 DGROUP:0FE3
MANSW35				  Near	 DGROUP:0FFA
MANSW36				  Near	 DGROUP:1015
MANSW37				  Near	 DGROUP:1033
MANSW371			  Near	 DGROUP:1042
MANSW38				  Near	 DGROUP:1060
MANSW381			  Near	 DGROUP:106F
MANSW39				  Near	 DGROUP:108D
MANSW391			  Near	 DGROUP:1097
MANSWW				  Near	 DGROUP:0E7D
MASP				  Byte	 DGROUP:0806
MASTER				  Word	 DGROUP:0561
MAXP				  Byte	 DGROUP:080B
MCONDITION41			  Near	 DGROUP:0E3B
MCOUNTIN			  Word	 DGROUP:0563
MCOUNTOUT			  Word	 DGROUP:0567
MFLAGERR			  Word	 DGROUP:0783
MGB				  Byte	 DGROUP:06A4
MINP				  Byte	 DGROUP:0810
MISS				  Byte	 DGROUP:0615
MISS1				  Byte	 DGROUP:0617
MM				  Near	 DGROUP:22F6
MMG				  Near	 DGROUP:2546
MNEXT40				  Near	 DGROUP:10C1
MNEXT40W			  Near	 DGROUP:10D2
MNEXT41				  Near	 DGROUP:10E1
MNEXT42				  Near	 DGROUP:10F0
MNEXT421			  Near	 DGROUP:1102
MNEXT421W			  Near	 DGROUP:1113
MNEXT43				  Near	 DGROUP:111D
MNEXT441			  Near	 DGROUP:1179
MNEXT442			  Near	 DGROUP:118A
MNEXT443			  Near	 DGROUP:11D1
MNEXT444			  Near	 DGROUP:11EB
MNEXT445			  Near	 DGROUP:1204
MNEXT4451			  Near	 DGROUP:1210
MNEXT446			  Near	 DGROUP:1221
MNEXT4461			  Near	 DGROUP:122F
MNEXT447			  Near	 DGROUP:1240
MNEXT4471			  Near	 DGROUP:124E
MNEXT448			  Near	 DGROUP:125D
MNEXT4481			  Near	 DGROUP:1264
MNEXT48				  Near	 DGROUP:127B
MNEXT49				  Near	 DGROUP:1283
MNEXT4A				  Near	 DGROUP:1291
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 81
Symbol Table



MNEXT4A1			  Near	 DGROUP:129B
MNEXT4A2			  Near	 DGROUP:12AC
MNEXT4A21			  Near	 DGROUP:12CB
MNEXT4B				  Near	 DGROUP:12DD
MNEXT4C				  Near	 DGROUP:12EA
MNEXTS41			  Near	 DGROUP:1131
MNEXTS42			  Near	 DGROUP:1143
MNEXTS43			  Near	 DGROUP:1155
MNEXTS44			  Near	 DGROUP:116D
MOUSENOTF			  Byte	 DGROUP:07EF
MR				  Near	 DGROUP:14BD
MSG11				  Byte	 DGROUP:069A
MSG2H				  Byte	 DGROUP:0690
MSG2V				  Byte	 DGROUP:0686
MSG3H				  Byte	 DGROUP:067C
MSG3V				  Byte	 DGROUP:0672
MSG4H				  Byte	 DGROUP:0668
MSG4V				  Byte	 DGROUP:065E
MSGFIN				  Byte	 DGROUP:0640
MSGGB				  Byte	 DGROUP:0636
MSGNIC				  Byte	 DGROUP:0619
MSGRD				  Byte	 DGROUP:0654
MSGRS				  Byte	 DGROUP:064A
MSGSHUR				  Byte	 DGROUP:0726
MSGSHUR1			  Byte	 DGROUP:0740
MWIN				  Byte	 DGROUP:06BE
MWON				  Byte	 DGROUP:06D8
MYERR				  Word	 DGROUP:0775
MYERRPROT			  Byte	 DGROUP:06F2
MYHOD				  Word	 DGROUP:0777
MYNAME				  Byte	 DGROUP:054D
NEXT41				  Near	 DGROUP:1A96
NEXT42				  Near	 DGROUP:1AA5
NEXT421				  Near	 DGROUP:1AB7
NEXT421W			  Near	 DGROUP:1ACD
NEXT43				  Near	 DGROUP:1ADD
NEXT441				  Near	 DGROUP:1B3E
NEXT442				  Near	 DGROUP:1B4F
NEXT443				  Near	 DGROUP:1B96
NEXT444				  Near	 DGROUP:1BAE
NEXT445				  Near	 DGROUP:1BC6
NEXT4451			  Near	 DGROUP:1BD2
NEXT446				  Near	 DGROUP:1BE3
NEXT4461			  Near	 DGROUP:1BF1
NEXT447				  Near	 DGROUP:1C02
NEXT4471			  Near	 DGROUP:1C10
NEXT448				  Near	 DGROUP:1C1F
NEXT4481			  Near	 DGROUP:1C26
NEXT48				  Near	 DGROUP:1C3D
NEXT49				  Near	 DGROUP:1C45
NEXT4A				  Near	 DGROUP:1C54
NEXT4A1				  Near	 DGROUP:1C5E
NEXT4A2				  Near	 DGROUP:1C6F
NEXT4A21			  Near	 DGROUP:1C8E
NEXT4B				  Near	 DGROUP:1CA0
NEXT4C				  Near	 DGROUP:1CAD
NEXTS41				  Near	 DGROUP:1AF6
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 82
Symbol Table



NEXTS42				  Near	 DGROUP:1B08
NEXTS43				  Near	 DGROUP:1B1A
NEXTS44				  Near	 DGROUP:1B32
NMR				  Near	 DGROUP:14C0
NO11				  Near	 DGROUP:24DE
NO2H				  Near	 DGROUP:24A3
NO2V				  Near	 DGROUP:2466
NO3H				  Near	 DGROUP:2428
NO3V				  Near	 DGROUP:23EA
NO4H				  Near	 DGROUP:23AC
NO4V				  Near	 DGROUP:236E
NOFINN				  Near	 DGROUP:2320
NOGB				  Near	 DGROUP:2310
NOGBG				  Near	 DGROUP:2559
NOI				  Near	 DGROUP:13B4
NORS				  Near	 DGROUP:2330
NO_CHAR				  Near	 DGROUP:021B
NSHIP				  Byte	 DGROUP:0411
OBRRASSTS			  Near	 DGROUP:2100
OHOHO				  Near	 DGROUP:14D1
OK				  Word	 DGROUP:054B
OK1				  Near	 DGROUP:082A
OKFIN				  Word	 DGROUP:075C
OKGB				  Word	 DGROUP:075A
OKHOR2				  Near	 DGROUP:07D2
OKHOR3				  Near	 DGROUP:0687
OKHOR4				  Near	 DGROUP:061C
OKRD				  Word	 DGROUP:0760
OKRS				  Word	 DGROUP:075E
OKVERT2				  Near	 DGROUP:076D
OKVERT3				  Near	 DGROUP:06FE
OKVERT4				  Near	 DGROUP:05AB
ONE				  Near	 DGROUP:03D2
ONEOP				  Near	 DGROUP:0414
OPERRPROT			  Byte	 DGROUP:070C
OPNAME				  Byte	 DGROUP:0557
OUTPUT				  Near	 DGROUP:0283
OUT_CHR				  Near	 DGROUP:0269
OVERRUN				  Byte	 DGROUP:040F
PP				  Byte	 DGROUP:0762
PRINTS				  Near	 DGROUP:010B
READ_CHAR			  Near	 DGROUP:021E
RIGHTBORD1F			  Word	 DGROUP:0543
RIGHTBORD2F			  Word	 DGROUP:0541
RV				  Word	 DGROUP:03A8
RVV				  Word	 DGROUP:03A4
SANSW				  Near	 DGROUP:181C
SANSW1				  Near	 DGROUP:186C
SANSW2				  Near	 DGROUP:1882
SANSW21				  Near	 DGROUP:18CC
SANSW23				  Near	 DGROUP:18E3
SANSW24				  Near	 DGROUP:18FA
SANSW3				  Near	 DGROUP:1920
SANSW31				  Near	 DGROUP:196A
SANSW33				  Near	 DGROUP:1981
SANSW34				  Near	 DGROUP:1998
SANSW35				  Near	 DGROUP:19AF
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 83
Symbol Table



SANSW36				  Near	 DGROUP:19CA
SANSW37				  Near	 DGROUP:19E8
SANSW371			  Near	 DGROUP:19F7
SANSW38				  Near	 DGROUP:1A15
SANSW381			  Near	 DGROUP:1A24
SANSW39				  Near	 DGROUP:1A42
SANSW391			  Near	 DGROUP:1A4C
SANSWW				  Near	 DGROUP:1832
SAVE_CHAR			  Near	 DGROUP:0236
SAVE_DS				  Word	 DGROUP:040C
SCONDITION41			  Near	 DGROUP:17F5
SCONDITION5			  Near	 DGROUP:1CB4
SCONDITION6			  Near	 DGROUP:1D55
SCONDITION7			  Near	 DGROUP:1DA9
SCONDITION8			  Near	 DGROUP:1E6F
SCOUNTIN			  Word	 DGROUP:0565
SCYCLE1				  Near	 DGROUP:1D0F
SCYCLE2				  Near	 DGROUP:1E29
SCYCLE3				  Near	 DGROUP:1EFF
SER_CS				  Word	 DGROUP:040A
SER_INI				  Near	 DGROUP:014E
SER_INT				  Far	 DGROUP:01EC
SER_INT_1			  Near	 DGROUP:024D
SER_INT_2			  Near	 DGROUP:0259
SER_INT_3			  Near	 DGROUP:0263
SER_IP				  Word	 DGROUP:0408
SER_RST				  Near	 DGROUP:01AB
SFLAGERR			  Word	 DGROUP:0781
SHEEP1				  Byte	 DGROUP:07DB
SHEEP2				  Byte	 DGROUP:07C7
SHEEP3				  Byte	 DGROUP:07B3
SHEEP4				  Byte	 DGROUP:079F
SHEEPFIELD			  Byte	 DGROUP:078B
SHHH				  Near	 DGROUP:1911
SHHHH				  Near	 DGROUP:1A6A
SHIP1				  Byte	 DGROUP:0412
SHIP2				  Byte	 DGROUP:0413
SHIP3				  Byte	 DGROUP:0414
SHIP4				  Byte	 DGROUP:0415
SII				  Near	 DGROUP:1D76
SIZEFIELD			  Byte	 DGROUP:041B
SLAVE0				  Near	 DGROUP:1579
SLAVE4				  Near	 DGROUP:17B1
SLAVER				  Byte	 DGROUP:0785
SMR				  Near	 DGROUP:1E83
SNEXT40				  Near	 DGROUP:1A76
SNEXT40W			  Near	 DGROUP:1A87
SNMR				  Near	 DGROUP:1E86
SNOI				  Near	 DGROUP:1D73
SOHOHO				  Near	 DGROUP:1E97
SOURCE				  Byte	 DGROUP:0002
SRC_PTR				  Word	 DGROUP:0404
STAT				  Word	 DGROUP:0613
STATE				  Byte	 DGROUP:0789
STATE1				  Near	 DGROUP:0BB2
STATE4				  Near	 DGROUP:0DEE
STATUS				  Word	 DGROUP:0779
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 84
Symbol Table



STATUS1				  Near	 DGROUP:0882
STATUSX				  Word	 DGROUP:077B
STATUSY				  Word	 DGROUP:077D
TOPBORD				  Word	 DGROUP:0549
UFF				  Near	 DGROUP:24F8
UFFG				  Near	 DGROUP:2566
UNCOR				  Near	 DGROUP:24F5
VVODNIC				  Near	 DGROUP:092C
WAIT_FREE			  Near	 DGROUP:01AD
WAIT_LINE			  Near	 DGROUP:0270
WIN				  Word	 DGROUP:0569
WRCLEAN				  Near	 DGROUP:088A
WRERRMSG			  Near	 DGROUP:089C
WRHOD				  Near	 DGROUP:0A49
WRINF				  Near	 DGROUP:0995
WRITENIC			  Near	 DGROUP:0950
WRNIC				  Near	 DGROUP:0901
WRWAIT				  Near	 DGROUP:09F6
WRWIN				  Near	 DGROUP:08C7
WRWON				  Near	 DGROUP:08E4
WSTATE4				  Byte	 DGROUP:078A
WTM				  Byte	 DGROUP:0A13
WWWW				  Near	 DGROUP:0949
X				  Byte	 DGROUP:060D
X1				  Word	 DGROUP:060F
XK				  Byte	 DGROUP:0773
XX				  Byte	 DGROUP:0000
XXX				  Byte	 DGROUP:0763
Y				  Byte	 DGROUP:060E
Y1				  Word	 DGROUP:0611
YK				  Byte	 DGROUP:0774
YY				  Byte	 DGROUP:0001
YYY				  Byte	 DGROUP:0764
_1				  Near	 DGROUP:0B04
_2				  Near	 DGROUP:1F65
_CCI				  Near	 DGROUP:036F
_CCI2				  Near	 DGROUP:036B
_CCL2				  Near	 DGROUP:0984
_CHOOSEP			  Near	 DGROUP:0B39
_COMP				  Near	 DGROUP:0D52
_D1				  Near	 DGROUP:1F77
_DDI				  Near	 DGROUP:038D
_DDI2				  Near	 DGROUP:0389
_DSQUARE			  Near	 DGROUP:0367
_ENDO				  Near	 DGROUP:20F5
_ENDO1				  Near	 DGROUP:20D0
_INP				  Near	 DGROUP:1FA2
_INTSET				  Near	 DGROUP:1F78
_INT_08S			  Near	 DGROUP:0AE7
_MOUSENF			  Near	 DGROUP:0B43
_MS				  Near	 DGROUP:1F62
_NA				  Near	 DGROUP:20EA
_ND				  Near	 DGROUP:206D
_ND1				  Near	 DGROUP:2075
_NDO				  Near	 DGROUP:2053
_NO				  Near	 DGROUP:0AD2
_NOAH				  Near	 DGROUP:09C2
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 85
Symbol Table



_NOFIN				  Near	 DGROUP:0AFE
_OBR1				  Near	 DGROUP:2044
_SLAVE0				  Near	 DGROUP:1585
_SLAVE1				  Near	 DGROUP:15AA
_SLAVE11			  Near	 DGROUP:16DB
_SLAVE12			  Near	 DGROUP:16EB
_SLAVE1_A2			  Near	 DGROUP:16F8
_SLAVE1_A6			  Near	 DGROUP:1661
_SLAVE1_A7			  Near	 DGROUP:1670
_SLAVE1_A8			  Near	 DGROUP:167F
_SLAVE1_B1			  Near	 DGROUP:168E
_SLAVE1_B11			  Near	 DGROUP:1698
_SLAVE1_B12			  Near	 DGROUP:16A8
_SLAVE1_B13			  Near	 DGROUP:16BF
_SLAVE1_B14			  Near	 DGROUP:16C7
_SLAVE1_B2			  Near	 DGROUP:1712
_SLAVE1_B21			  Near	 DGROUP:1720
_SLAVE2				  Near	 DGROUP:1785
_SLAVE21			  Near	 DGROUP:15C0
_SLAVE22			  Near	 DGROUP:15CF
_SLAVE23			  Near	 DGROUP:15DE
_SLAVE2AND1			  Near	 DGROUP:1604
_SLAVE2_A3			  Near	 DGROUP:1630
_SLAVE3_4A			  Near	 DGROUP:161A
_SLAVE_A1			  Near	 DGROUP:159B
_START				  Near	 DGROUP:0100
_STATE0				  Near	 DGROUP:0B87
_STATE01			  Near	 DGROUP:0B9B
_STATE01_1A			  Near	 DGROUP:0BAC
_STATE1				  Near	 DGROUP:0BDB
_STATE11			  Near	 DGROUP:0BC9
_STATE12			  Near	 DGROUP:0D04
_STATE1_2A			  Near	 DGROUP:0CA8
_STATE1_2B			  Near	 DGROUP:0D08
_STATE1_2B1			  Near	 DGROUP:0D36
_STATE1_A6			  Near	 DGROUP:0C72
_STATE1_A7			  Near	 DGROUP:0C84
_STATE1_A8			  Near	 DGROUP:0C96
_STATE1_B1			  Near	 DGROUP:0CB6
_STATE1_B11			  Near	 DGROUP:0CC5
_STATE1_B12			  Near	 DGROUP:0CD5
_STATE1_B13			  Near	 DGROUP:0CEC
_STATE1_B14			  Near	 DGROUP:0CF4
_STATE1_B2			  Near	 DGROUP:0D71
_STATE2				  Near	 DGROUP:0DC1
_STATE21			  Near	 DGROUP:0BF1
_STATE22			  Near	 DGROUP:0C00
_STATE23			  Near	 DGROUP:0C0F
_STATE2AND1			  Near	 DGROUP:0C29
_STATE2_3A			  Near	 DGROUP:0C3A
_STATE2_A4			  Near	 DGROUP:0C59
_SUB				  Near	 DGROUP:20B3
_VSET				  Near	 DGROUP:1F95
_VVNICK				  Near	 DGROUP:0B4B
_WAITC				  Near	 DGROUP:0ACC
_Z				  Near	 DGROUP:09C7
Turbo Assembler	 Version 3.1	    01/08/11 04:33:13	    Page 86
Symbol Table




Macro Name

MOVPP
NEWLINE
POPR
PUSHR
SEP

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0815 Word	  Public  DATA
  _TEXT				  16  2583 Word	  Public  CODE

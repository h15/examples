Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 1
23cc.ASM



      1					 locals	@@
      2	    0000				 .model	tiny
      3	    0000				 .code
      4						 .386
      5						 org 100h
      6
      7	    0100			 _start:
      8	    0100  E9 09C2			 jmp	 _1
      9	    0103			 .data
     10
     11	    0000  00			 xx		 db	 0
     12	    0001  00			 yy		 db	 0
     13		  =0400			 Buf_Size	 equ	 1024		; pазмеp буфеpа
     14	    0002  0402*(00)		 Source		 db	 Buf_Size+2 dup	(0) ; буфеp пpиема символов
     15	    0404  0002r			 Src_ptr	 dw	 Source		; указатель позиции в буфеpе
     16	    0406  0000			 Count		 dw	 0		; количество символов в	буфеpе
     17	    0408  0000			 Ser_ip		 dw	 0		; стаpый адpес Int 0Ch
     18	    040A  46 69	6E 61 6C 0D 0A+	 okFinM	 db	 'Final', 0dh ,	0ah , 24h
     19		  24
     20	    0412  0000			 Ser_cs		 dw	 0
     21	    0414  0000			 Save_ds	 dw	 0		; служебные пеpеменные
     22	    0416  00			 Int_sts	 db	 0
     23	    0417  00			 Overrun	 db	 0
     24	    0418  00			 hidec	 db	 0
     25	    0419  ????			 divisor	 dw	 ?
     26	    041B  ??			 databits	 db	 ?
     27	    041C  ??			 parity		 db	 ?
     28	    041D  ??			 stopbits	 db	 ?
     29	    041E  ??			 rate		 db	 ?	 ;9600 - скорость
     30
     31	    041F  00			 Nship		 db	 0
     32	    0420  00			 ship1		 db	 0
     33	    0421  00			 ship2		 db	 0
     34	    0422  00			 ship3		 db	 0
     35	    0423  00			 ship4		 db	 0
     36	    0424  00			 hNship		 db	 0
     37	    0425  01			 hship1		 db	 1
     38	    0426  00			 hship2		 db	 0
     39	    0427  00			 hship3		 db	 0
     40	    0428  00			 hship4		 db	 0
     41	    0429  06			 sizeField	 db	 6
     42	    042A  0000			 fh4		 dw	 0
     43	    042C  0000			 fv4		 dw	 0
     44	    042E  0000			 fh3		 dw	 0
     45	    0430  0000			 fv3		 dw	 0
     46	    0432  0000			 fh2		 dw	 0
     47	    0434  0000			 fv2		 dw	 0
     48	    0436  0000			 f1		 dw	 0
     49					 ;делаем поле на 1 строчку/столбец больше с каждой стороны для удобства	проверок расстановки+
     50					 кораблей т е нумерация	будет с	1
     51	    0438  00 00	00 00 00 00 00+	 field		 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ;0 - пустая клетка   +
     52		  00 00	00 00 00	 поля
     53	    0444  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ;1 - здесь стоит	    +
     54		  00 00	00 00 00	 корабль, который еще не подбили
     55	    0450  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ;2 - раненый/убитый  +
     56		  00 00	00 00 00	 корабль
     57	    045C  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ;3 - сюда уже	    +
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 2
23cc.ASM



     58		  00 00	00 00 00	 стреляли но здесь ничего нет
     59	    0468  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     60		  00 00	00 00 00
     61	    0474  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     62		  00 00	00 00 00
     63	    0480  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     64		  00 00	00 00 00
     65	    048C  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     66		  00 00	00 00 00
     67	    0498  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     68		  00 00	00 00 00
     69	    04A4  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     70		  00 00	00 00 00
     71	    04B0  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     72		  00 00	00 00 00
     73	    04BC  00 00	00 00 00 00 00+			 db	 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
     74		  00 00	00 00 00
     75	    04C8  05 05	05 05 05 05 05+	 fieldOp	 db	 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 ;5 - края,это не	поле
     76		  05 05	05 05 05
     77	    04D4  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5 ;1 - здесь корабль   +
     78		  00 00	00 00 05	 противника
     79	    04E0  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5 ;2 - сюда стреляла,  +
     80		  00 00	00 00 05	 либо точно ничего нет
     81	    04EC  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     82		  00 00	00 00 05
     83	    04F8  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     84		  00 00	00 00 05
     85	    0504  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     86		  00 00	00 00 05
     87	    0510  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     88		  00 00	00 00 05
     89	    051C  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     90		  00 00	00 00 05
     91	    0528  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     92		  00 00	00 00 05
     93	    0534  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     94		  00 00	00 00 05
     95	    0540  05 00	00 00 00 00 00+			 db	 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 5
     96		  00 00	00 00 05
     97	    054C  05 05	05 05 05 05 05+			 db	 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5
     98		  05 05	05 05 05
     99	    0558  00 00	00 00 00	 allPar		 db	 0 , 0 , 0 , 0 , 0
    100	    055D  00 00	00 00 00	 allp		 db	 0 , 0 , 0 , 0 , 0
    101	    0562  0000			 rightBord2f	 dw	 0
    102	    0564  0000			 rightBord1f	 dw	 0
    103	    0566  0128			 leftBord2f	 dw	 296
    104	    0568  0000			 bottomBord	 dw	 0
    105	    056A  002F			 topBord	 dw	 47
    106	    056C  0000			 ok		 dw	 0
    107	    056E  50 00	00 00 00 00 00+	 myName		 db	 50h , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
    108		  00 00	00
    109	    0578  4E 6F	00 00 00 00 00+	 opName		 db	 4eh , 6fh , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
    110		  00 00	00
    111	    0582  0000			 master		 dw	 0;slave=0 master =1
    112	    0584  43 6F	6E 64 69 74 69+	 cond5	 db	 'Condition5 ',	0dh , 0ah , 24h
    113		  6F 6E	35 20 0D 0A 24
    114	    0592  43 6F	6E 64 69 74 69+	 cond6	 db	 'Condition6 ',	0dh , 0ah , 24h
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 3
23cc.ASM



    115		  6F 6E	36 20 0D 0A 24
    116	    05A0  43 6F	6E 64 69 74 69+	 cond7	 db	 'Condition7 ',	0dh , 0ah , 24h
    117		  6F 6E	37 20 0D 0A 24
    118	    05AE  43 6F	6E 64 69 74 69+	 cond8	 db	 'Condition8 ',	0dh , 0ah , 24h
    119		  6F 6E	38 20 0D 0A 24
    120	    05BC  43 6F	6E 64 69 74 69+	 cond9	 db	 'Condition9 slave ', 0dh , 0ah	, 24h
    121		  6F 6E	39 20 73 6C 61+
    122		  76 65	20 0D 0A 24
    123	    05D0  0000			 McountIn	 dw	 0
    124	    05D2  0000			 ScountIn	 dw	 0
    125	    05D4  0000			 McountOut	 dw	 0
    126	    05D6  0000			 ScountOut	 dw	 0
    127	    05D8  000A			 syntime	 dw	 10
    128	    05DA  003C			 errtime	 dw	 60
    129	    05DC  0000			 Mflagerr	 dw	 0
    130	    05DE  0000			 Sflagsyn	 dw	 0
    131	    05E0  0000			 Sflagerr	 dw	 0
    132	    05E2  00			 fvect	 db	 0
    133	    05E3  0000			 win		 dw	 0
    134	    05E5  20 20	20 20 20 78 20+	 xM	 db	 '     x coord',0dh,0ah,24h
    135		  63 6F	6F 72 64 0D 0A+
    136		  24
    137	    05F4  20 20	20 20 20 79 20+	 yM	 db	 '     y coord',0dh,0ah,24h
    138		  63 6F	6F 72 64 0D 0A+
    139		  24
    140	    0603  0000			 exit		 dw	 0
    141	    0605  02*(C4)		 hor		 db	 2 dup(196)
    142	    0607  50*(00)		 clean		 db	 80 dup(0)
    143	    0657  50*(00)		 clean1		 db	 80 dup(00h)
    144	    06A7  B3			 vert		 db	 179
    145	    06A8  01			 x		 db	 1
    146	    06A9  20 20	4D 6F 75 73 65+	 cond81	 db	 '  Mouse! Mouse woork!', 0dh ,	0ah , 24h
    147		  21 20	4D 6F 75 73 65+
    148		  20 77	6F 6F 72 6B 21+
    149		  0D 0A	24
    150	    06C1  20 49	74 20 77 6F 72+	 condonF db	 ' It works worksss ', 0dh , 0ah , 24h
    151		  6B 73	20 77 6F 72 6B+
    152		  73 73	73 20 0D 0A 24
    153	    06D6  01			 y		 db	 1
    154	    06D7  0001			 x1		 dw	 1
    155	    06D9  0001			 y1		 dw	 1
    156	    06DB  ????			 stat		 dw	 ?
    157
    158	    06DD  02*(03)		 miss		 db	 2 dup (3)
    159	    06DF  02*(03)		 miss1		 db	 2 dup (3)
    160	    06E1  10			 vid		 db	 10h
    161	    06E2  ??			 saveMode	 db	 ?
    162	    06E3  00			 pages		 db	 0
    163	    06E4  57 72	69 74 65 20 73+	 msg1		 db	 "Write	size of	field: 6 , 7 , 8 , 9 or	A -> " ; , 0dh , 0ah , 24h
    164		  69 7A	65 20 6F 66 20+
    165		  66 69	65 6C 64 3A 20+
    166		  36 20	2C 20 37 20 2C+
    167		  20 38	20 2C 20 39 20+
    168		  6F 72	20 41 20 2D 3E+
    169		  20
    170	    070F  57 72	69 74 65 20 71+	 msg2		 db	 'Write	quantity of the	four-deck ship : 0 or 1	-> ' ;,	0dh , 0ah , +
    171		  75 61	6E 74 69 74 79+	 24h
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 4
23cc.ASM



    172		  20 6F	66 20 74 68 65+
    173		  20 66	6F 75 72 2D 64+
    174		  65 63	6B 20 73 68 69+
    175		  70 20	3A 20 30 20 6F+
    176		  72 20	31 20 2D 3E 20
    177	    0740  09 4D	61 73 74 65 72+	 s4a1		 db	 '	 Master	send a3, slave ready,send 4a to	master'	, 0dh ,	0ah +
    178		  20 73	65 6E 64 20 61+	 , 24h
    179		  33 2C	20 73 6C 61 76+
    180		  65 20	72 65 61 64 79+
    181		  2C 73	65 6E 64 20 34+
    182		  61 20	74 6F 20 6D 61+
    183		  73 74	65 72 0D 0A 24
    184	    0771  09 53	6C 61 76 65 20+	 s4a2		 db	 '	 Slave ready, master send a3,send 4a to	mastre'	, 0dh ,	0ah +
    185		  72 65	61 64 79 2C 20+	 , 24h
    186		  6D 61	73 74 65 72 20+
    187		  73 65	6E 64 20 61 33+
    188		  2C 73	65 6E 64 20 34+
    189		  61 20	74 6F 20 6D 61+
    190		  73 74	72 65 0D 0A 24
    191	    07A2  09 72	65 63 65 69 76+	 sa4		 db	 '	 receive 4a from master' , 0dh , 0ah , 24h
    192		  65 20	34 61 20 66 72+
    193		  6F 6D	20 6D 61 73 74+
    194		  65 72	0D 0A 24
    195	    07BC  57 72	69 74 65 20 71+	 msg3		 db	 'Write	quantity of the	three-deck ship	: 0 , 1	or 2 ->	' ;, 0dh ,  +
    196		  75 61	6E 74 69 74 79+	 0ah , 24h
    197		  20 6F	66 20 74 68 65+
    198		  20 74	68 72 65 65 2D+
    199		  64 65	63 6B 20 73 68+
    200		  69 70	20 3A 20 30 20+
    201		  2C 20	31 20 6F 72 20+
    202		  32 20	2D 3E 20
    203	    07F2  57 72	69 74 65 20 71+	 msg4		 db	 'Write	quantity of the	two-deck ship :	0 .. 5 -> ' ;, 0dh , 0ah ,  +
    204		  75 61	6E 74 69 74 79+	 24h
    205		  20 6F	66 20 74 68 65+
    206		  20 74	77 6F 2D 64 65+
    207		  63 6B	20 73 68 69 70+
    208		  20 3A	20 30 20 2E 2E+
    209		  20 35	20 2D 3E 20
    210	    0822  57 72	69 74 65 20 71+	 msg5		 db	 'Write	quantity of the	one-deck ship :	1 .. A -> ' ;, 0dh , 0ah ,  +
    211		  75 61	6E 74 69 74 79+	 24h
    212		  20 6F	66 20 74 68 65+
    213		  20 6F	6E 65 2D 64 65+
    214		  63 6B	20 73 68 69 70+
    215		  20 3A	20 31 20 2E 2E+
    216		  20 41	20 2D 3E 20
    217	    0852  57 72	69 74 65 20 79+	 msgNic		 db	 'Write	you Nic	<= 10 simbol : '
    218		  6F 75	20 4E 69 63 20+
    219		  3C 3D	20 31 30 20 73+
    220		  69 6D	62 6F 6C 20 3A+
    221		  20
    222	    086F  47 6F	6F 64 2D 42 79+	 msgGB		 db	 'Good-Bye  '
    223		  65 20	20
    224	    0879  46 69	6E 69 73 68 20+	 msgFin		 db	 'Finish    '
    225		  20 20	20
    226	    0883  52 65	73 74 61 72 74+	 msgRS		 db	 'Restart   '
    227		  20 20	20
    228	    088D  52 65	61 64 79 20 20+	 msgRD		 db	 'Ready	    '
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 5
23cc.ASM



    229		  20 20	20
    230	    0897  46 6F	75 72 2D 76 65+	 msg4v		 db	 'Four-vert '
    231		  72 74	20
    232	    08A1  46 6F	75 72 2D 68 6F+	 msg4h		 db	 'Four-hor  '
    233		  72 20	20
    234	    08AB  54 68	72 65 65 2D 76+	 msg3v		 db	 'Three-vert'
    235		  65 72	74
    236	    08B5  54 68	72 65 65 2D 68+	 msg3h		 db	 'Three-hor '
    237		  6F 72	20
    238	    08BF  54 77	6F 2D 76 65 72+	 msg2v		 db	 'Two-vert  '
    239		  74 20	20
    240	    08C9  54 77	6F 2D 68 6F 72+	 msg2h		 db	 'Two-hor   '
    241		  20 20	20
    242	    08D3  4F 6E	65 2D 64 65 73+	 msg11		 db	 'One-desk  '
    243		  6B 20	20
    244	    08DD  59 6F	75 20 6F 70 70+	 mGB		 db	 'You opponent exit!	    '
    245		  6F 6E	65 6E 74 20 65+
    246		  78 69	74 21 20 20 20+
    247		  20 20	20 20 20
    248	    08F7  56 49	43 54 4F 52 59+	 mWin		 db	 'VICTORY:)		    '
    249		  3A 29	20 20 20 20 20+
    250		  20 20	20 20 20 20 20+
    251		  20 20	20 20 20
    252	    0911  4C 4F	53 53 3A 28 20+	 mWon		 db	 'LOSS:(		    '
    253		  20 20	20 20 20 20 20+
    254		  20 20	20 20 20 20 20+
    255		  20 20	20 20 20
    256	    092B  45 72	72 6F 72 20 69+	 myErrProt	 db	 'Error	in my protocol	    '
    257		  6E 20	6D 79 20 70 72+
    258		  6F 74	6F 63 6F 6C 20+
    259		  20 20	20 20 20
    260	    0945  45 72	72 6F 72 20 69+	 opErrProt	 db	 'Error	in opponent protocol'
    261		  6E 20	6F 70 70 6F 6E+
    262		  65 6E	74 20 70 72 6F+
    263		  74 6F	63 6F 6C
    264	    095F  54 68	65 20 6F 70 70+	 msgShur	 db	 'The opponent are surrender'
    265		  6F 6E	65 6E 74 20 61+
    266		  72 65	20 73 75 72 72+
    267		  65 6E	64 65 72
    268	    0979  59 6F	75 20 74 6F 20+	 msgShur1	 db	 'You to surrender	    '
    269		  73 75	72 72 65 6E 64+
    270		  65 72	20 20 20 20 20+
    271		  20 20	20 20 20
    272	    0993  0000			 okGB		 dw	 0
    273	    0995  0000			 okFin		 dw	 0
    274	    0997  0000			 okRS		 dw	 0
    275	    0999  0000			 okRD		 dw	 0
    276	    099B  26*(B1) 27*(B3) BB	 top		 db	 38 dup(177), 39 dup(179), 187
    277	    09E9  00			 pp		 db	 0
    278	    09EA  00			 sss		 db	 0
    279	    09EB  00			 xxx		 db	 0
    280	    09EC  00			 yyy		 db	 0
    281	    09ED  00			 xk		 db	 0
    282	    09EE  00			 yk		 db	 0
    283	    09EF  0000			 myErr		 dw	 0
    284	    09F1  0000			 myHod		 dw	 0
    285	    09F3  0000			 status		 dw	 0
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 6
23cc.ASM



    286	    09F5  0000			 statusx	 dw	 0
    287	    09F7  0000			 statusy	 dw	 0
    288	    09F9  0000			 fyes		 dw	 0
    289
    290
    291	    09FB  01			 cansenda	 db	 1
    292	    09FC  00			 slaveR	 db	 0
    293	    09FD  00			 b2	 db	 0
    294	    09FE  00			 lgth	 db	 0
    295	    09FF  00			 state	 db	 0
    296	    0A00  73 65	6E 64 20 32 62+	 str0	 db	 'send 2b to master', 0dh , 0ah	, 24h
    297		  20 74	6F 20 6D 61 73+
    298		  74 65	72 0D 0A 24
    299	    0A14  09 53	6C 61 76 65 20+	 okRDM	 db	 '	 Slave ready!',	0dh , 0ah , 24h
    300		  72 65	61 64 79 21 0D+
    301		  0A 24
    302	    0A24  72 65	63 65 69 76 65+	 str1	 db	 'receive b2 from master', 0dh , 0ah , 24h
    303		  20 62	32 20 66 72 6F+
    304		  6D 20	6D 61 73 74 65+
    305		  72 0D	0A 24
    306	    0A3D  20 20	20 20 72 65 63+	 str2	 db	 '    receive ', 0dh , 0ah , 24h
    307		  65 69	76 65 20 0D 0A+
    308		  24
    309	    0A4C  73 74	61 74 65 34 20+	 str04	 db	 'state4 game!!!!',0dh,0ah,24h
    310		  67 61	6D 65 21 21 21+
    311		  21 0D	0A 24
    312	    0A5E  20 53	6C 61 76 65 20+	 str11	 db	 ' Slave works!', 0dh ,	0ah , 24h
    313		  77 6F	72 6B 73 21 0D+
    314		  0A 24
    315	    0A6E  72 65	63 65 69 76 65+	 str01	 db	 'receive a2 from master', 0dh , 0ah , 24h
    316		  20 61	32 20 66 72 6F+
    317		  6D 20	6D 61 73 74 65+
    318		  72 0D	0A 24
    319	    0A87  73 65	6E 64 20 32 61+	 str02	 db	 'send 2a to master) State2!', 0dh , 0ah , 24h
    320		  20 74	6F 20 6D 61 73+
    321		  74 65	72 29 20 53 74+
    322		  61 74	65 32 21 0D 0A+
    323		  24
    324	    0AA4			 .code
    325
    326					 include macro.asm
1   327					 pushr	 macro	 registers
1   328						 irp	 reg, <registers>
1   329							 push	 reg
1   330						 endm
1   331					 endm	 pushr
1   332
1   333					 popr	 macro	 registers
1   334						 irp	 reg, <registers>
1   335							 pop	 reg
1   336						 endm
1   337					 endm	 popr
1   338
1   339					 movpp	 macro	 reg1, reg2
1   340						 push	 reg2
1   341						 pop	 reg1
1   342					 endm	 movpp
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 7
23cc.ASM



1   343
1   344
1   345					 newline macro
1   346						 pushr	 <ax, dx, ds>
1   347						 jmp	 @@tmp1
1   348					 msg	 db	 0ah, 0dh, '$'
1   349						 @@tmp1:
1   350						 movpp	 ds, cs
1   351						 lea	 dx, msg
1   352						 mov	 ah, 9h
1   353						 int	 21h
1   354						 popr	 <ds, dx, ax>
1   355					 endm newline
1   356
1   357					 sep macro
1   358						 pushr	 <ax, dx, ds>
1   359						 jmp	 @@tmp2
1   360						 msg2	 db	 '----', 0ah, 0dh, '$'
1   361						 @@tmp2:
1   362						 movpp	 ds, cs
1   363						 lea	 dx, msg2
1   364						 mov	 ah, 9h
1   365						 int	 21h
1   366						 popr	 <ds, dx, ax>
1   367					 endm sep
1   368	    0103  07*(00) 24		 buffer	 db	 7 dup (0), '$'
1   369
1   370						 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1   371						 ; Prints signed decimal number	to screen.
1   372						 ; Call:
1   373						 ; push	number
1   374						 ; call	prints
1   375						 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1   376
1   377	    010B			 prints	proc	 near
1   378	    010B  55				 push	 bp
1   379	    010C  8B EC				 mov	 bp, sp
1   380	    010E  50				 push	 ax
1   381	    010F  53				 push	 bx
1   382	    0110  51				 push	 cx
1   383	    0111  52				 push	 dx
1   384	    0112  56				 push	 si
1   385	    0113  1E				 push	 ds
1   386						 movpp	 ds, cs
2   387	    0114  0E				 push	 cs
2   388	    0115  1F				 pop	 ds
1   389
1   390	    0116  8B 46	04			 mov	 ax, [bp+4]
1   391	    0119  33 F6				 xor	 si, si
1   392	    011B  85 C0				 test	 ax, ax
1   393	    011D  79 03				 jns	 @@0
1   394	    011F  46				 inc	 si
1   395	    0120  F7 D8				 neg	 ax
1   396	    0122			 @@0:
1   397	    0122  BB 010Ar			 lea	 bx, buffer+7
1   398	    0125  B9 000A			 mov	 cx, 10
1   399
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 8
23cc.ASM



1   400	    0128			 @@1:
1   401	    0128  33 D2				 xor	 dx, dx
1   402	    012A  F7 F1				 div	 cx
1   403	    012C  83 C2	30			 add	 dx, '0'
1   404	    012F  4B				 dec	 bx
1   405	    0130  88 17				 mov	 [bx], dl
1   406	    0132  0B C0				 or	 ax, ax
1   407	    0134  75 F2				 jnz	 @@1
1   408
1   409	    0136  85 F6				 test	 si, si
1   410	    0138  74 04				 jz	 @@2
1   411	    013A  4B				 dec	 bx
1   412	    013B  C6 07	2D			 mov	 byte ptr [bx],	'-'
1   413	    013E			 @@2:
1   414	    013E  8B D3				 mov	 dx, bx
1   415	    0140  B4 09				 mov	 ah, 9
1   416	    0142  CD 21				 int	 21h
1   417
1   418	    0144  1F				 pop	 ds
1   419	    0145  5E				 pop	 si
1   420	    0146  5A				 pop	 dx
1   421	    0147  59				 pop	 cx
1   422	    0148  5B				 pop	 bx
1   423	    0149  58				 pop	 ax
1   424	    014A  5D				 pop	 bp
1   425	    014B  C2 0002			 ret	 2
1   426	    014E			 prints	 endp
1   427
1   428
    429					 include com_s.asm
1   430	    014E			 .code
1   431
1   432	    014E			 Ser_Ini proc near
1   433	    014E  50				 push ax ; сохранить регистры
1   434	    014F  52				 push dx
1   435	    0150  53				 push bx
1   436	    0151  06				 push es
1   437	    0152  E4 21				 in al,21h ; IMR 1-го контролера прерываний
1   438	    0154  0C 08				 or al,08h ; запретить прерывание IRQ3 от COM1 ;;;;
1   439	    0156  E6 21				 out 21h,al
1   440	    0158  B0 0B				 mov al,0Bh
1   441	    015A  B4 35				 mov ah,35h
1   442	    015C  CD 21				 int 21h ; взять вектор	Int 0Bh	в es:bx
1   443	    015E  89 1E	0408r			 mov Ser_ip,bx ; и сохранить его
1   444	    0162  8C 06	0412r			 mov Ser_cs,es
1   445	    0166  B0 0B				 mov al,0Bh
1   446	    0168  BA 01ECr			 mov dx,offset Ser_int
1   447	    016B  1E				 push ds
1   448	    016C  8C CB				 mov bx,cs
1   449	    016E  8E DB				 mov ds,bx
1   450	    0170  B4 25				 mov ah,25h
1   451	    0172  CD 21				 int 21h ; установить Int 0Bh =	ds:dx
1   452	    0174  1F				 pop ds
1   453	    0175  07				 pop es
1   454	    0176  5B				 pop bx
1   455	    0177  FA				 cli ; запретить прерывания
1   456	    0178  E4 21				 in al,21h ; IMR 1-го контроллера прерываний
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 9
23cc.ASM



1   457	    017A  24 F7				 and al,not 08h
1   458	    017C  E6 21				 out 21h,al ; разрешить	прерывания от COM1
1   459	    017E  BA 02FB			 mov dx,2FBh ; регистр управления линией
1   460	    0181  EC				 in al,dx
1   461	    0182  0C 80				 or al,80h ; установить	бит DLAB
1   462	    0184  EE				 out dx,al
1   463	    0185  BA 02F8			 mov dx,2F8h
1   464	    0188  B0 0B				 mov al,0Bh
1   465	    018A  EE				 out dx,al ; младший байт для скорости 1200 бод
1   466	    018B  42				 inc dx
1   467	    018C  B0 00				 mov al,0
1   468	    018E  EE				 out dx,al ; старший байт скорости
1   469	    018F  BA 02FB			 mov dx,2FBh ; регистр управления линией
1   470	    0192  B0 1F				 mov al,00011111b ; 8 бит, 2 стоп-бита,	без четности
1   471	    0194  EE				 out dx,al
1   472	    0195  BA 02F9			 mov dx,2F9h ; регистр разрешения прерываний
1   473	    0198  B0 01				 mov al,1 ; разрешить прерывания по приему
1   474	    019A  EE				 out dx,al
1   475	    019B  90				 nop ; и чуть-чуть подождать
1   476	    019C  90				 nop
1   477	    019D  BA 02FC			 mov dx,2FCh ; регистр управления модемом
1   478	    01A0  B0 0B				 mov al,00001011b ; установить DTR, RTS	и OUT2
1   479	    01A2  EE				 out dx,al
1   480	    01A3  FB				 sti ; разрешить прерывания
1   481	    01A4  BA 02F8			 mov dx,2F8h ; регистр данных
1   482	    01A7  EC				 in al,dx ; сбросить буфер приема
1   483	    01A8  5A				 pop dx
1   484	    01A9  58				 pop ax
1   485	    01AA  C3			 ret
1   486	    01AB			 Ser_Ini endp
1   487					 ;ЙНННННННННННННННННННННННННННННННННННННННННННННННННННННННННННН»
1   488					 ;є Подпрограмма отключения стыка COM1.	є
1   489					 ;ИННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННј
1   490	    01AB			 Ser_Rst proc near
1   491	    01AB  50				 push ax ; сохранить регистры
1   492	    01AC  52				 push dx
1   493	    01AD			 Wait_Free:
1   494	    01AD  BA 02FD			 mov dx,2FDh ; регистр состояния линии
1   495	    01B0  EC				 in al,dx
1   496	    01B1  EB 00				 jmp short $+2 ; короткая задержка
1   497	    01B3  A8 60				 test al,60h ; передача	окончена?
1   498	    01B5  74 F6				 jz Wait_Free ;	ждем, если нет
1   499	    01B7  BA 02F9			 mov dx,2F9h ; регистр разрешения прерываний
1   500	    01BA  B0 00				 mov al,0 ; запретить прерывания
1   501	    01BC  EE				 out dx,al
1   502	    01BD  EB 00				 jmp short $+2 ; еще подождем...
1   503	    01BF  EB 00				 jmp short $+2
1   504	    01C1  BA 02FC			 mov dx,2FCh ; регистр управления модемом
1   505	    01C4  B0 03				 mov al,00000011b ; активировать DTR и RTS
1   506	    01C6  EE				 out dx,al
1   507	    01C7  EB 00				 jmp short $+2
1   508	    01C9  EB 00				 jmp short $+2
1   509	    01CB  53				 push bx
1   510	    01CC  B0 0B				 mov al,0Bh
1   511	    01CE  8B 16	0408r			 mov dx,Ser_ip
1   512	    01D2  1E				 push ds
1   513	    01D3  8B 1E	0412r			 mov bx,Ser_cs
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 10
23cc.ASM



1   514	    01D7  8E DB				 mov ds,bx
1   515	    01D9  B4 25				 mov ah,25h
1   516	    01DB  CD 21				 int 21h ; восстановить	вектор Int 0Ch
1   517	    01DD  1F				 pop ds
1   518	    01DE  5B				 pop bx
1   519	    01DF  FA				 cli ; запрет прерываний
1   520	    01E0  E4 21				 in al,21h ; читать маску прерываний
1   521	    01E2  EB 00				 jmp short $+2
1   522	    01E4  0C 10				 or al,10h ; запретить IRQ4
1   523	    01E6  E6 21				 out 21h,al
1   524	    01E8  FB				 sti ; разрешение прерываний
1   525	    01E9  5A				 pop dx
1   526	    01EA  58				 pop ax
1   527	    01EB  C3			 ret
1   528	    01EC			 Ser_Rst endp
1   529					 ;ЙНННННННННННННННННННННННННННННННННННННННННННННННННННННННННННН»
1   530					 ;є Подпрограмма обработки прерываний от COM1. є
1   531					 ;ИННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННј
1   532	    01EC			 Ser_Int proc far
1   533	    01EC  50				 push ax
1   534	    01ED  52				 push dx
1   535	    01EE  1E				 push ds
1   536						 movpp	 ds,cs
2   537	    01EF  0E				 push	 cs
2   538	    01F0  1F				 pop	 ds
1   539	    01F1  BA 02FA			 mov dx,2FAh ; регистр идентификации прерываний
1   540	    01F4  EC				 in al,dx
1   541	    01F5  A2 0416r			 mov Int_Sts,al; сохраним его содержимое
1   542	    01F8  A8 01				 test al,1 ; есть отложенные прерывания?
1   543	    01FA  74 14				 jz Is_Int ; да
1   544	    01FC  8F 06	0414r			 pop Save_ds ; нет, передаем управление
1   545	    0200  5A				 pop dx	; старому обработчику Int 0Ch
1   546	    0201  58				 pop ax
1   547	    0202  FF 36	0412r			 push Ser_cs
1   548	    0206  FF 36	0408r			 push Ser_ip
1   549	    020A  FF 36	0414r			 push Save_ds
1   550	    020E  1F				 pop ds
1   551	    020F  CB			 ret ; длинный переход
1   552	    0210			 Is_Int:
1   553	    0210  B0 63				 mov al,63h ; послать EOI для IRQ4
1   554	    0212  E6 20				 out 20h,al ; в	1-й контроллер прерываний
1   555	    0214  F6 06	0416r 04		 test Int_Sts,4	; прерывание по	приему?
1   556	    0219  75 03				 jnz Read_Char ; да
1   557	    021B			 No_Char:
1   558	    021B  FB				 sti ; нет, разрешить прерывания
1   559	    021C  EB 47				 jmp Int_Ret ; и закончить обработку Int 0Ch
1   560	    021E			 Read_Char:
1   561	    021E  BA 02FD			 mov dx,2FDh ; регистр состояния линии
1   562	    0221  EC				 in al,dx
1   563	    0222  24 02				 and al,2
1   564	    0224  A2 0417r			 mov Overrun,al; ovvrrun<>0, если была потеря символа
1   565	    0227  BA 02F8			 mov dx,2F8h ; регистр данных
1   566	    022A  EC				 in al,dx ; вводим символ
1   567					 ;or al,al ; если принят нуль,
1   568					 ;jz No_Char ; то игнорируем его
1   569	    022B  53				 push bx
1   570	    022C  8A 26	0417r			 mov ah,Overrun
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 11
23cc.ASM



1   571	    0230  0A E4				 or ah,ah ; предыдущий символ потерян?
1   572	    0232  74 02				 jz Save_Char ;	нет
1   573	    0234  8A E0				 mov ah,al ; да,
1   574					 ;mov al,7 ; заменяем его на звонок (07h)
1   575	    0236			 Save_Char:
1   576	    0236  8B 1E	0404r			 mov bx,Src_ptr; заносим символ	в буфер
1   577	    023A  88 07				 mov [bx],al
1   578	    023C  FF 06	0404r			 inc Src_ptr ; и обновляем счетчики
1   579	    0240  43				 inc bx
1   580	    0241  81 FB	0402r			 cmp bx,offset Src_ptr-2 ; если	конец буфера
1   581	    0245  72 06				 jb Ser_Int_1
1   582	    0247  C7 06	0404r 0002r		 mov Src_ptr,offset Source ; то	"зацикливаем" на начало
1   583	    024D			 Ser_Int_1:
1   584	    024D  81 3E	0406r 0400		 cmp Count,Buf_Size ; буфер полон?
1   585	    0253  73 04				 jae Ser_Int_2 ; да
1   586	    0255  FF 06	0406r			 inc Count ; нет, учесть символ
1   587	    0259			 Ser_Int_2:
1   588	    0259  0A E4				 or ah,ah ; если была потеря символа
1   589	    025B  74 06				 jz Ser_Int_3
1   590	    025D  8A C4				 mov al,ah ; то	занести	в буфер	сам символ
1   591	    025F  32 E4				 xor ah,ah
1   592	    0261  EB D3				 jmp short Save_Char
1   593	    0263			 Ser_Int_3:
1   594	    0263  5B				 pop bx
1   595	    0264  FB				 sti ; разрешить прерывания
1   596	    0265			 Int_Ret:
1   597	    0265  1F				 pop ds
1   598	    0266  5A				 pop dx
1   599	    0267  58				 pop ax
1   600	    0268  CF			 iret
1   601	    0269			 Ser_Int endp
1   602					 ;ЙНННННННННННННННННННННННННННННННННННННННННННННННННННННННННННН»
1   603					 ;є Подпрограмма вывода	символа	AL в порт. є
1   604					 ;є При	ошибке возвращает CF=1,	иначе CF=0. є
1   605					 ;ИННННННННННННННННННННННННННННННННННННННННННННННННННННННННННННј
1   606	    0269			 Out_Chr proc near
1   607	    0269  50				 push ax
1   608	    026A  51				 push cx
1   609	    026B  52				 push dx
1   610	    026C  8A E0				 mov ah,al
1   611	    026E  2B C9				 sub cx,cx
1   612	    0270			 Wait_Line:
1   613	    0270  BA 02FD			 mov dx,2FDh ; регистр состояния линии
1   614	    0273  EC				 in al,dx
1   615	    0274  A8 20				 test al,20h ; стык готов к передаче?
1   616	    0276  75 0B				 jnz Output ; да
1   617	    0278  EB 00				 jmp short $+2
1   618	    027A  EB 00				 jmp short $+2
1   619	    027C  E2 F2				 loop Wait_Line	; нет, ждем
1   620	    027E  5A				 pop dx
1   621	    027F  59				 pop cx
1   622	    0280  58				 pop ax
1   623	    0281  F9				 stc ; нет готовности порта
1   624	    0282  C3			 ret
1   625	    0283			 Output:
1   626	    0283  8A C4				 mov al,ah
1   627	    0285  BA 02F8			 mov dx,2F8h ; регистр данных
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 12
23cc.ASM



1   628	    0288  EB 00				 jmp short $+2
1   629	    028A  EE				 out dx,al ; вывести символ
1   630	    028B  5A				 pop dx
1   631	    028C  59				 pop cx
1   632	    028D  58				 pop ax
1   633	    028E  F8				 clc ; нормальный возврат
1   634	    028F  C3			 ret
1   635	    0290			 Out_Chr endp
1   636					 ;ЙНННННННННННННННННННННННННННННННННННННННННННННННННННННННННННН»
1   637					 ;є Подпрограмма ввода символа из порта	в AL. є
1   638					 ;є Если буфер пуст, возвращает	CF=1, иначе CF=0. є
1   639
1   640	    0290			 Get_Chr proc near
1   641	    0290  83 3E	0406r 00		 cmp Count,0 ; буфер пуст?
1   642	    0295  75 02				 jne loc_1729 ;	нет
1   643	    0297  F9				 stc ; да, возврат по ошибке
1   644	    0298  C3			 ret
1   645	    0299			 loc_1729:
1   646	    0299  56				 push si
1   647	    029A  FA				 cli ; запретим	прерывания
1   648	    029B  8B 36	0404r			 mov si,Src_ptr
1   649	    029F  2B 36	0406r			 sub si,Count
1   650	    02A3  81 FE	0002r			 cmp si,offset Source
1   651	    02A7  73 04				 jae loc_1730
1   652	    02A9  81 C6	0400			 add si,Buf_Size
1   653	    02AD			 loc_1730:
1   654	    02AD  8A 04				 mov al,[si] ; выберем символ
1   655	    02AF  FF 0E	0406r			 dec Count ; и уменьшим	счечик
1   656	    02B3  FB				 sti ; разрешение прерываний
1   657	    02B4  5E				 pop si
1   658	    02B5  F8				 clc ; и нормальный возврат
1   659	    02B6  C3			 ret
1   660	    02B7			 Get_Chr endp
1   661
1   662
    663					 include mdraw.asm
1   664	    02B7			 drawField proc	near
1   665	    02B7  50				 push	 ax
1   666	    02B8  53				 push	 bx
1   667	    02B9  51				 push	 cx
1   668	    02BA  52				 push	 dx
1   669	    02BB  56				 push	 si
1   670	    02BC  57				 push	 di
1   671	    02BD  55				 push	 bp
1   672
1   673	    02BE  8A 0E	0429r			 mov	 cl,sizeField
1   674	    02C2  B8 0018			 mov	 ax,24
1   675	    02C5  F6 E1				 mul	 cl
1   676	    02C7  05 0004			 add	 ax,4
1   677	    02CA  A3 03A4r			 mov	 rvv,ax
1   678	    02CD  A3 0564r			 mov	 rightBord1f,ax
1   679
1   680	    02D0  8A 0E	0429r			 mov	 cl,sizeField
1   681	    02D4  B8 001C			 mov	 ax,2*0Eh
1   682	    02D7  F6 E1				 mul	 cl
1   683	    02D9  05 0031			 add	 ax,49
1   684	    02DC  A3 0568r			 mov	 bottomBord,ax
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 13
23cc.ASM



1   685
1   686	    02DF  B4 0C				 mov	 ah,0Ch
1   687	    02E1  B0 1E				 mov	 al,00011110b
1   688	    02E3  32 FF				 xor	 bh,bh
1   689	    02E5  E8 007F			 call	 _dSquare
1   690
1   691	    02E8  A1 03A4r			 mov	 ax,rvv
1   692	    02EB  05 0128			 add	 ax,296
1   693	    02EE  A3 03A4r			 mov	 rvv,ax
1   694	    02F1  A3 0562r			 mov	 rightBord2f,ax
1   695
1   696	    02F4  B4 0C				 mov	 ah,0Ch
1   697	    02F6  B0 16				 mov	 al,00010110b
1   698	    02F8  C7 06	03A8r 012B		 mov	 rv,299
1   699	    02FE  E8 0066			 call	 _dSquare
1   700
1   701	    0301  B4 13				 mov	 ah,13h
1   702	    0303  B0 01				 mov	 al,01h
1   703	    0305  B3 3F				 mov	 bl,00111111b
1   704	    0307  B9 000A			 mov	 cx,10
1   705	    030A  B2 46				 mov	 dl,70
1   706	    030C  B6 03				 mov	 dh,3
1   707
1   708	    030E  BD 086Fr			 lea	 bp,msgGB
1   709	    0311  CD 10				 int	 10h
1   710	    0313  B6 05				 mov	 dh,5
1   711	    0315  BD 0879r			 lea	 bp,msgFin
1   712	    0318  CD 10				 int	 10h
1   713	    031A  B6 07				 mov	 dh,7
1   714	    031C  BD 0883r			 lea	 bp,msgRS
1   715	    031F  CD 10				 int	 10h
1   716	    0321  B6 09				 mov	 dh,9
1   717	    0323  BD 0897r			 lea	 bp,msg4v
1   718	    0326  CD 10				 int	 10h
1   719	    0328  B6 0B				 mov	 dh,11
1   720	    032A  BD 08A1r			 lea	 bp,msg4h
1   721	    032D  CD 10				 int	 10h
1   722	    032F  B6 0D				 mov	 dh,13
1   723	    0331  BD 08ABr			 lea	 bp,msg3v
1   724	    0334  CD 10				 int	 10h
1   725	    0336  B6 0F				 mov	 dh,15
1   726	    0338  BD 08B5r			 lea	 bp,msg3h
1   727	    033B  CD 10				 int	 10h
1   728	    033D  B6 11				 mov	 dh,17
1   729	    033F  BD 08BFr			 lea	 bp,msg2v
1   730	    0342  CD 10				 int	 10h
1   731	    0344  B6 13				 mov	 dh,19
1   732	    0346  BD 08C9r			 lea	 bp,msg2h
1   733	    0349  CD 10				 int	 10h
1   734	    034B  B6 15				 mov	 dh,21
1   735	    034D  BD 08D3r			 lea	 bp,msg11
1   736	    0350  CD 10				 int	 10h
1   737	    0352  B6 17				 mov	 dh,23
1   738	    0354  BD 088Dr			 lea	 bp,msgRD
1   739	    0357  CD 10				 int	 10h
1   740
1   741	    0359  33 D2				 xor	 dx,dx
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 14
23cc.ASM



1   742	    035B  B4 02				 mov	 ah,02h
1   743	    035D  CD 10				 int	 10h
1   744
1   745
1   746	    035F  5D				 pop	 bp
1   747	    0360  5F				 pop	 di
1   748	    0361  5E				 pop	 si
1   749	    0362  5A				 pop	 dx
1   750	    0363  59				 pop	 cx
1   751	    0364  5B				 pop	 bx
1   752	    0365  58				 pop	 ax
1   753	    0366  C3			 ret
1   754
1   755	    0367			 _dSquare:
1   756	    0367  8B 16	056Ar			 mov	 dx,topBord
1   757	    036B			 _cci2:
1   758	    036B  8B 0E	03A8r			 mov	 cx,rv
1   759	    036F			 _cci:
1   760	    036F  CD 10				 int	 10h
1   761	    0371  42				 inc	 dx
1   762	    0372  CD 10				 int	 10h
1   763
1   764	    0374  4A				 dec	 dx
1   765	    0375  41				 inc	 cx
1   766	    0376  3B 0E	03A4r			 cmp	 cx,rvv
1   767	    037A  75 F3				 jne	 _cci
1   768	    037C  83 C2	1C			 add	 dx,2*0Eh
1   769	    037F  3B 16	0568r			 cmp	 dx,bottomBord
1   770	    0383  7C E6				 jl	 _cci2
1   771
1   772	    0385  8B 0E	03A8r			 mov	 cx,rv
1   773	    0389			 _ddi2:
1   774	    0389  8B 16	056Ar			 mov	 dx,topBord
1   775	    038D			 _ddi:
1   776	    038D  CD 10				 int	 10h
1   777	    038F  41				 inc	 cx
1   778	    0390  CD 10				 int	 10h
1   779
1   780	    0392  49				 dec	 cx
1   781	    0393  42				 inc	 dx
1   782	    0394  3B 16	0568r			 cmp	 dx,bottomBord
1   783	    0398  75 F3				 jne	 _ddi
1   784	    039A  83 C1	18			 add	 cx,18h
1   785	    039D  3B 0E	03A4r			 cmp	 cx,rvv
1   786	    03A1  7C E6				 jl	 _ddi2
1   787	    03A3  C3			 ret
1   788	    03A4  0000			 rvv	 dw	 0
1   789	    03A6  0000			 llv	 dw	 0
1   790	    03A8  0003			 rv	 dw	 3
1   791	    03AA			 drawField ENDP
1   792
1   793
1   794	    03AA			 drawKillMy proc
1   795					 ;рисуем попадания противника в	мои корабли
1   796	    03AA  50				 push	 ax
1   797	    03AB  53				 push	 bx
1   798	    03AC  51				 push	 cx
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 15
23cc.ASM



1   799	    03AD  52				 push	 dx
1   800	    03AE  55				 push	 bp
1   801
1   802	    03AF  33 C9				 xor	 cx,cx
1   803	    03B1  8A 0E	06D6r			 mov	 cl,y
1   804	    03B5  B8 0002			 mov	 ax,2
1   805	    03B8  F6 E1				 mul	 cl
1   806	    03BA  48				 dec	 ax
1   807	    03BB  8A F0				 mov	 dh,al
1   808	    03BD  80 C6	03			 add	 dh,3
1   809	    03C0  88 36	03EAr			 mov	 koordy,dh
1   810
1   811	    03C4  8A 0E	06A8r			 mov	 cl,x
1   812	    03C8  B8 0003			 mov	 ax,3
1   813	    03CB  F6 E1				 mul	 cl
1   814	    03CD  2D 0002			 sub	 ax,2
1   815	    03D0  8A D0				 mov	 dl,al
1   816	    03D2			 one:
1   817	    03D2  8A 36	03EAr			 mov	 dh,koordy
1   818	    03D6  B9 0002			 mov	 cx,2
1   819	    03D9  B8 1300			 mov	 ax,1300h
1   820	    03DC  BD 03E7r			 mov bp, offset	kill
1   821	    03DF  CD 10				 int	 10h
1   822
1   823	    03E1  5D				 pop	 bp
1   824	    03E2  5A				 pop	 dx
1   825	    03E3  59				 pop	 cx
1   826	    03E4  5B				 pop	 bx
1   827	    03E5  58				 pop	 ax
1   828
1   829	    03E6  C3				 ret
1   830
1   831	    03E7  02*(DB)		 kill		 db	 2 dup (219)
1   832	    03E9  00			 koordx	 db	 0
1   833	    03EA  00			 koordy	 db	 0
1   834	    03EB			 drawKillMy endp
1   835
1   836	    03EB			 drawKillOpponent proc
1   837					 ;рисуем свои попадпния	в корабли противника
1   838
1   839	    03EB  50				 push	 ax
1   840	    03EC  53				 push	 bx
1   841	    03ED  51				 push	 cx
1   842	    03EE  52				 push	 dx
1   843	    03EF  55				 push	 bp
1   844
1   845	    03F0  8A 0E	06D6r			 mov	 cl,y
1   846	    03F4  B8 0002			 mov	 ax,2
1   847	    03F7  F6 E1				 mul	 cl
1   848	    03F9  48				 dec	 ax
1   849	    03FA  8A F0				 mov	 dh,al
1   850	    03FC  80 C6	03			 add	 dh,3
1   851	    03FF  88 36	043Dr			 mov	 koordOpy,dh
1   852	    0403  8A 0E	06A8r			 mov	 cl,x
1   853	    0407  B8 0003			 mov	 ax,3
1   854	    040A  F6 E1				 mul	 cl
1   855	    040C  2D 0002			 sub	 ax,2
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 16
23cc.ASM



1   856	    040F  8A D0				 mov	 dl,al
1   857	    0411  80 C2	25			 add	 dl,37
1   858	    0414			 oneOp:
1   859	    0414  8A 36	043Dr			 mov	 dh,koordOpy
1   860	    0418  32 FF				 xor	 bh,bh
1   861	    041A  B3 3B				 mov	 bl,00111011b
1   862	    041C  B9 0001			 mov	 cx,1
1   863	    041F  B4 02				 mov	 ah,02h
1   864	    0421  CD 10				 int	 10h
1   865	    0423  B9 0002			 mov	 cx,2
1   866	    0426  B8 1300			 mov	 ax,1300h
1   867	    0429  BD 03E7r			 lea	 bp,kill
1   868	    042C  CD 10				 int	 10h
1   869
1   870	    042E  B6 18				 mov	 dh,24
1   871	    0430  B2 50				 mov	 dl,80
1   872	    0432  B4 02				 mov	 ah,02h
1   873	    0434  CD 10				 int	 10h
1   874
1   875	    0436  5D				 pop	 bp
1   876	    0437  5A				 pop	 dx
1   877	    0438  59				 pop	 cx
1   878	    0439  5B				 pop	 bx
1   879	    043A  58				 pop	 ax
1   880
1   881	    043B  C3				 ret
1   882	    043C  00			 koordOpx	 db	 0
1   883	    043D  00			 koordOpy	 db	 0
1   884	    043E			 drawKillOpponent endp
1   885
1   886
1   887	    043E			 drawMissOpponent proc
1   888					 ;рисуем промахи которые допустил сам
1   889
1   890	    043E  50				 push	 ax
1   891	    043F  53				 push	 bx
1   892	    0440  51				 push	 cx
1   893	    0441  52				 push	 dx
1   894	    0442  55				 push	 bp
1   895
1   896	    0443  8A 0E	06D6r			 mov	 cl,y
1   897	    0447  B8 0002			 mov	 ax,2
1   898	    044A  F6 E1				 mul	 cl
1   899	    044C  FE C8				 dec	 al
1   900	    044E  8A F0				 mov	 dh,al
1   901	    0450  80 C6	03			 add	 dh,3
1   902	    0453  88 36	048Dr			 mov	 koordMissy,dh
1   903	    0457  8A 0E	06A8r			 mov	 cl,x
1   904	    045B  B8 0003			 mov	 ax,3
1   905	    045E  F6 E1				 mul	 cl
1   906	    0460  2D 0002			 sub	 ax,2
1   907	    0463  8A D0				 mov	 dl,al
1   908	    0465  80 C2	26			 add	 dl,38
1   909
1   910	    0468  8A 36	048Dr			 mov	 dh,koordMissy
1   911	    046C  32 FF				 xor	 bh,bh
1   912	    046E  B3 3A				 mov	 bl,00111010b
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 17
23cc.ASM



1   913	    0470  B9 0001			 mov	 cx,1
1   914	    0473  B4 02				 mov	 ah,02h
1   915	    0475  CD 10				 int	 10h
1   916
1   917	    0477  B8 1300			 mov	 ax,1300h
1   918	    047A  BD 06DDr			 lea	 bp,miss
1   919	    047D  CD 10				 int	 10h
1   920
1   921	    047F  B6 18				 mov	 dh,24
1   922	    0481  B2 50				 mov	 dl,80
1   923	    0483  B4 02				 mov	 ah,02h
1   924	    0485  CD 10				 int	 10h
1   925
1   926	    0487  5D				 pop	 bp
1   927	    0488  5A				 pop	 dx
1   928	    0489  59				 pop	 cx
1   929	    048A  5B				 pop	 bx
1   930	    048B  58				 pop	 ax
1   931
1   932	    048C  C3				 ret
1   933	    048D  00			 koordMissy	 db	 0
1   934	    048E			 drawMissOpponent endp
1   935
1   936	    048E			 drawMissMy proc
1   937					 ;рисуем промахи которые допустил противник
1   938
1   939	    048E  50				 push	 ax
1   940	    048F  53				 push	 bx
1   941	    0490  51				 push	 cx
1   942	    0491  52				 push	 dx
1   943	    0492  56				 push	 si
1   944	    0493  57				 push	 di
1   945	    0494  55				 push	 bp
1   946
1   947	    0495  33 C9				 xor	 cx , cx
1   948	    0497  8A 0E	06D6r			 mov	 cl , y
1   949	    049B  33 C0				 xor	 ax , ax
1   950	    049D  B8 0002			 mov	 ax , 2
1   951	    04A0  F7 E1				 mul	 cx
1   952	    04A2  48				 dec	 ax
1   953	    04A3  8A F0				 mov	 dh , al
1   954	    04A5  80 C6	03			 add	 dh , 3
1   955	    04A8  88 36	04E8r			 mov	 koordMissMy , dh
1   956	    04AC  33 C9				 xor	 cx , cx
1   957	    04AE  8A 0E	06A8r			 mov	 cl , x
1   958	    04B2  33 C0				 xor	 ax , ax
1   959	    04B4  B8 0003			 mov	 ax , 3
1   960	    04B7  F7 E1				 mul	 cx
1   961	    04B9  2D 0002			 sub	 ax , 2
1   962	    04BC  8A D0				 mov	 dl , al
1   963
1   964	    04BE  8A 36	04E8r			 mov	 dh , koordMissMy
1   965	    04C2  B7 00				 mov	 bh , 0
1   966	    04C4  B3 3A				 mov	 bl , 00111010b
1   967	    04C6  B9 0001			 mov	 cx , 1
1   968	    04C9  B4 02				 mov	 ah , 02h
1   969	    04CB  CD 10				 int	 10h
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 18
23cc.ASM



1   970	    04CD  B9 0001			 mov	 cx , 1
1   971	    04D0  B8 1300			 mov	 ax , 1300h
1   972	    04D3  BD 06DFr			 lea	 bp , miss1
1   973	    04D6  CD 10				 int	 10h
1   974
1   975
1   976	    04D8  B6 18				 mov	 dh , 24
1   977	    04DA  B2 50				 mov	 dl , 80
1   978	    04DC  B4 02				 mov	 ah , 02h
1   979	    04DE  CD 10				 int	 10h
1   980
1   981	    04E0  5D				 pop	 bp
1   982	    04E1  5F				 pop	 di
1   983	    04E2  5E				 pop	 si
1   984	    04E3  5A				 pop	 dx
1   985	    04E4  59				 pop	 cx
1   986	    04E5  5B				 pop	 bx
1   987	    04E6  58				 pop	 ax
1   988
1   989	    04E7  C3				 ret
1   990	    04E8  00			 koordMissMy	 db	 0
1   991	    04E9			 drawMissMy endp
    992					 include calc.asm
1   993	    04E9			 calcPlaceShip proc
1   994					 ;вычисляются координаты при расстановке кораблей т е первое поле
1   995	    04E9  50				 push	 ax
1   996	    04EA  53				 push	 bx
1   997
1   998	    04EB  A1 06D7r			 mov	 ax,x1
1   999	    04EE  B3 18				 mov	 bl,24
1  1000	    04F0  F6 F3				 div	 bl
1  1001	    04F2  FE C0				 inc	 al
1  1002	    04F4  A2 06A8r			 mov	 x,al
1  1003	    04F7  A1 06D9r			 mov	 ax,y1
1  1004	    04FA  B3 0E				 mov	 bl,14
1  1005	    04FC  F6 F3				 div	 bl
1  1006	    04FE  32 E4				 xor	 ah,ah
1  1007	    0500  2C 03				 sub	 al,3
1  1008	    0502  D0 E8				 shr	 al,1
1  1009	    0504  FE C0				 inc	 al
1  1010	    0506  A2 06D6r			 mov	 y,al
1  1011
1  1012	    0509  5B				 pop	 bx
1  1013	    050A  58				 pop	 ax
1  1014	    050B  C3			 ret
1  1015	    050C			 calcPlaceShip endp
1  1016
1  1017	    050C			 calcAttackShip	 proc
1  1018					 ;вычисляются координаты нашей аттаки т	е куда <ы нажали т е второе поле
1  1019	    050C  50				 push	 ax
1  1020	    050D  53				 push	 bx
1  1021
1  1022	    050E  A1 06D7r			 mov	 ax,x1
1  1023	    0511  C1 E8	03			 shr	 ax,3
1  1024	    0514  2D 0025			 sub	 ax,37
1  1025	    0517  B3 03				 mov	 bl,3
1  1026	    0519  F6 F3				 div	 bl
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 19
23cc.ASM



1  1027	    051B  40				 inc	 ax
1  1028	    051C  A2 06A8r			 mov	 x,al
1  1029	    051F  A1 06D9r			 mov	 ax,y1
1  1030	    0522  B3 0E				 mov	 bl,14
1  1031	    0524  F6 F3				 div	 bl
1  1032	    0526  2D 0003			 sub	 ax,3
1  1033					 ;	 mov	 bl,2
1  1034					 ;	 div	 bl
1  1035	    0529  D0 E8				 shr	 al, 1
1  1036	    052B  40				 inc	 ax
1  1037	    052C  A2 06D6r			 mov	 y,al
1  1038
1  1039	    052F  5B				 pop	 bx
1  1040	    0530  58				 pop	 ax
1  1041	    0531  C3			 ret
1  1042	    0532			 calcAttackShip	 endp
1  1043
1  1044
1  1045	    0532			 calcCorrectVert4	 proc
1  1046
1  1047	    0532  50				 push	 ax
1  1048	    0533  53				 push	 bx
1  1049	    0534  51				 push	 cx
1  1050	    0535  52				 push	 dx
1  1051	    0536  56				 push	 si
1  1052	    0537  57				 push	 di
1  1053	    0538  55				 push	 bp
1  1054
1  1055	    0539  33 C9				 xor	 cx , cx
1  1056	    053B  8A 0E	06A8r			 mov	 cl , x
1  1057	    053F  8B F1				 mov	 si , cx
1  1058	    0541  8A 0E	06D6r			 mov	 cl , y
1  1059	    0545  8B E9				 mov	 bp , cx
1  1060	    0547  8A 0E	0429r			 mov	 cl , sizeField
1  1061	    054B  2B CD				 sub	 cx , bp
1  1062	    054D  83 F9	03			 cmp	 cx , 3
1  1063	    0550  7C 59				 jl	 okVert4
1  1064	    0552  33 C9				 xor	 cx , cx
1  1065	    0554  8A 0E	06D6r			 mov	 cl , y
1  1066	    0558  33 D2				 xor	 dx , dx
1  1067	    055A  B8 000C			 mov	 ax , 12
1  1068	    055D  F7 E1				 mul	 cx
1  1069	    055F  8B E8				 mov	 bp , ax
1  1070	    0561  4E				 dec	 si
1  1071	    0562  83 ED	0C			 sub	 bp , 12
1  1072	    0565  33 C0				 xor	 ax , ax
1  1073	    0567  33 C9				 xor	 cx , cx
1  1074	    0569  B9 0006			 mov	 cx , 6
1  1075	    056C			 incsi4:
1  1076	    056C  80 BA	0438r 00		 cmp	 field[bp][si] , 0
1  1077	    0571  75 38				 jne	 okVert4
1  1078	    0573  46				 inc	 si
1  1079	    0574  40				 inc	 ax
1  1080	    0575  3D 0003			 cmp	 ax , 3
1  1081	    0578  7C F2				 jl	 incsi4
1  1082
1  1083	    057A  33 C0				 xor	 ax , ax
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 20
23cc.ASM



1  1084	    057C  83 C5	0C			 add	 bp , 12
1  1085	    057F  83 EE	03			 sub	 si , 3
1  1086	    0582  E2 E8				 loop	 incsi4
1  1087
1  1088	    0584  46				 inc	 si
1  1089	    0585  83 ED	18			 sub	 bp , 24
1  1090	    0588  C7 06	056Cr 0001		 mov	 ok , 1
1  1091	    058E  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1092	    0593  83 ED	0C			 sub	 bp , 12
1  1093	    0596  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1094	    059B  83 ED	0C			 sub	 bp , 12
1  1095	    059E  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1096	    05A3  83 ED	0C			 sub	 bp , 12
1  1097	    05A6  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1098
1  1099	    05AB			 okVert4:
1  1100
1  1101	    05AB  5D				 pop	 bp
1  1102	    05AC  5F				 pop	 di
1  1103	    05AD  5E				 pop	 si
1  1104	    05AE  5A				 pop	 dx
1  1105	    05AF  59				 pop	 cx
1  1106	    05B0  5B				 pop	 bx
1  1107	    05B1  58				 pop	 ax
1  1108
1  1109	    05B2  C3				 ret
1  1110
1  1111	    05B3			 calcCorrectVert4	 endp
1  1112
1  1113	    05B3			 calcCorrectHor4 proc
1  1114
1  1115	    05B3  50				 push	 ax
1  1116	    05B4  53				 push	 bx
1  1117	    05B5  51				 push	 cx
1  1118	    05B6  52				 push	 dx
1  1119	    05B7  56				 push	 si
1  1120	    05B8  57				 push	 di
1  1121	    05B9  55				 push	 bp
1  1122
1  1123	    05BA  33 C9				 xor	 cx , cx
1  1124	    05BC  8A 0E	06A8r			 mov	 cl , x
1  1125	    05C0  8B F1				 mov	 si , cx
1  1126	    05C2  8A 0E	06D6r			 mov	 cl , y
1  1127	    05C6  33 D2				 xor	 dx , dx
1  1128	    05C8  B8 000C			 mov	 ax , 12
1  1129	    05CB  F7 E1				 mul	 cx
1  1130	    05CD  8B E8				 mov	 bp , ax
1  1131	    05CF  8A 0E	0429r			 mov	 cl , sizeField
1  1132	    05D3  2B CE				 sub	 cx , si
1  1133	    05D5  83 F9	03			 cmp	 cx , 3
1  1134	    05D8  7C 42				 jl	 okHor4
1  1135	    05DA  4E				 dec	 si
1  1136	    05DB  83 ED	0C			 sub	 bp , 12
1  1137	    05DE  33 C0				 xor	 ax , ax
1  1138	    05E0  B9 0003			 mov	 cx , 3
1  1139	    05E3			 incsih4:
1  1140	    05E3  80 BA	0438r 00		 cmp	 field[bp][si] , 0
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 21
23cc.ASM



1  1141	    05E8  75 32				 jne	 okHor4
1  1142	    05EA  46				 inc	 si
1  1143	    05EB  40				 inc	 ax
1  1144	    05EC  3D 0006			 cmp	 ax , 6
1  1145	    05EF  7C F2				 jl	 incsih4
1  1146
1  1147	    05F1  33 C0				 xor	 ax , ax
1  1148	    05F3  83 C5	0C			 add	 bp , 12
1  1149	    05F6  83 EE	06			 sub	 si , 6
1  1150	    05F9  E2 E8				 loop	 incsih4
1  1151
1  1152	    05FB  46				 inc	 si
1  1153	    05FC  83 ED	18			 sub	 bp , 24
1  1154	    05FF  C7 06	056Cr 0001		 mov	 ok , 1
1  1155	    0605  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1156	    060A  46				 inc	 si
1  1157	    060B  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1158	    0610  46				 inc	 si
1  1159	    0611  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1160	    0616  46				 inc	 si
1  1161	    0617  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1162
1  1163	    061C			 okHor4:
1  1164
1  1165	    061C  5D				 pop	 bp
1  1166	    061D  5F				 pop	 di
1  1167	    061E  5E				 pop	 si
1  1168	    061F  5A				 pop	 dx
1  1169	    0620  59				 pop	 cx
1  1170	    0621  5B				 pop	 bx
1  1171	    0622  58				 pop	 ax
1  1172
1  1173	    0623  C3				 ret
1  1174
1  1175	    0624			 calcCorrectHor4 endp
1  1176
1  1177	    0624			 calcCorrectHor3 proc
1  1178
1  1179	    0624  50				 push	 ax
1  1180	    0625  53				 push	 bx
1  1181	    0626  51				 push	 cx
1  1182	    0627  52				 push	 dx
1  1183	    0628  56				 push	 si
1  1184	    0629  57				 push	 di
1  1185	    062A  55				 push	 bp
1  1186
1  1187	    062B  33 C9				 xor	 cx , cx
1  1188	    062D  8A 0E	06A8r			 mov	 cl , x
1  1189	    0631  8B F1				 mov	 si , cx
1  1190	    0633  8A 0E	06D6r			 mov	 cl , y
1  1191	    0637  33 D2				 xor	 dx , dx
1  1192	    0639  B8 000C			 mov	 ax , 12
1  1193	    063C  F7 E1				 mul	 cx
1  1194	    063E  8B E8				 mov	 bp , ax
1  1195	    0640  8A 0E	0429r			 mov	 cl , sizeField
1  1196	    0644  2B CE				 sub	 cx , si
1  1197	    0646  83 F9	02			 cmp	 cx , 2
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 22
23cc.ASM



1  1198	    0649  7C 3C				 jl	 okHor3
1  1199	    064B  4E				 dec	 si
1  1200	    064C  83 ED	0C			 sub	 bp , 12
1  1201	    064F  33 C0				 xor	 ax , ax
1  1202	    0651  B9 0003			 mov	 cx , 3
1  1203	    0654			 incsih3:
1  1204	    0654  80 BA	0438r 00		 cmp	 field[bp][si] , 0
1  1205	    0659  75 2C				 jne	 okHor3
1  1206	    065B  46				 inc	 si
1  1207	    065C  40				 inc	 ax
1  1208	    065D  3D 0005			 cmp	 ax , 5
1  1209	    0660  7C F2				 jl	 incsih3
1  1210
1  1211	    0662  33 C0				 xor	 ax , ax
1  1212	    0664  83 C5	0C			 add	 bp , 12
1  1213	    0667  83 EE	05			 sub	 si , 5
1  1214	    066A  E2 E8				 loop	 incsih3
1  1215
1  1216	    066C  46				 inc	 si
1  1217	    066D  83 ED	18			 sub	 bp , 24
1  1218	    0670  C7 06	056Cr 0001		 mov	 ok , 1
1  1219	    0676  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1220	    067B  46				 inc	 si
1  1221	    067C  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1222	    0681  46				 inc	 si
1  1223	    0682  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1224
1  1225	    0687			 okHor3:
1  1226
1  1227	    0687  5D				 pop	 bp
1  1228	    0688  5F				 pop	 di
1  1229	    0689  5E				 pop	 si
1  1230	    068A  5A				 pop	 dx
1  1231	    068B  59				 pop	 cx
1  1232	    068C  5B				 pop	 bx
1  1233	    068D  58				 pop	 ax
1  1234
1  1235	    068E  C3				 ret
1  1236
1  1237	    068F			 calcCorrectHor3 endp
1  1238
1  1239	    068F			 calcCorrectVert3	 proc
1  1240
1  1241	    068F  50				 push	 ax
1  1242	    0690  53				 push	 bx
1  1243	    0691  51				 push	 cx
1  1244	    0692  52				 push	 dx
1  1245	    0693  56				 push	 si
1  1246	    0694  57				 push	 di
1  1247	    0695  55				 push	 bp
1  1248
1  1249	    0696  33 C9				 xor	 cx , cx
1  1250	    0698  8A 0E	06A8r			 mov	 cl , x
1  1251	    069C  8B F1				 mov	 si , cx
1  1252	    069E  8A 0E	06D6r			 mov	 cl , y
1  1253	    06A2  8B E9				 mov	 bp , cx
1  1254	    06A4  8A 0E	0429r			 mov	 cl , sizeField
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 23
23cc.ASM



1  1255	    06A8  2B CD				 sub	 cx , bp
1  1256	    06AA  83 F9	02			 cmp	 cx , 2
1  1257	    06AD  7C 4F				 jl	 okVert3
1  1258	    06AF  33 C9				 xor	 cx , cx
1  1259	    06B1  8A 0E	06D6r			 mov	 cl , y
1  1260	    06B5  33 D2				 xor	 dx , dx
1  1261	    06B7  B8 000C			 mov	 ax , 12
1  1262	    06BA  F7 E1				 mul	 cx
1  1263	    06BC  8B E8				 mov	 bp , ax
1  1264	    06BE  4E				 dec	 si
1  1265	    06BF  83 ED	0C			 sub	 bp , 12
1  1266	    06C2  33 C0				 xor	 ax , ax
1  1267	    06C4  B9 0005			 mov	 cx , 5
1  1268	    06C7			 incsi3:
1  1269	    06C7  80 BA	0438r 00		 cmp	 field[bp][si] , 0
1  1270	    06CC  75 30				 jne	 okVert3
1  1271	    06CE  46				 inc	 si
1  1272	    06CF  40				 inc	 ax
1  1273	    06D0  3D 0003			 cmp	 ax , 3
1  1274	    06D3  7C F2				 jl	 incsi3
1  1275
1  1276	    06D5  33 C0				 xor	 ax , ax
1  1277	    06D7  83 C5	0C			 add	 bp , 12
1  1278	    06DA  83 EE	03			 sub	 si , 3
1  1279	    06DD  E2 E8				 loop	 incsi3
1  1280
1  1281	    06DF  46				 inc	 si
1  1282	    06E0  83 ED	18			 sub	 bp , 24
1  1283	    06E3  C7 06	056Cr 0001		 mov	 ok , 1
1  1284	    06E9  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1285	    06EE  83 ED	0C			 sub	 bp , 12
1  1286	    06F1  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1287	    06F6  83 ED	0C			 sub	 bp , 12
1  1288	    06F9  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1289
1  1290	    06FE			 okVert3:
1  1291
1  1292	    06FE  5D				 pop	 bp
1  1293	    06FF  5F				 pop	 di
1  1294	    0700  5E				 pop	 si
1  1295	    0701  5A				 pop	 dx
1  1296	    0702  59				 pop	 cx
1  1297	    0703  5B				 pop	 bx
1  1298	    0704  58				 pop	 ax
1  1299
1  1300	    0705  C3				 ret
1  1301
1  1302	    0706			 calcCorrectVert3	 endp
1  1303
1  1304	    0706			 calcCorrectVert2	 proc
1  1305
1  1306	    0706  50				 push	 ax
1  1307	    0707  53				 push	 bx
1  1308	    0708  51				 push	 cx
1  1309	    0709  52				 push	 dx
1  1310	    070A  56				 push	 si
1  1311	    070B  57				 push	 di
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 24
23cc.ASM



1  1312	    070C  55				 push	 bp
1  1313
1  1314	    070D  33 C9				 xor	 cx , cx
1  1315	    070F  8A 0E	06A8r			 mov	 cl , x
1  1316	    0713  8B F1				 mov	 si , cx
1  1317	    0715  8A 0E	06D6r			 mov	 cl , y
1  1318	    0719  8B E9				 mov	 bp , cx
1  1319	    071B  8A 0E	0429r			 mov	 cl , sizeField
1  1320	    071F  2B CD				 sub	 cx , bp
1  1321	    0721  83 F9	01			 cmp	 cx , 1
1  1322	    0724  7C 47				 jl	 okVert2
1  1323	    0726  33 C9				 xor	 cx , cx
1  1324	    0728  8A 0E	06D6r			 mov	 cl , y
1  1325	    072C  33 D2				 xor	 dx , dx
1  1326	    072E  B8 000C			 mov	 ax , 12
1  1327	    0731  F7 E1				 mul	 cx
1  1328	    0733  8B E8				 mov	 bp , ax
1  1329	    0735  4E				 dec	 si
1  1330	    0736  83 ED	0C			 sub	 bp , 12
1  1331	    0739  33 C0				 xor	 ax , ax
1  1332	    073B  B9 0004			 mov	 cx , 4
1  1333	    073E			 incsi2:
1  1334	    073E  80 BA	0438r 00		 cmp	 field[bp][si] , 0
1  1335	    0743  75 28				 jne	 okVert2
1  1336	    0745  46				 inc	 si
1  1337	    0746  40				 inc	 ax
1  1338	    0747  3D 0003			 cmp	 ax , 3
1  1339	    074A  7C F2				 jl	 incsi2
1  1340
1  1341	    074C  33 C0				 xor	 ax , ax
1  1342	    074E  83 C5	0C			 add	 bp , 12
1  1343	    0751  83 EE	03			 sub	 si , 3
1  1344	    0754  E2 E8				 loop	 incsi2
1  1345
1  1346	    0756  46				 inc	 si
1  1347	    0757  83 ED	18			 sub	 bp , 24
1  1348	    075A  C7 06	056Cr 0001		 mov	 ok , 1
1  1349	    0760  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1350	    0765  83 ED	0C			 sub	 bp , 12
1  1351	    0768  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1352
1  1353	    076D			 okVert2:
1  1354
1  1355	    076D  5D				 pop	 bp
1  1356	    076E  5F				 pop	 di
1  1357	    076F  5E				 pop	 si
1  1358	    0770  5A				 pop	 dx
1  1359	    0771  59				 pop	 cx
1  1360	    0772  5B				 pop	 bx
1  1361	    0773  58				 pop	 ax
1  1362
1  1363	    0774  C3				 ret
1  1364
1  1365	    0775			 calcCorrectVert2	 endp
1  1366
1  1367	    0775			 calcCorrectHor2 proc
1  1368
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 25
23cc.ASM



1  1369	    0775  50				 push	 ax
1  1370	    0776  53				 push	 bx
1  1371	    0777  51				 push	 cx
1  1372	    0778  52				 push	 dx
1  1373	    0779  56				 push	 si
1  1374	    077A  57				 push	 di
1  1375	    077B  55				 push	 bp
1  1376
1  1377	    077C  33 C9				 xor	 cx , cx
1  1378	    077E  8A 0E	06A8r			 mov	 cl , x
1  1379	    0782  8B F1				 mov	 si , cx
1  1380	    0784  8A 0E	06D6r			 mov	 cl , y
1  1381	    0788  33 D2				 xor	 dx , dx
1  1382	    078A  B8 000C			 mov	 ax , 12
1  1383	    078D  F7 E1				 mul	 cx
1  1384	    078F  8B E8				 mov	 bp , ax
1  1385	    0791  8A 0E	0429r			 mov	 cl , sizeField
1  1386	    0795  2B CE				 sub	 cx , si
1  1387	    0797  83 F9	01			 cmp	 cx , 1
1  1388	    079A  7C 36				 jl	 okHor2
1  1389	    079C  4E				 dec	 si
1  1390	    079D  83 ED	0C			 sub	 bp , 12
1  1391	    07A0  33 C0				 xor	 ax , ax
1  1392	    07A2  B9 0003			 mov	 cx , 3
1  1393	    07A5			 incsi:
1  1394	    07A5  80 BA	0438r 00		 cmp	 field[bp][si] , 0
1  1395	    07AA  75 26				 jne	 okHor2
1  1396	    07AC  46				 inc	 si
1  1397	    07AD  40				 inc	 ax
1  1398	    07AE  3D 0004			 cmp	 ax , 4
1  1399	    07B1  7C F2				 jl	 incsi
1  1400
1  1401	    07B3  33 C0				 xor	 ax , ax
1  1402	    07B5  83 C5	0C			 add	 bp , 12
1  1403	    07B8  83 EE	04			 sub	 si , 4
1  1404	    07BB  E2 E8				 loop	 incsi
1  1405
1  1406	    07BD  46				 inc	 si
1  1407	    07BE  83 ED	18			 sub	 bp , 24
1  1408	    07C1  C7 06	056Cr 0001		 mov	 ok , 1
1  1409	    07C7  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1410	    07CC  46				 inc	 si
1  1411	    07CD  C6 82	0438r 01		 mov	 field[bp][si] , 1
1  1412
1  1413	    07D2			 okHor2:
1  1414
1  1415	    07D2  5D				 pop	 bp
1  1416	    07D3  5F				 pop	 di
1  1417	    07D4  5E				 pop	 si
1  1418	    07D5  5A				 pop	 dx
1  1419	    07D6  59				 pop	 cx
1  1420	    07D7  5B				 pop	 bx
1  1421	    07D8  58				 pop	 ax
1  1422
1  1423	    07D9  C3				 ret
1  1424
1  1425	    07DA			 calcCorrectHor2 endp
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 26
23cc.ASM



1  1426
1  1427	    07DA			 calcCorrect1	 proc
1  1428
1  1429	    07DA  50				 push	 ax
1  1430	    07DB  53				 push	 bx
1  1431	    07DC  51				 push	 cx
1  1432	    07DD  52				 push	 dx
1  1433	    07DE  56				 push	 si
1  1434	    07DF  57				 push	 di
1  1435	    07E0  55				 push	 bp
1  1436
1  1437	    07E1  33 C9				 xor	 cx , cx
1  1438	    07E3  33 F6				 xor	 si , si
1  1439	    07E5  33 DB				 xor	 bx , bx
1  1440	    07E7  8A 0E	06A8r			 mov	 cl , x
1  1441	    07EB  8B F1				 mov	 si , cx
1  1442	    07ED  8A 0E	06D6r			 mov	 cl , y
1  1443	    07F1  33 D2				 xor	 dx , dx
1  1444	    07F3  B8 000C			 mov	 ax , 12
1  1445	    07F6  F7 E1				 mul	 cx
1  1446	    07F8  8B D8				 mov	 bx , ax
1  1447	    07FA  4E				 dec	 si
1  1448	    07FB  83 EB	0C			 sub	 bx , 12
1  1449	    07FE  33 C0				 xor	 ax , ax
1  1450	    0800  B9 0003			 mov	 cx , 3
1  1451	    0803			 decsi:
1  1452	    0803  80 B8	0438r 00		 cmp	 field[bx][si] , 0
1  1453	    0808  75 20				 jne	 ok1
1  1454	    080A  46				 inc	 si
1  1455	    080B  40				 inc	 ax
1  1456	    080C  3D 0003			 cmp	 ax , 3
1  1457	    080F  7C F2				 jl	 decsi
1  1458
1  1459	    0811  33 C0				 xor	 ax , ax
1  1460	    0813  83 C3	0C			 add	 bx , 12
1  1461	    0816  83 EE	03			 sub	 si , 3
1  1462	    0819  E2 E8				 loop	 decsi
1  1463
1  1464	    081B  46				 inc	 si
1  1465	    081C  83 EB	18			 sub	 bx , 24
1  1466	    081F  C7 06	056Cr 0001		 mov	 ok , 1
1  1467	    0825  C6 80	0438r 01		 mov	 field[bx][si] , 1
1  1468	    082A			 ok1:
1  1469
1  1470	    082A  5D				 pop	 bp
1  1471	    082B  5F				 pop	 di
1  1472	    082C  5E				 pop	 si
1  1473	    082D  5A				 pop	 dx
1  1474	    082E  59				 pop	 cx
1  1475	    082F  5B				 pop	 bx
1  1476	    0830  58				 pop	 ax
1  1477
1  1478	    0831  C3				 ret
1  1479	    0832			 calcCorrect1	 endp
1  1480
1  1481	    0832			 calcNShip proc
1  1482					 ;вычисляе< количество клеток зани<ае<ые корaбля<и
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 27
23cc.ASM



1  1483	    0832  50				 push	 ax
1  1484	    0833  53				 push	 bx
1  1485
1  1486	    0834  32 E4				 xor	 ah,ah
1  1487	    0836  A0 0423r			 mov	 al,ship4
1  1488	    0839  B3 04				 mov	 bl,4
1  1489	    083B  F6 E3				 mul	 bl
1  1490	    083D  A2 041Fr			 mov	 Nship,al
1  1491	    0840  33 C0				 xor	 ax,ax
1  1492	    0842  A0 0422r			 mov	 al,ship3
1  1493	    0845  B3 03				 mov	 bl,3
1  1494	    0847  F6 E3				 mul	 bl
1  1495	    0849  00 06	041Fr			 add	 Nship,al
1  1496	    084D  33 C0				 xor	 ax,ax
1  1497	    084F  A0 0421r			 mov	 al,ship2
1  1498	    0852  B3 02				 mov	 bl,2
1  1499	    0854  F6 E3				 mul	 bl
1  1500	    0856  00 06	041Fr			 add	 Nship,al
1  1501	    085A  33 C0				 xor	 ax,ax
1  1502	    085C  A0 0420r			 mov	 al,ship1
1  1503	    085F  00 06	041Fr			 add	 Nship,al
1  1504
1  1505	    0863  59				 pop	 cx
1  1506	    0864  5B				 pop	 bx
1  1507	    0865  C3			 ret
1  1508	    0866			 calcNShip endp
1  1509
1  1510	    0866			 calcStatus	 proc
1  1511	    0866  53				 push	 bx
1  1512	    0867  56				 push	 si
1  1513
1  1514	    0868  8B 1E	09F7r			 mov	 bx,statusy
1  1515	    086C  8B 36	09F5r			 mov	 si,statusx
1  1516	    0870  83 EB	0C			 sub	 bx,12
1  1517	    0873  80 B8	0438r 01		 cmp	 field[bx][si],1
1  1518	    0878  75 08				 jne	 status1
1  1519	    087A  C7 06	09F3r 0000		 mov	 status,0 ; не убил а только попал
1  1520	    0880  EB 05				 jmp	 finstatus
1  1521	    0882			 status1:
1  1522	    0882  80 B8	0438r 02		 cmp	 field[bx][si],2
1  1523
1  1524	    0887			 finstatus:
1  1525	    0887  5E				 pop	 si
1  1526	    0888  5B				 pop	 bx
1  1527	    0889  C3			 ret
1  1528	    088A			 calcStatus	 endp
   1529					 include write.asm
1  1530
1  1531	    088A			 wrClean proc
1  1532	    088A  50				 push	 ax
1  1533	    088B  53				 push	 bx
1  1534	    088C  55				 push	 bp
1  1535
1  1536	    088D  B4 13				 mov	 ah,13h
1  1537	    088F  B0 01				 mov	 al,01h
1  1538	    0891  32 FF				 xor	 bh,bh
1  1539	    0893  BD 0607r			 lea	 bp,clean
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 28
23cc.ASM



1  1540	    0896  CD 10				 int	 10h
1  1541
1  1542	    0898  5D				 pop	 bp
1  1543	    0899  5B				 pop	 bx
1  1544	    089A  58				 pop	 ax
1  1545
1  1546	    089B  C3			 ret
1  1547	    089C			 wrClean endp
1  1548
1  1549
1  1550	    089C			 wrErrMsg	 proc
1  1551
1  1552	    089C  50				 push	 ax
1  1553	    089D  53				 push	 bx
1  1554	    089E  51				 push	 cx
1  1555	    089F  52				 push	 dx
1  1556	    08A0  55				 push	 bp
1  1557
1  1558	    08A1  B4 13				 mov	 ah,13h
1  1559	    08A3  B0 01				 mov	 al,01h
1  1560	    08A5  32 FF				 xor	 bh,bh
1  1561	    08A7  B3 3C				 mov	 bl,00111100b
1  1562	    08A9  B9 000D			 mov	 cx,13
1  1563	    08AC  32 D2				 xor	 dl,dl
1  1564	    08AE  B6 01				 mov	 dh,1
1  1565	    08B0  BD 08BBr			 mov	 bp,offset errmsg
1  1566	    08B3  CD 10				 int	 10h
1  1567
1  1568	    08B5  5D				 pop	 bp
1  1569	    08B6  5A				 pop	 dx
1  1570	    08B7  59				 pop	 cx
1  1571	    08B8  5B				 pop	 bx
1  1572	    08B9  58				 pop	 ax
1  1573
1  1574	    08BA  C3				 ret
1  1575	    08BB  4E 6F	74 20 63 6F 72+	 errmsg	 db 'Not correct!'
   1576		  72 65	63 74 21
1  1577	    08C7			 wrErrMsg	 endp
1  1578
1  1579	    08C7			 wrWin	 proc
1  1580	    08C7  50				 push	 ax
1  1581	    08C8  53				 push	 bx
1  1582	    08C9  51				 push	 cx
1  1583	    08CA  52				 push	 dx
1  1584	    08CB  55				 push	 bp
1  1585
1  1586	    08CC  B4 13				 mov	 ah,13h
1  1587	    08CE  B0 01				 mov	 al,01h
1  1588	    08D0  32 FF				 xor	 bh,bh
1  1589	    08D2  B3 3F				 mov	 bl,00111111b
1  1590	    08D4  B9 001A			 mov	 cx,26
1  1591	    08D7  33 D2				 xor	 dx,dx
1  1592	    08D9  BD 08F7r			 lea	 bp,mWin
1  1593	    08DC  CD 10				 int	 10h
1  1594
1  1595	    08DE  5D				 pop	 bp
1  1596	    08DF  5A				 pop	 dx
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 29
23cc.ASM



1  1597	    08E0  59				 pop	 cx
1  1598	    08E1  5B				 pop	 bx
1  1599	    08E2  58				 pop	 ax
1  1600
1  1601	    08E3  C3			 ret
1  1602	    08E4			 wrWin	 endp
1  1603
1  1604	    08E4			 wrWon	 proc
1  1605	    08E4  50				 push	 ax
1  1606	    08E5  53				 push	 bx
1  1607	    08E6  51				 push	 cx
1  1608	    08E7  52				 push	 dx
1  1609	    08E8  55				 push	 bp
1  1610
1  1611	    08E9  B4 13				 mov	 ah,13h
1  1612	    08EB  B0 01				 mov	 al,01h
1  1613	    08ED  32 FF				 xor	 bh,bh
1  1614	    08EF  B3 3F				 mov	 bl,00111111b
1  1615	    08F1  B9 001A			 mov	 cx,26
1  1616	    08F4  33 D2				 xor	 dx,dx
1  1617	    08F6  BD 0911r			 lea	 bp,mWon
1  1618	    08F9  CD 10				 int	 10h
1  1619
1  1620	    08FB  5D				 pop	 bp
1  1621	    08FC  5A				 pop	 dx
1  1622	    08FD  59				 pop	 cx
1  1623	    08FE  5B				 pop	 bx
1  1624	    08FF  58				 pop	 ax
1  1625
1  1626	    0900  C3			 ret
1  1627	    0901			 wrWon	 endp
1  1628
1  1629
1  1630	    0901			 wrNic	 proc
1  1631
1  1632	    0901  50				 push	 ax
1  1633	    0902  53				 push	 bx
1  1634	    0903  51				 push	 cx
1  1635	    0904  52				 push	 dx
1  1636	    0905  56				 push	 si
1  1637	    0906  57				 push	 di
1  1638	    0907  55				 push	 bp
1  1639
1  1640	    0908  0E				 push	 cs
1  1641	    0909  07				 pop	 es
1  1642	    090A  B4 13				 mov	 ah,13h
1  1643	    090C  B0 01				 mov	 al,01h
1  1644	    090E  32 FF				 xor	 bh,bh
1  1645	    0910  B3 1C				 mov	 bl,00011100b
1  1646	    0912  B9 000A			 mov	 cx,10
1  1647	    0915  BA 0200			 mov	 dx,200h
1  1648	    0918  BD 056Er			 lea	 bp,myName
1  1649	    091B  CD 10				 int	 10h
1  1650
1  1651	    091D  B2 25				 mov	 dl,37
1  1652	    091F  BD 0578r			 lea	 bp,opName
1  1653	    0922  CD 10				 int	 10h
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 30
23cc.ASM



1  1654
1  1655	    0924  5D				 pop	 bp
1  1656	    0925  5F				 pop	 di
1  1657	    0926  5E				 pop	 si
1  1658	    0927  5A				 pop	 dx
1  1659	    0928  59				 pop	 cx
1  1660	    0929  5B				 pop	 bx
1  1661	    092A  58				 pop	 ax
1  1662
1  1663	    092B  C3				 ret
1  1664	    092C			 wrNic	 endp
1  1665
1  1666	    092C			 vvodNic proc
1  1667	    092C  50				 push	 ax
1  1668	    092D  53				 push	 bx
1  1669	    092E  51				 push	 cx
1  1670	    092F  52				 push	 dx
1  1671	    0930  56				 push	 si
1  1672	    0931  57				 push	 di
1  1673	    0932  55				 push	 bp
1  1674
1  1675	    0933  B4 13				 mov	 ah,13h
1  1676	    0935  B0 01				 mov	 al,01h
1  1677	    0937  B7 00				 mov	 bh,0
1  1678	    0939  B3 0C				 mov	 bl,00001100b
1  1679	    093B  B9 001D			 mov	 cx,29
1  1680	    093E  33 D2				 xor	 dx,dx
1  1681	    0940  83 3E	0582r 01		 cmp	 master,1
1  1682	    0945  74 02				 je	 wwww
1  1683	    0947  0E				 push	 cs
1  1684	    0948  07				 pop	 es
1  1685	    0949			 wwww:
1  1686	    0949  BD 0852r			 lea	 bp,msgNic
1  1687	    094C  CD 10				 int	 10h
1  1688	    094E  33 F6				 xor	 si,si
1  1689	    0950			 writeNic:
1  1690	    0950  32 E4				 xor	 ah,ah
1  1691	    0952  CD 16				 int	 16h
1  1692	    0954  80 FC	1C			 cmp	 ah,1ch
1  1693	    0957  74 1F				 je	 cancle
1  1694	    0959  50				 push	 ax
1  1695	    095A  B4 09				 mov	 ah,09h
1  1696	    095C  B9 0001			 mov	 cx,1
1  1697	    095F  CD 10				 int	 10h
1  1698	    0961  58				 pop	 ax
1  1699	    0962  88 84	056Er			 mov	 myName[si],al
1  1700	    0966  46				 inc	 si
1  1701	    0967  83 FE	0B			 cmp	 si,11
1  1702	    096A  74 0C				 je	 cancle
1  1703	    096C  B4 03				 mov	 ah,03h
1  1704	    096E  CD 10				 int	 10h
1  1705	    0970  FE C2				 inc	 dl
1  1706	    0972  B4 02				 mov	 ah,02h
1  1707	    0974  CD 10				 int	 10h
1  1708	    0976  EB D8				 jmp	 writeNic
1  1709	    0978			 cancle:
1  1710	    0978  33 D2				 xor	 dx,dx
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 31
23cc.ASM



1  1711	    097A  B9 003C			 mov	 cx,60
1  1712	    097D  B4 13				 mov	 ah,13h
1  1713	    097F  B0 01				 mov	 al,01h
1  1714	    0981  BD 0607r			 lea	 bp,clean
1  1715	    0984			 _ccl2:
1  1716	    0984  CD 10				 int	 10h
1  1717	    0986  FE C6				 inc	 dh
1  1718	    0988  80 FE	06			 cmp	 dh,6
1  1719	    098B  75 F7				 jne	 _ccl2
1  1720
1  1721	    098D  5D				 pop	 bp
1  1722	    098E  5F				 pop	 di
1  1723	    098F  5E				 pop	 si
1  1724	    0990  5A				 pop	 dx
1  1725	    0991  59				 pop	 cx
1  1726	    0992  5B				 pop	 bx
1  1727	    0993  58				 pop	 ax
1  1728
1  1729	    0994  C3				 ret
1  1730	    0995			 vvodNic endp
1  1731
1  1732	    0995			 wrInf	 proc
1  1733
1  1734	    0995  50				 push	 ax
1  1735	    0996  53				 push	 bx
1  1736	    0997  51				 push	 cx
1  1737	    0998  52				 push	 dx
1  1738	    0999  56				 push	 si
1  1739	    099A  57				 push	 di
1  1740	    099B  55				 push	 bp
1  1741
1  1742	    099C  A0 0423r			 mov	 al,ship4
1  1743	    099F  04 30				 add	 al,'0'
1  1744	    09A1  A2 09DCr			 mov	 hh+4,al
1  1745	    09A4  A0 0422r			 mov	 al,ship3
1  1746	    09A7  04 30				 add	 al,'0'
1  1747	    09A9  A2 09E3r			 mov	 hh+11,al
1  1748	    09AC  A0 0421r			 mov	 al,ship2
1  1749	    09AF  04 30				 add	 al,'0'
1  1750	    09B1  A2 09EAr			 mov	 hh+18,al
1  1751	    09B4  A0 0420r			 mov	 al,ship1
1  1752	    09B7  3C 0A				 cmp	 al,0ah
1  1753	    09B9  75 07				 jne	 _noah
1  1754	    09BB  B0 61				 mov	 al,'a'
1  1755	    09BD  A2 09F1r			 mov	 hh+25,al
1  1756	    09C0  EB 05				 jmp	 _z
1  1757	    09C2			 _noah:
1  1758	    09C2  04 30				 add	 al,'0'
1  1759	    09C4  A2 09F1r			 mov	 hh+25,al
1  1760	    09C7			 _z:
1  1761					 ;	 mov	 cx,27
1  1762					 ;	 xor	 dx,dx
1  1763					 ;	 xor	 bh,bh
1  1764					 ;	 mov	 bl,4
1  1765					 ;	 mov	 al,01h
1  1766					 ;	 mov	 ah,13h
1  1767					 ;	 lea	 bp,hh
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 32
23cc.ASM



1  1768					 ;	 int	 10h
1  1769	    09C7  33 C0				 xor	 ax,ax
1  1770	    09C9  B4 09				 mov	 ah,09h
1  1771	    09CB  BA 09D8r			 mov	 dx,offset hh
1  1772	    09CE  CD 21				 int	 21h
1  1773
1  1774	    09D0  5D				 pop	 bp
1  1775	    09D1  5F				 pop	 di
1  1776	    09D2  5E				 pop	 si
1  1777	    09D3  5A				 pop	 dx
1  1778	    09D4  59				 pop	 cx
1  1779	    09D5  5B				 pop	 bx
1  1780	    09D6  58				 pop	 ax
1  1781
1  1782	    09D7  C3				 ret
1  1783	    09D8  34 78	3A 3D 20 20 20+	 hh	 db	 '4x:=	 3x:=	2x:=   1x:=  ',0dh,0ah,24h
   1784		  33 78	3A 3D 20 20 20+
   1785		  32 78	3A 3D 20 20 20+
   1786		  31 78	3A 3D 20 20 0D+
   1787		  0A 24
1  1788	    09F6			 wrInf	 endp
1  1789
1  1790	    09F6			 wrWait	 proc
1  1791
1  1792	    09F6  50				 push	 ax
1  1793	    09F7  53				 push	 bx
1  1794	    09F8  51				 push	 cx
1  1795	    09F9  52				 push	 dx
1  1796	    09FA  55				 push	 bp
1  1797
1  1798	    09FB  B4 13				 mov	 ah,13h
1  1799	    09FD  B0 01				 mov	 al,01h
1  1800	    09FF  8A FF				 mov	 bh,bh
1  1801	    0A01  B3 3F				 mov	 bl,00111111b
1  1802	    0A03  B9 0032			 mov	 cx,50
1  1803	    0A06  33 D2				 xor	 dx,dx
1  1804	    0A08  BD 0A13r			 lea	 bp,wtm
1  1805	    0A0B  CD 10				 int	 10h
1  1806
1  1807
1  1808	    0A0D  5D				 pop	 bp
1  1809	    0A0E  5A				 pop	 dx
1  1810	    0A0F  59				 pop	 cx
1  1811	    0A10  5B				 pop	 bx
1  1812	    0A11  58				 pop	 ax
1  1813
1  1814	    0A12  C3				 ret
1  1815	    0A13  57 61	61 69 74 20 77+	 wtm	 db	 'Waait	wait...						'
   1816		  61 69	74 2E 2E 2E 20+
   1817		  20 20	20 20 20 20 20+
   1818		  20 20	20 20 20 20 20+
   1819		  20 20	20 20 20 20 20+
   1820		  20 20	20 20 20 20 20+
   1821		  20 20	20 20 20 20 20+
   1822		  20 20	20 20 20
1  1823	    0A49			 wrWait	 endp
1  1824
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 33
23cc.ASM



1  1825	    0A49			 wrHod	 proc
1  1826
1  1827	    0A49  50				 push	 ax
1  1828	    0A4A  53				 push	 bx
1  1829	    0A4B  51				 push	 cx
1  1830	    0A4C  52				 push	 dx
1  1831	    0A4D  55				 push	 bp
1  1832	    0A4E  16				 push	 ss
1  1833	    0A4F  1E				 push	 ds
1  1834	    0A50  56				 push	 si
1  1835	    0A51  57				 push	 di
1  1836
1  1837	    0A52  B4 13				 mov	 ah,13h
1  1838	    0A54  B0 01				 mov	 al,01h
1  1839	    0A56  32 FF				 xor	 bh,bh
1  1840	    0A58  B3 3F				 mov	 bl,00111111b
1  1841	    0A5A  B9 0032			 mov	 cx,50
1  1842	    0A5D  33 D2				 xor	 dx,dx
1  1843
1  1844	    0A5F  BD 0A6Er			 lea	 bp,gggggg
1  1845	    0A62  CD 10				 int	 10h
1  1846
1  1847	    0A64  5F				 pop	 di
1  1848	    0A65  5E				 pop	 si
1  1849	    0A66  1F				 pop	 ds
1  1850	    0A67  17				 pop	 ss
1  1851	    0A68  5D				 pop	 bp
1  1852	    0A69  5A				 pop	 dx
1  1853	    0A6A  59				 pop	 cx
1  1854	    0A6B  5B				 pop	 bx
1  1855	    0A6C  58				 pop	 ax
1  1856
1  1857	    0A6D  C3			 ret
1  1858	    0A6E  59 6F	75 72 20 68 6F+	 gggggg	 db	 'Your hod  ) Cmn)					    '
   1859		  64 20	20 29 20 43 6D+
   1860		  6E 29	20 20 20 20 20+
   1861		  20 20	20 20 20 20 20+
   1862		  20 20	20 20 20 20 20+
   1863		  20 20	20 20 20 20 20+
   1864		  20 20	20 20 20 20 20+
   1865		  20 20	20 20 20 20 20+
   1866		  20 20
1  1867
1  1868	    0AA8			 wrHod	 endp
1  1869
1  1870
   1871
   1872					 ;=============Timer===========;
   1873	    0AA8			 Int_08h:
   1874	    0AA8  FA				 cli
   1875	    0AA9  FF 06	05D2r			 inc	 ScountIn
   1876	    0AAD  83 3E	05D2r 3C		 cmp ScountIn,60
   1877	    0AB2  7E 0C				 jle	 nofin
   1878	    0AB4  C7 06	05E0r 0001		 mov	 Sflagerr,1
   1879	    0ABA  C7 06	05D2r 0000		 mov	 ScountIn,0
   1880	    0AC0			 nofin:
   1881	    0AC0  EA				 db 0EAh
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 34
23cc.ASM



   1882	    0AC1  0000 0000		 Int_08h_old	 dw	 0,0
   1883					 ;=================================================
   1884
   1885
   1886
   1887					 ;=========Start==========;
   1888	    0AC5			 _1:
   1889	    0AC5  E8 0988			 call	 _intset
   1890	    0AC8  E8 09A2			 call	 _vset
   1891	    0ACB  E8 096C			 call	 _ms
   1892	    0ACE  E8 F67D			 call	 Ser_Ini
   1893
   1894	    0AD1  E8 FE58			 call	 vvodNic
   1895					 ;#############Slave
   1896					 ;	 mov	 ah,09h
   1897					 ;	 xor	 al,al
   1898					 ;	 mov	 dx,offset str11
   1899					 ;	 int	 21h
   1900
   1901	    0AD4			 _Slave0:
   1902	    0AD4  E8 F7B9			 call	 Get_Chr
   1903	    0AD7  73 FB				 jnc	 _Slave0
   1904	    0AD9  3C AA				 cmp	 al,0aah
   1905	    0ADB  75 0D				 jne	 _Slave_a1
   1906
   1907	    0ADD  C7 06	05D2r 0000		 mov	 ScountIn,0
   1908	    0AE3  B0 01				 mov	 al,01h
   1909	    0AE5  E8 F781			 call	 Out_Chr
   1910	    0AE8  EB EA				 jmp	 _Slave0
   1911	    0AEA			 _Slave_a1:
   1912	    0AEA  3C A1				 cmp	 al,0a1h
   1913	    0AEC  75 E6				 jne	 _Slave0
   1914	    0AEE  C7 06	05D2r 0000		 mov	 ScountIn,0
   1915	    0AF4  B0 1A				 mov	 al,1ah
   1916	    0AF6  E8 F770			 call	 Out_Chr
   1917
   1918	    0AF9			 _Slave1:
   1919	    0AF9  80 3E	09FFr 00		 cmp	 state,0
   1920	    0AFE  74 53				 je	 _Slave2and1
   1921	    0B00  83 3E	0995r 01		 cmp	 okFin,1
   1922	    0B05  75 08				 jne	 _Slave21
   1923	    0B07  B0 A6				 mov	 al,0a6h
   1924	    0B09  E8 F75D			 call	 Out_Chr
   1925	    0B0C  E9 077B			 jmp	 Condition6
   1926	    0B0F			 _Slave21:
   1927	    0B0F  83 3E	0993r 01		 cmp	 okGB,1
   1928	    0B14  75 08				 jne	 _Slave22
   1929	    0B16  B0 A7				 mov	 al,0a7h
   1930	    0B18  E8 F74E			 call	 Out_Chr
   1931	    0B1B  E9 07A6			 jmp	 Condition7
   1932	    0B1E			 _Slave22:
   1933	    0B1E  83 3E	0997r 01		 cmp	 okRS,1
   1934	    0B23  75 08				 jne	 _Slave23
   1935	    0B25  B0 A5				 mov	 al,0a5h
   1936	    0B27  E8 F73F			 call	 Out_Chr
   1937	    0B2A  E9 06D6			 jmp	 Condition5
   1938	    0B2D			 _Slave23:
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 35
23cc.ASM



   1939	    0B2D  80 3E	09FFr 04		 cmp	 state,4
   1940	    0B32  74 1F				 je	 _Slave2and1
   1941	    0B34  83 3E	0999r 01		 cmp	 okRD,1
   1942	    0B39  75 18				 jne	 _Slave2and1
   1943	    0B3B  C6 06	09FCr 01		 mov	 slaveR,1
   1944	    0B40  80 3E	09FFr 03		 cmp	 state,3;нажали	готов но мастер	еще не прислал!	переписать!!!
   1945	    0B45  75 0C				 jne	 _Slave2and1
   1946	    0B47  B0 A4				 mov	 al,0a4h
   1947	    0B49  E8 F71D			 call	 Out_Chr
   1948	    0B4C  C6 06	09FFr 04		 mov	 state,4
   1949					 ;	 wait for master 4a
   1950					 ;	 xor	 ax,ax
   1951					 ;	 mov	 ah,09h
   1952					 ;	 mov	 dx,offset s4a1
   1953					 ;	 int	 21h
   1954
   1955	    0B51  EB A6				 jmp	 _Slave1
   1956						 ;;wait	for 3a and go to the state 3
   1957
   1958
   1959
   1960	    0B53			 _Slave2and1:
   1961	    0B53  E8 F73A			 call	 Get_Chr
   1962	    0B56  72 A1				 jc	 _Slave1
   1963	    0B58  3C AA				 cmp	 al,0aah
   1964	    0B5A  75 0D				 jne	 _Slave3_4a
   1965	    0B5C  C7 06	05D2r 0000		 mov	 ScountIn,0
   1966	    0B62  B0 01				 mov	 al,01h
   1967	    0B64  E8 F702			 call	 Out_Chr
   1968	    0B67  EB 90				 jmp	 _Slave1
   1969	    0B69			 _Slave3_4a:
   1970	    0B69  80 3E	09FFr 04		 cmp	 state,4
   1971	    0B6E  75 0F				 jne	 _Slave2_a3
   1972	    0B70  3C 4A				 cmp	 al,04ah
   1973	    0B72  75 0B				 jne	 _Slave2_a3
   1974	    0B74  C7 06	05D2r 0000		 mov	 ScountIn,0
   1975	    0B7A  33 C0					 xor	 ax,ax
   1976					 ;	 mov	 ah,09h
   1977					 ;	 mov	 dx,offset sa4
   1978					 ;	 int	 21h
   1979	    0B7C  E9 0181			 jmp	 Slave4
   1980	    0B7F			 _Slave2_a3:
   1981	    0B7F  80 3E	09FFr 02		 cmp	 state,2;;;;;;;;;;;;;;;;;;;;;;;;;;!!!!!!!!!!!!!!!!
   1982	    0B84  75 2A				 jne	 _Slave1_a6
   1983	    0B86  3C A3				 cmp	 al,0a3h
   1984	    0B88  75 26				 jne	 _Slave1_a6
   1985	    0B8A  C7 06	05D2r 0000		 mov	 ScountIn,0
   1986	    0B90  B0 3A				 mov	 al,03ah
   1987	    0B92  E8 F6D4			 call	 Out_Chr
   1988
   1989	    0B95  C6 06	09FFr 03		 mov	 state,3
   1990	    0B9A  80 3E	09FCr 01		 cmp	 slaveR,1
   1991	    0B9F  0F 85	FF56			 jne	 _Slave1;wait for ready	slave
   1992	    0BA3  B0 A4				 mov	 al,0a4h
   1993	    0BA5  E8 F6C1			 call	 Out_Chr
   1994	    0BA8  C6 06	09FFr 04		 mov	 state,4
   1995					 ;	 xor	 ax,ax
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 36
23cc.ASM



   1996					 ;	 mov	 ah,09h
   1997					 ;	 mov	 dx,offset s4a2
   1998					 ;	 int	 21h
   1999	    0BAD  E9 FF49			 jmp	 _Slave1;wait for master answer	4a
   2000
   2001	    0BB0			 _Slave1_a6:
   2002	    0BB0  3C A6				 cmp	 al,0a6h
   2003	    0BB2  75 0B				 jne	 _Slave1_a7
   2004	    0BB4  C7 06	05D2r 0000		 mov	 SCountIn,0
   2005	    0BBA  B0 6A				 mov	 al,06ah
   2006	    0BBC  E9 06CB			 jmp	 Condition6
   2007	    0BBF			 _Slave1_a7:
   2008	    0BBF  3C A7				 cmp	 al,0a7h
   2009	    0BC1  75 0B				 jne	 _Slave1_a8
   2010	    0BC3  C7 06	05D2r 0000		 mov	 SCountIn,0
   2011	    0BC9  B0 7A				 mov	 al,07ah
   2012	    0BCB  E9 06F6			 jmp	 Condition7
   2013	    0BCE			 _Slave1_a8:
   2014	    0BCE  3C A8				 cmp	 al,0a8h
   2015	    0BD0  75 0B				 jne	 _Slave1_b1
   2016	    0BD2  C7 06	05D2r 0000		 mov	 SCountIn,0
   2017	    0BD8  B0 8A				 mov	 al,08ah
   2018	    0BDA  E9 0793			 jmp	 Condition8
   2019	    0BDD			 _Slave1_b1:
   2020	    0BDD  3C B1				 cmp	 al,0b1h
   2021	    0BDF  75 59				 jne	 _Slave12
   2022	    0BE1  C7 06	05D2r 0000		 mov	 ScountIn,0
   2023	    0BE7			 _Slave1_b11:
   2024	    0BE7  E8 F6A6			 call	 Get_Chr
   2025	    0BEA  72 FB				 jc	 _Slave1_b11
   2026	    0BEC  C7 06	05D2r 0000		 mov	 ScountIn,0
   2027	    0BF2  A2 09FEr			 mov	 lgth,al
   2028	    0BF5  33 F6				 xor	 si,si
   2029	    0BF7			 _Slave1_b12:
   2030	    0BF7  E8 F696			 call	 Get_Chr
   2031	    0BFA  72 FB				 jc	 _Slave1_b12
   2032	    0BFC  88 84	0578r			 mov	 opName[si],al
   2033	    0C00  C7 06	05D2r 0000		 mov	 ScountIn,0
   2034	    0C06  46				 inc	 si
   2035	    0C07  83 FE	0A			 cmp	 si,10
   2036	    0C0A  7C 02				 jl	 _Slave1_b13
   2037	    0C0C  EB 08				 jmp	 _Slave1_b14
   2038	    0C0E			 _Slave1_b13:
   2039	    0C0E  8B D6				 mov	 dx,si
   2040	    0C10  3A 16	09FEr			 cmp	 dl,lgth
   2041	    0C14  7C E1				 jl	 _Slave1_b12
   2042	    0C16			 _Slave1_b14:
   2043	    0C16  E8 FCE8			 call	 wrNic
   2044	    0C19  B0 1B				 mov	 al,01bh
   2045
   2046	    0C1B  E8 F64B			 call	 Out_Chr
   2047	    0C1E  B0 B1				 mov	 al,0b1h
   2048	    0C20  E8 F646			 call	 Out_Chr
   2049	    0C23  B0 0A				 mov	 al,10
   2050	    0C25  E8 F641			 call	 Out_Chr
   2051	    0C28  33 F6				 xor	 si,si
   2052	    0C2A			 _Slave11:
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 37
23cc.ASM



   2053	    0C2A  8A 84	056Er			 mov	 al,myName[si]
   2054	    0C2E  E8 F638			 call	 Out_Chr
   2055	    0C31  46				 inc	 si
   2056	    0C32  83 FE	0A			 cmp	 si,10
   2057	    0C35  75 F3				 jne	 _Slave11
   2058	    0C37  E9 FEBF			 jmp	 _Slave1
   2059	    0C3A			 _Slave12:
   2060	    0C3A  3C 1B				 cmp	 al,01bh
   2061	    0C3C  75 09				 jne	 _Slave1_a2
   2062	    0C3E  C7 06	05D2r 0000		 mov	 ScountIn,0
   2063	    0C44  E9 FEB2			 jmp	 _Slave1
   2064	    0C47			 _Slave1_a2:
   2065	    0C47  80 3E	09FFr 00		 cmp	 state,0
   2066	    0C4C  0F 85	FEA9			 jne	 _Slave1
   2067	    0C50  3C A2				 cmp	 al,0a2h
   2068	    0C52  75 0D				 jne	 _Slave1_b2
   2069	    0C54  C7 06	05D2r 0000		 mov	 ScountIn,0
   2070	    0C5A  B0 2A				 mov	 al,02ah
   2071	    0C5C  E8 F60A			 call	 Out_Chr
   2072	    0C5F  EB 73				 jmp	 _Slave2
   2073	    0C61			 _Slave1_b2:
   2074	    0C61  3C B2				 cmp	 al,0b2h
   2075	    0C63  0F 85	FE92			 jne	 _Slave1
   2076	    0C67  C7 06	05D2r 0000		 mov	 ScountIn,0
   2077	    0C6D  33 DB				 xor	 bx,bx
   2078	    0C6F			 _Slave1_b21:
   2079	    0C6F  E8 F61E			 call Get_Chr
   2080	    0C72  72 FB				 jc	 _Slave1_b21
   2081	    0C74  C7 06	05D2r 0000		 mov	 ScountIn,0
   2082	    0C7A  88 87	0558r			 mov	 allPar[bx],al
   2083	    0C7E  43				 inc	 bx
   2084	    0C7F  83 FB	05			 cmp	 bx,5
   2085	    0C82  75 EB				 jne	 _Slave1_b21
   2086
   2087	    0C84  A0 0558r			 mov	 al,allPar[0]
   2088	    0C87  A2 0429r			 mov	 sizeField,al
   2089	    0C8A  A0 0559r			 mov	 al,allPar[1]
   2090	    0C8D  A2 0423r			 mov	 ship4,al
   2091	    0C90  A2 0428r			 mov	 hship4	, al
   2092	    0C93  A0 055Ar			 mov	 al,allPar[2]
   2093	    0C96  A2 0422r			 mov	 ship3,al
   2094	    0C99  A2 0427r			 mov	 hship3	, al
   2095	    0C9C  A0 055Br			 mov	 al,allPar[3]
   2096	    0C9F  A2 0421r			 mov	 ship2,al
   2097	    0CA2  A2 0426r			 mov	 hship2	, al
   2098	    0CA5  A0 055Cr			 mov	 al,allPar[4]
   2099	    0CA8  A2 0420r			 mov	 ship1,al
   2100	    0CAB  A2 0425r			 mov	 hship1	, al
   2101
   2102	    0CAE  B0 2B				 mov	 al,02Bh
   2103	    0CB0  E8 F5B6			 call	 Out_Chr
   2104	    0CB3  A0 0429r			 mov	 al,sizeField
   2105	    0CB6  E8 F5B0			 call	 Out_Chr
   2106	    0CB9  A0 0423r			 mov	 al,ship4
   2107	    0CBC  E8 F5AA			 call	 Out_Chr
   2108	    0CBF  A0 0422r			 mov	 al,ship3
   2109	    0CC2  E8 F5A4			 call	 Out_Chr
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 38
23cc.ASM



   2110	    0CC5  A0 0421r			 mov	 al,ship2
   2111	    0CC8  E8 F59E			 call	 Out_Chr
   2112	    0CCB  A0 0420r			 mov	 al,ship1
   2113	    0CCE  E8 F598			 call	 Out_Chr
   2114	    0CD1  E9 FE25			 jmp	 _Slave1
   2115	    0CD4			 _Slave2:
   2116	    0CD4  E8 F5E0			 call	 drawField
   2117	    0CD7  E8 FCBB			 call	 wrInf
   2118	    0CDA  E8 FB55			 call	 calcNShip
   2119
   2120	    0CDD  A0 041Fr			 mov	 al,Nship
   2121	    0CE0  A2 0424r			 mov	 hNship,al
   2122
   2123	    0CE3  B8 0000			 mov	 ax,0
   2124	    0CE6  CD 33				 int	 33h
   2125
   2126	    0CE8  B8 0001			 mov	 ax,01h
   2127	    0CEB  CD 33				 int	 33h
   2128
   2129	    0CED  B8 000C			 mov	 ax,000Ch
   2130	    0CF0  B9 0002			 mov	 cx,02h
   2131	    0CF3  BA 147Ar			 mov	 dx,offset ObrRasstS
   2132	    0CF6  CD 33				 int 33h
   2133					 ;wait a3 from master and rd
   2134	    0CF8  C6 06	09FFr 02		 mov	 state,2
   2135	    0CFD  E9 FDF9			 jmp	 _Slave1
   2136	    0D00			 Slave4:
   2137	    0D00  B8 0002			 mov	 ax,02h
   2138	    0D03  CD 33				 int 33h
   2139
   2140	    0D05  B8 000C			 mov	 ax,000Ch
   2141	    0D08  B9 0000			 mov	 cx,0
   2142	    0D0B  CD 33				 int 33h
   2143
   2144	    0D0D  B2 46				 mov	 dl,70
   2145	    0D0F  B6 05				 mov	 dh,5
   2146	    0D11  B9 000A			 mov	 cx,10
   2147	    0D14  C6 06	09E9r 00		 mov	 pp,0
   2148	    0D19			 clean4:
   2149	    0D19  B9 000A			 mov	 cx,10
   2150	    0D1C  80 C6	02			 add	 dh,2
   2151	    0D1F  B2 46				 mov	 dl,70
   2152	    0D21  E8 FB66			 call	 wrClean
   2153	    0D24  80 06	09E9r 01		 add	 pp,1
   2154	    0D29  80 3E	09E9r 09		 cmp	 pp,9
   2155	    0D2E  7C E9				 jl	 clean4
   2156
   2157	    0D30  33 C0				 xor ax, ax
   2158	    0D32  CD 33				 int 33h
   2159
   2160	    0D34  B8 000C			 mov	 ax,000Ch
   2161	    0D37  B9 0002			 mov	 cx,0002h
   2162	    0D3A  BA 187Fr			 mov	 dx,offset Game
   2163	    0D3D  CD 33				 int 33h
   2164
   2165	    0D3F  B8 0001			 mov	 ax,01h
   2166	    0D42  CD 33				 int	 33h
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 39
23cc.ASM



   2167					 ;	 call	 wrHod
   2168	    0D44			 SCondition41:
   2169
   2170	    0D44  83 3E	09F9r 01		 cmp	 fyes,1
   2171	    0D49  0F 85	0278			 jne	 Snext40
   2172
   2173	    0D4D  E8 F7BC			 call	 calcAttackShip
   2174	    0D50  B8 0002			 mov	 ax , 02h
   2175	    0D53  CD 33				 int	 33h
   2176
   2177	    0D55  C6 06	0418r 01		 mov	 hidec,1
   2178
   2179	    0D5A  B0 C0				 mov	 al , 0c0h
   2180	    0D5C  E8 F50A			 call	 Out_Chr
   2181	    0D5F  A0 06A8r			 mov	 al , x
   2182	    0D62  E8 F504			 call	 Out_Chr
   2183	    0D65  A0 06D6r			 mov	 al , y
   2184	    0D68  E8 F4FE			 call	 Out_Chr
   2185	    0D6B			 Sansw:
   2186	    0D6B  E8 F522			 call	 Get_Chr
   2187	    0D6E  72 FB				 jc	 Sansw
   2188	    0D70  3C AA				 cmp	 al,0aah
   2189	    0D72  75 0D				 jne	 Sansww
   2190	    0D74  C7 06	05D2r 0000		 mov	 ScountIn,0
   2191	    0D7A  B0 01				 mov	 al,1
   2192	    0D7C  E8 F4EA			 call	 Out_Chr
   2193	    0D7F  EB C3				 jmp	 SCondition41
   2194	    0D81			 Sansww:
   2195	    0D81  C7 06	05D2r 0000		 mov	 ScountIn , 0
   2196	    0D87  3C 0C				 cmp	 al, 00ch
   2197	    0D89  75 30				 jne	 Sansw1
   2198	    0D8B  C7 06	09F1r 0000		 mov	 myHod , 0
   2199	    0D91  C7 06	09F9r 0000		 mov	 fyes ,	0
   2200	    0D97  E8 FC5C			 call	 wrWait
   2201	    0D9A  33 C0				 xor	 ax , ax
   2202	    0D9C  A0 06A8r			 mov	 al , x
   2203	    0D9F  8B F0				 mov	 si , ax
   2204	    0DA1  33 C0				 xor	 ax , ax
   2205	    0DA3  33 DB				 xor	 bx , bx
   2206	    0DA5  33 D2				 xor	 dx , dx
   2207	    0DA7  8A 1E	06D6r			 mov	 bl , y
   2208	    0DAB  B8 000C			 mov	 ax , 12
   2209	    0DAE  F7 E3				 mul	 bx
   2210	    0DB0  C6 80	04C8r 02		 mov	 fieldOp[bx][si] , 2
   2211	    0DB5  E8 F686			 call	 drawMissOpponent
   2212	    0DB8  E9 020A			 jmp	 Snext40
   2213	    0DBB			 Sansw1:
   2214	    0DBB  3C 3C				 cmp	 al, 03ch
   2215	    0DBD  75 12				 jne	 Sansw2
   2216	    0DBF  C7 06	09F1r 0000		 mov	 myHod , 0
   2217	    0DC5  C7 06	09F9r 0000		 mov	 fyes ,	0
   2218	    0DCB  E8 FC28			 call	 wrWait
   2219	    0DCE  E9 01F4			 jmp	 Snext40
   2220	    0DD1			 Sansw2:
   2221	    0DD1  3C 1C				 cmp	 al, 01ch
   2222	    0DD3  0F 85	0098			 jne	 Sansw3
   2223	    0DD7  E8 F611			 call	 drawKillOpponent
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 40
23cc.ASM



   2224	    0DDA  80 2E	041Fr 01		 sub	 Nship , 1
   2225	    0DDF  33 C0				 xor	 ax , ax
   2226	    0DE1  A0 06A8r			 mov	 al , x
   2227	    0DE4  8B F0				 mov	 si , ax
   2228	    0DE6  33 C0				 xor	 ax , ax
   2229	    0DE8  33 DB				 xor	 bx , bx
   2230	    0DEA  33 D2				 xor	 dx , dx
   2231	    0DEC  8A 1E	06D6r			 mov	 bl , y
   2232	    0DF0  B8 000C			 mov	 ax , 12
   2233	    0DF3  F7 E3				 mul	 bx
   2234	    0DF5  8B D8				 mov	 bx , ax
   2235	    0DF7  C6 80	04C8r 01		 mov	 fieldOp[bx][si] , 1
   2236	    0DFC  83 EB	0C			 sub	 bx , 12
   2237	    0DFF  83 EE	01			 sub	 si , 1
   2238	    0E02  80 2E	06A8r 01		 sub	 x , 1
   2239	    0E07  80 2E	06D6r 01		 sub	 y , 1
   2240	    0E0C  80 B8	04C8r 05		 cmp	 fieldOp[bx][si] , 5
   2241	    0E11  74 08				 je	 Sansw21
   2242	    0E13  C6 80	04C8r 02		 mov	 fieldOp[bx][si] , 2
   2243	    0E18  E8 F623			 call	 drawMissOpponent
   2244	    0E1B			 Sansw21:
   2245	    0E1B  83 C6	02			 add	 si , 2
   2246	    0E1E  80 06	06A8r 02		 add	 x , 2
   2247	    0E23  80 B8	04C8r 05		 cmp	 fieldOp[bx][si] , 5
   2248	    0E28  74 08				 je	 Sansw23
   2249	    0E2A  C6 80	04C8r 02		 mov	 fieldOp[bx][si] , 2
   2250	    0E2F  E8 F60C			 call	 drawMissOpponent
   2251	    0E32			 Sansw23:
   2252	    0E32  83 C3	18			 add	 bx , 24
   2253	    0E35  80 06	06D6r 02		 add	 y , 2
   2254	    0E3A  80 B8	04C8r 05		 cmp	 fieldOp[bx][si] , 5
   2255	    0E3F  74 08				 je	 Sansw24
   2256	    0E41  C6 80	04C8r 02		 mov	 fieldOp[bx][si] , 2
   2257	    0E46  E8 F5F5			 call	 drawMissOpponent
   2258	    0E49			 Sansw24:
   2259	    0E49  83 EE	02			 sub	 si , 2
   2260	    0E4C  80 2E	06A8r 02		 sub	 x , 2
   2261	    0E51  80 B8	04C8r 05		 cmp	 fieldOp[bx][si] , 5
   2262	    0E56  74 08				 je	 Shhh
   2263	    0E58  C6 80	04C8r 02		 mov	 fieldOp[bx][si] , 2
   2264	    0E5D  E8 F5DE			 call	 drawMissOpponent
   2265	    0E60			 Shhh:
   2266	    0E60  C7 06	09F1r 0001		 mov	 myHod , 1
   2267	    0E66  C7 06	09F9r 0000		 mov	 fyes ,	0
   2268	    0E6C  E9 0156			 jmp	 Snext40
   2269	    0E6F			 Sansw3:
   2270	    0E6F  3C 2C				 cmp	 al, 02ch
   2271	    0E71  0F 85	FEF6			 jne	 Sansw	 ;хотя по идее это ошибка
   2272	    0E75  E8 F573			 call	 drawKillOpponent
   2273	    0E78  80 2E	041Fr 01		 sub	 Nship , 1
   2274	    0E7D  33 C0				 xor	 ax , ax
   2275	    0E7F  A0 06A8r			 mov	 al , x
   2276	    0E82  8B F0				 mov	 si , ax
   2277	    0E84  33 C0				 xor	 ax , ax
   2278	    0E86  33 DB				 xor	 bx , bx
   2279	    0E88  33 D2				 xor	 dx , dx
   2280	    0E8A  8A 1E	06D6r			 mov	 bl , y
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 41
23cc.ASM



   2281	    0E8E  B8 000C			 mov	 ax , 12
   2282	    0E91  F7 E3				 mul	 bx
   2283	    0E93  8B D8				 mov	 bx , ax
   2284	    0E95  C6 80	04C8r 01		 mov	 fieldOp[bx][si] , 1
   2285	    0E9A  83 EB	0C			 sub	 bx , 12
   2286	    0E9D  83 EE	01			 sub	 si , 1
   2287	    0EA0  80 2E	06A8r 01		 sub	 x , 1
   2288	    0EA5  80 2E	06D6r 01		 sub	 y , 1
   2289	    0EAA  80 B8	04C8r 05		 cmp	 fieldOp[bx][si] , 5
   2290	    0EAF  74 08				 je	 Sansw31
   2291	    0EB1  C6 80	04C8r 02		 mov	 fieldOp[bx][si] , 2
   2292	    0EB6  E8 F585			 call	 drawMissOpponent
   2293	    0EB9			 Sansw31:
   2294	    0EB9  83 C6	02			 add	 si , 2
   2295	    0EBC  80 06	06A8r 02		 add	 x , 2
   2296	    0EC1  80 B8	04C8r 05		 cmp	 fieldOp[bx][si] , 5
   2297	    0EC6  74 08				 je	 Sansw33
   2298	    0EC8  C6 80	04C8r 02		 mov	 fieldOp[bx][si] , 2
   2299	    0ECD  E8 F56E			 call	 drawMissOpponent
   2300	    0ED0			 Sansw33:
   2301	    0ED0  83 C3	18			 add	 bx , 24
   2302	    0ED3  80 06	06D6r 02		 add	 y , 2
   2303	    0ED8  80 B8	04C8r 05		 cmp	 fieldOp[bx][si] , 5
   2304	    0EDD  74 08				 je	 Sansw34
   2305	    0EDF  C6 80	04C8r 02		 mov	 fieldOp[bx][si] , 2
   2306	    0EE4  E8 F557			 call	 drawMissOpponent
   2307	    0EE7			 Sansw34:
   2308	    0EE7  83 EE	02			 sub	 si , 2
   2309	    0EEA  80 2E	06A8r 02		 sub	 x , 2
   2310	    0EEF  80 B8	04C8r 05		 cmp	 fieldOp[bx][si] , 5
   2311	    0EF4  74 08				 je	 Sansw35
   2312	    0EF6  C6 80	04C8r 02		 mov	 fieldOp[bx][si] , 2
   2313	    0EFB  E8 F540			 call	 drawMissOpponent
   2314	    0EFE			 Sansw35:
   2315	    0EFE  83 C6	01			 add	 si , 1
   2316	    0F01  80 06	06A8r 01		 add	 x , 1
   2317	    0F06  83 EB	0C			 sub	 bx , 12
   2318	    0F09  80 2E	06D6r 01		 sub	 y , 1
   2319	    0F0E  8B C6				 mov	 ax , si
   2320	    0F10  A2 09EBr			 mov	 xxx , al
   2321	    0F13  A0 06D6r			 mov	 al , y
   2322	    0F16  A2 09ECr			 mov	 yyy , al
   2323	    0F19			 Sansw36:
   2324	    0F19  83 EB	0C			 sub	 bx , 12
   2325	    0F1C  80 2E	06D6r 01		 sub	 y , 1
   2326	    0F21  80 B8	04C8r 01		 cmp	 fieldOp[bx][si] , 1
   2327	    0F26  74 F1				 je	 Sansw36
   2328	    0F28  80 B8	04C8r 00		 cmp	 fieldOp[bx][si] , 0
   2329	    0F2D  75 08				 jne	 Sansw37
   2330	    0F2F  C6 80	04C8r 02		 mov	 fieldOp[bx][si] , 2
   2331	    0F34  E8 F507			 call	 drawMissOpponent
   2332	    0F37			 Sansw37:
   2333	    0F37  33 C0				 xor	 ax , ax
   2334	    0F39  A0 09ECr			 mov	 al , yyy
   2335	    0F3C  A2 06D6r			 mov	 y , al
   2336	    0F3F  BB 000C			 mov	 bx , 12
   2337	    0F42  F7 E3				 mul	 bx
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 42
23cc.ASM



   2338	    0F44  8B D8				 mov	 bx , ax
   2339	    0F46			 Sansw371:
   2340	    0F46  83 C3	0C			 add	 bx , 12
   2341	    0F49  80 06	06D6r 01		 add	 y , 1
   2342	    0F4E  80 B8	04C8r 01		 cmp	 fieldOp[bx][si] , 1
   2343	    0F53  74 F1				 je	 Sansw371
   2344	    0F55  80 B8	04C8r 00		 cmp	 fieldOp[bx][si] , 0
   2345	    0F5A  75 08				 jne	 Sansw38
   2346	    0F5C  C6 80	04C8r 02		 mov	 fieldOp[bx][si] , 2
   2347	    0F61  E8 F4DA			 call	 drawMissOpponent
   2348	    0F64			 Sansw38:
   2349	    0F64  33 C0				 xor	 ax , ax
   2350	    0F66  A0 09ECr			 mov	 al , yyy
   2351	    0F69  A2 06D6r			 mov	 y , al
   2352	    0F6C  BB 000C			 mov	 bx , 12
   2353	    0F6F  F7 E3				 mul	 bx
   2354	    0F71  8B D8				 mov	 bx , ax
   2355	    0F73			 Sansw381:
   2356	    0F73  83 C6	01			 add	 si , 1
   2357	    0F76  80 06	06A8r 01		 add	 x , 1
   2358	    0F7B  80 B8	04C8r 01		 cmp	 fieldOp[bx][si] , 1
   2359	    0F80  74 F1				 je	 Sansw381
   2360	    0F82  80 B8	04C8r 00		 cmp	 fieldOp[bx][si] , 0
   2361	    0F87  75 08				 jne	 Sansw39
   2362	    0F89  C6 80	04C8r 02		 mov	 fieldOp[bx][si] , 2
   2363	    0F8E  E8 F4AD			 call	 drawMissOpponent
   2364	    0F91			 Sansw39:
   2365	    0F91  33 C0				 xor	 ax , ax
   2366	    0F93  A0 09EBr			 mov	 al , xxx
   2367	    0F96  A2 06A8r			 mov	 x , al
   2368	    0F99  8B F0				 mov	 si , ax
   2369	    0F9B			 Sansw391:
   2370	    0F9B  83 EE	01			 sub	 si , 1
   2371	    0F9E  80 2E	06A8r 01		 sub	 x , 1
   2372	    0FA3  80 B8	04C8r 01		 cmp	 fieldOp[bx][si] , 1
   2373	    0FA8  74 F1				 je	 Sansw391
   2374	    0FAA  80 B8	04C8r 00		 cmp	 fieldOp[bx][si] , 0
   2375	    0FAF  75 08				 jne	 Shhhh
   2376	    0FB1  C6 80	04C8r 02		 mov	 fieldOp[bx][si] , 2
   2377	    0FB6  E8 F485			 call	 drawMissOpponent
   2378	    0FB9			 Shhhh:
   2379	    0FB9  C7 06	09F1r 0001		 mov	 myHod , 1
   2380	    0FBF  C7 06	09F9r 0000		 mov	 fyes ,	0
   2381
   2382	    0FC5			 Snext40:
   2383	    0FC5  80 3E	0418r 01		 cmp	 hidec,1
   2384	    0FCA  75 0A				 jne	 Snext40w
   2385	    0FCC  B8 0001			 mov	 ax,01h
   2386	    0FCF  CD 33				 int	 33h
   2387	    0FD1  C6 06	0418r 00		 mov	 hidec,0
   2388	    0FD6			 Snext40w:
   2389	    0FD6  83 3E	0995r 01		 cmp	 okFin , 1
   2390	    0FDB  75 08				 jne	 next41
   2391	    0FDD  B0 A6				 mov	 al , 0A6h
   2392	    0FDF  E8 F287			 call	 Out_Chr
   2393	    0FE2  E9 02A5			 jmp	 Condition6
   2394	    0FE5			 next41:
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 43
23cc.ASM



   2395	    0FE5  83 3E	0993r 01		 cmp	 okGB ,	1
   2396	    0FEA  75 08				 jne	 next42
   2397	    0FEC  B0 A7				 mov	 al , 0A7h
   2398	    0FEE  E8 F278			 call	 Out_Chr
   2399	    0FF1  E9 02D0			 jmp	 Condition7
   2400	    0FF4			 next42:
   2401	    0FF4  80 3E	041Fr 00		 cmp	 Nship,	0
   2402	    0FF9  75 31				 jne	 next43
   2403	    0FFB  C7 06	09F1r 0000		 mov	 myHod , 0
   2404	    1001  B0 A9				 mov	 al , 0a9h
   2405	    1003  E8 F263			 call	 Out_Chr
   2406	    1006			 next421:
   2407						 ;cmp	 Sflagerr , 1
   2408						 ;je	 SCondition8
   2409	    1006  E8 F287			 call	 Get_Chr
   2410	    1009  72 FB				 jc	 next421
   2411	    100B  3C AA				 cmp	 al,0aah
   2412	    100D  75 0D				 jne	 next421w
   2413	    100F  B0 01				 mov	 al,1
   2414	    1011  C7 06	05D2r 0000		 mov SCountIn,0
   2415	    1017  E8 F24F			 call	 Out_Chr
   2416	    101A  EB EA				 jmp	 next421
   2417	    101C			 next421w:
   2418	    101C  C7 06	05D2r 0000		 mov	 ScountIn , 0
   2419	    1022  3C 9A				 cmp	 al , 9ah
   2420	    1024  75 E0				 jne	 next421 ; хотя	по идее	ошибка
   2421	    1026  E8 F89E			 call	 wrWin
   2422	    1029  E9 0400			 jmp	 Condition9
   2423	    102C			 next43:
   2424	    102C  E8 F261			 call	 Get_Chr
   2425	    102F  0F 82	FD11			 jc	 SCondition41
   2426	    1033  3C AA				 cmp	 al, 0aah
   2427	    1035  75 0E				 jne	 nextS41
   2428	    1037  B0 01				 mov	 al , 01h
   2429	    1039  E8 F22D			 call	 Out_Chr
   2430	    103C  C7 06	05D2r 0000		 mov	 ScountIn , 0
   2431	    1042  E9 FCFF			 jmp	 SCondition41
   2432	    1045			 nextS41:
   2433	    1045  3C A6				 cmp	 al, 0a6h
   2434	    1047  75 0E				 jne	 nextS42
   2435	    1049  C7 06	05D2r 0000		 mov	 ScountIn , 0
   2436	    104F  B0 6A				 mov	 al , 06ah
   2437	    1051  E8 F215			 call	 Out_Chr
   2438	    1054  E9 0233			 jmp	 Condition6
   2439	    1057			 nextS42:
   2440	    1057  3C A7				 cmp	 al, 0a7h
   2441	    1059  75 0E				 jne	 nextS43
   2442	    105B  C7 06	05D2r 0000		 mov	 ScountIn , 0
   2443	    1061  B0 7A				 mov	 al , 07ah
   2444	    1063  E8 F203			 call	 Out_Chr
   2445	    1066  E9 025B			 jmp	 Condition7
   2446	    1069			 nextS43:
   2447	    1069  3C A8				 cmp	 al, 0a8h
   2448	    106B  75 14				 jne	 nextS44
   2449	    106D  C7 06	05D2r 0000		 mov	 ScountIn , 0
   2450	    1073  B0 8A				 mov	 al , 08ah
   2451	    1075  E8 F1F1			 call	 Out_Chr
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 44
23cc.ASM



   2452	    1078  C7 06	09EFr 0001		 mov	 myErr , 1
   2453	    107E  E9 02EF			 jmp	 Condition8
   2454	    1081			 nextS44:
   2455	    1081  3C C0				 cmp	 al, 0c0h
   2456	    1083  0F 85	010D			 jne	 next49
   2457	    1087  C7 06	05D2r 0000		 mov	 ScountIn , 0
   2458	    108D			 next441:
   2459	    108D  E8 F200			 call	 Get_Chr
   2460	    1090  72 FB				 jc	 next441
   2461
   2462	    1092  A2 0000r			 mov	 xx , al
   2463	    1095  A2 06A8r			 mov	 x , al
   2464	    1098  C7 06	05D2r 0000		 mov	 ScountIn , 0
   2465	    109E			 next442:
   2466	    109E  E8 F1EF			 call	 Get_Chr
   2467	    10A1  72 FB				 jc	 next442
   2468
   2469	    10A3  A2 0001r			 mov	 yy , al
   2470	    10A6  A2 06D6r			 mov	 y , al
   2471	    10A9  C7 06	05D2r 0000		 mov	 ScountIn , 0
   2472	    10AF  33 C0				 xor	 ax , ax
   2473	    10B1  33 DB				 xor	 bx , bx
   2474	    10B3  B8 000C			 mov	 ax , 12
   2475	    10B6  8A 1E	0001r			 mov	 bl , yy
   2476	    10BA  F7 E3				 mul	 bx
   2477	    10BC  8B D8				 mov	 bx , ax
   2478	    10BE  33 C0				 xor	 ax , ax
   2479	    10C0  A0 0000r			 mov	 al , xx
   2480	    10C3  8B F0				 mov	 si , ax
   2481	    10C5  80 B8	0438r 00		 cmp	 field[bx][si] , 0
   2482	    10CA  75 19				 jne	 next443
   2483	    10CC  C7 06	09F1r 0001		 mov	 myHod , 1
   2484	    10D2  E8 F974			 call	 wrHod
   2485	    10D5  C6 80	0438r 03		 mov	 field[bx][si] , 3
   2486	    10DA  E8 F3B1			 call	 drawMissMy
   2487	    10DD  B0 0C				 mov	 al , 00ch
   2488	    10DF  E8 F187			 call	 Out_Chr
   2489	    10E2  E9 FC5F			 jmp	 SCondition41
   2490	    10E5			 next443:
   2491	    10E5  80 B8	0438r 02		 cmp	 field[bx][si] , 2
   2492	    10EA  75 11				 jne	 next444
   2493	    10EC  C7 06	09F1r 0001		 mov	 myHod , 1
   2494	    10F2  E8 F954			 call	 wrHod
   2495	    10F5  B0 3C				 mov	 al , 03ch
   2496	    10F7  E8 F16F			 call	 Out_Chr
   2497	    10FA  E9 FC47			 jmp	 SCondition41
   2498	    10FD			 next444:
   2499	    10FD  80 B8	0438r 03		 cmp	 field[bx][si] , 3
   2500	    1102  75 11				 jne	 next445
   2501	    1104  B0 3C				 mov	 al , 03ch
   2502	    1106  E8 F160			 call	 Out_Chr
   2503	    1109  C7 06	09F1r 0001		 mov	 myHod , 1
   2504	    110F  E8 F937			 call	 wrHod
   2505	    1112  E9 FC2F			 jmp	 SCondition41
   2506	    1115			 next445:
   2507	    1115  C6 80	0438r 02		 mov	 field[bx][si] , 2
   2508	    111A  53				 push	 bx
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 45
23cc.ASM



   2509	    111B  B3 3C				 mov	 bl , 00111100b
   2510	    111D  E8 F28A			 call	 drawKillMy
   2511	    1120  5B				 pop	 bx
   2512	    1121			 next4451:
   2513	    1121  83 EB	0C			 sub	 bx , 12
   2514	    1124  80 B8	0438r 01		 cmp	 field[bx][si] , 1
   2515	    1129  74 61				 je	 next48
   2516	    112B  80 B8	0438r 02		 cmp	 field[bx][si] , 2
   2517	    1130  74 EF				 je	 next4451
   2518	    1132			 next446:
   2519	    1132  33 C0				 xor	 ax , ax
   2520	    1134  33 D2				 xor	 dx , dx
   2521	    1136  A0 0001r			 mov	 al , yy
   2522	    1139  BB 000C			 mov	 bx , 12
   2523	    113C  F7 E3				 mul	 bx
   2524	    113E  8B D8				 mov	 bx , ax
   2525	    1140			 next4461:
   2526	    1140  83 C3	0C			 add	 bx , 12
   2527	    1143  80 B8	0438r 01		 cmp	 field[bx][si] , 1
   2528	    1148  74 42				 je	 next48
   2529	    114A  80 B8	0438r 02		 cmp	 field[bx][si] , 2
   2530	    114F  74 EF				 je	 next4461
   2531	    1151			 next447:
   2532	    1151  33 C0				 xor	 ax , ax
   2533	    1153  33 D2				 xor	 dx , dx
   2534	    1155  A0 0001r			 mov	 al , yy
   2535	    1158  BB 000C			 mov	 bx , 12
   2536	    115B  F7 E3				 mul	 bx
   2537	    115D  8B D8				 mov	 bx , ax
   2538	    115F			 next4471:
   2539	    115F  4E				 dec	 si
   2540	    1160  80 B8	0438r 01		 cmp	 field[bx][si] , 1
   2541	    1165  74 25				 je	 next48
   2542	    1167  80 B8	0438r 02		 cmp	 field[bx][si] , 2
   2543	    116C  74 F1				 je	 next4471
   2544	    116E			 next448:
   2545	    116E  33 D2				 xor	 dx , dx
   2546	    1170  A0 0000r			 mov	 al , xx
   2547	    1173  8B F0				 mov	 si , ax
   2548	    1175			 next4481:
   2549	    1175  46				 inc	 si
   2550	    1176  80 B8	0438r 01		 cmp	 field[bx][si] , 1
   2551	    117B  74 0F				 je	 next48
   2552	    117D  80 B8	0438r 02		 cmp	 field[bx][si] , 2
   2553	    1182  74 F1				 je	 next4481
   2554
   2555	    1184  B0 2C				 mov	 al , 2ch
   2556	    1186  E8 F0E0			 call	 Out_Chr
   2557	    1189  E9 FBB8			 jmp	 SCondition41
   2558
   2559	    118C			 next48:
   2560	    118C  B0 1C				 mov	 al , 1ch
   2561	    118E  E8 F0D8			 call	 Out_Chr
   2562	    1191  E9 FBB0			 jmp	 SCondition41
   2563
   2564	    1194			 next49:
   2565	    1194  3C A9				 cmp	 al, 0a9h
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 46
23cc.ASM



   2566	    1196  75 0B				 jne	 next4a
   2567	    1198  B0 9A				 mov	 al , 09ah
   2568	    119A  E8 F0CC			 call	 Out_Chr
   2569	    119D  E8 F744			 call	 wrWon
   2570	    11A0  E9 0289			 jmp	 Condition9
   2571	    11A3			 next4a:
   2572	    11A3  3C B1				 cmp	 al, 0b1h
   2573	    11A5  75 48				 jne	 next4b
   2574	    11A7  C7 06	05D2r 0000		 mov	 ScountIn , 0
   2575	    11AD			 next4a1:
   2576	    11AD  E8 F0E0			 call	 Get_Chr
   2577	    11B0  72 FB				 jc	 next4a1
   2578
   2579	    11B2  C7 06	05D2r 0000		 mov	 ScountIn , 0
   2580	    11B8  A2 09E9r			 mov	 pp , al
   2581	    11BB  BE 0000			 mov	 si , 0
   2582	    11BE			 next4a2:
   2583	    11BE  E8 F0CF			 call	 Get_Chr
   2584	    11C1  72 FB				 jc	 next4a2
   2585
   2586	    11C3  C7 06	05D2r 0000		 mov	 ScountIn , 0
   2587	    11C9  88 84	0578r			 mov	 opName[si] , al
   2588	    11CD  46				 inc	 si
   2589	    11CE  83 FE	0A			 cmp	 si , 10
   2590	    11D1  7C 0A				 jl	 next4a21
   2591	    11D3  E8 F72B			 call	 wrNic
   2592	    11D6  B0 1B				 mov	 al , 01bh
   2593	    11D8  E8 F08E			 call	 Out_Chr
   2594	    11DB  EB 12				 jmp	 next4b
   2595	    11DD			 next4a21:
   2596	    11DD  33 D2				 xor	 dx , dx
   2597	    11DF  8B D6				 mov	 dx , si
   2598	    11E1  3A 16	09E9r			 cmp	 dl , pp
   2599	    11E5  7C D7				 jl	 next4a2
   2600	    11E7  E8 F717			 call	 wrNic
   2601	    11EA  B0 1B				 mov	 al , 01bh
   2602	    11EC  E8 F07A			 call	 Out_Chr
   2603	    11EF			 next4b:
   2604	    11EF  3C 1B				 cmp	 al, 1bh
   2605	    11F1  75 09				 jne	 next4c
   2606	    11F3  C7 06	05D2r 0000		 mov	 ScountIn , 0
   2607	    11F9  E9 FB48			 jmp	 SCondition41
   2608	    11FC			 next4c:
   2609	    11FC  0F 82	FB44			 jc	 SCondition41
   2610	    1200  E9 FB41			 jmp	 SCondition41
   2611
   2612	    1203			 Condition5:
   2613
   2614	    1203  B8 A000			 mov	 ax , 0a000h
   2615	    1206  8E C0				 mov	 es , ax
   2616	    1208  33 C0				 xor	 ax , ax
   2617	    120A  B0 00				 mov	 al , 0h
   2618	    120C  B9 7000			 mov	 cx , 07000h
   2619	    120F  33 FF				 xor	 di , di
   2620	    1211  F3> AA			 rep	 stosb
   2621
   2622	    1213  C7 06	0997r 0000		 mov	 okRS ,	0
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 47
23cc.ASM



   2623	    1219  C7 06	0999r 0000		 mov	 okRD ,	0
   2624	    121F  C7 06	0995r 0000		 mov	 OkFin , 0
   2625	    1225  C7 06	0993r 0000		 mov	 OkGB ,	0
   2626	    122B  C7 06	042Ar 0000		 mov	 fh4 , 0
   2627	    1231  C7 06	042Cr 0000		 mov	 fv4 , 0
   2628	    1237  C7 06	042Er 0000		 mov	 fh3 , 0
   2629	    123D  C7 06	0430r 0000		 mov	 fv3 , 0
   2630	    1243  C7 06	0432r 0000		 mov	 fh2 , 0
   2631	    1249  C7 06	0434r 0000		 mov	 fv2 , 0
   2632	    124F  C7 06	0436r 0000		 mov	 f1 , 0
   2633
   2634	    1255  BB 000C			 mov	 bx , 12
   2635	    1258  BE 0001			 mov	 si , 1
   2636	    125B  B9 0009			 mov	 cx , 9
   2637	    125E			 Scycle1:
   2638	    125E  C6 80	0438r 00		 mov	 field[bx][si] , 0
   2639	    1263  C6 80	04C8r 00		 mov	 fieldOp[bx][si] , 0
   2640	    1268  46				 inc	 si
   2641	    1269  83 FE	0B			 cmp	 si , 11
   2642	    126C  7C F0				 jl	 Scycle1
   2643	    126E  83 EE	0A			 sub	 si , 10
   2644	    1271  83 C3	0C			 add	 bx , 12
   2645	    1274  E2 E8				 loop	 Scycle1
   2646
   2647	    1276  C7 06	05E0r 0000		 mov	 Sflagerr , 0
   2648	    127C  C7 06	05D2r 0000		 mov	 ScountIn , 0
   2649	    1282  C6 06	0418r 00	 mov	 hidec,0
   2650	    1287  E9 F84A			 jmp	 _Slave0
   2651
   2652	    128A			 Condition6:
   2653	    128A  B8 000C			 mov	 ax , 000Ch
   2654	    128D  B9 0000			 mov	 cx , 0000h ; удалить обработчик событий мыши
   2655	    1290  CD 33				 int	 33h
   2656
   2657	    1292  B2 00				 mov	 dl , 0
   2658	    1294  B6 00				 mov	 dh , 0
   2659	    1296  B9 0050			 mov	 cx , 80
   2660	    1299  E8 F5EE			 call	 wrClean
   2661
   2662	    129C  83 3E	0995r 01		 cmp	 okFin , 1
   2663	    12A1  75 05				 jne	 SnoI
   2664	    12A3  BD 0979r			 lea	 bp , msgShur1
   2665	    12A6  EB 03				 jmp	 SII
   2666	    12A8			 SnoI:
   2667	    12A8  BD 095Fr			 lea	 bp , msgShur
   2668	    12AB			 SII:
   2669	    12AB  B4 13				 mov	 ah, 13h
   2670	    12AD  B0 01				 mov	 al , 01h
   2671	    12AF  B7 00				 mov	 bh , 0
   2672	    12B1  B3 3B				 mov	 bl , 00111011b
   2673	    12B3  B9 001A			 mov	 cx , 26
   2674	    12B6  B2 00				 mov	 dl , 0
   2675	    12B8  B6 00				 mov	 dh , 0
   2676	    12BA  CD 10				 int	 10h
   2677	    12BC  C6 06	0418r 00		 mov	 hidec,0
   2678	    12C1  E9 0168			 jmp	 Condition9
   2679
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 48
23cc.ASM



   2680
   2681	    12C4			 Condition7:
   2682	    12C4  B8 000C			 mov	 ax , 000Ch
   2683	    12C7  B9 0000			 mov	 cx , 0000h ; удалить обработчик событий мыши
   2684	    12CA  CD 33				 int	 33h
   2685
   2686	    12CC  83 3E	0993r 01		 cmp	 okGB ,	1
   2687	    12D1  0F 84	0161			 je	 fin
   2688
   2689	    12D5  B8 A000			 mov	 ax , 0a000h
   2690	    12D8  8E C0				 mov	 es , ax
   2691	    12DA  33 C0				 xor	 ax , ax
   2692	    12DC  B0 00				 mov	 al , 0h
   2693	    12DE  B9 7000			 mov	 cx , 07000h
   2694	    12E1  33 FF				 xor	 di , di
   2695	    12E3  F3> AA			 rep	 stosb
   2696
   2697	    12E5  B4 13				 mov	 ah, 13h
   2698	    12E7  B0 01				 mov	 al , 01h
   2699	    12E9  B7 00				 mov	 bh , 0
   2700	    12EB  B3 3B				 mov	 bl , 00111011b
   2701	    12ED  B9 001A			 mov	 cx , 26
   2702	    12F0  B2 00				 mov	 dl , 0
   2703	    12F2  B6 01				 mov	 dh , 1
   2704	    12F4  BD 08DDr			 lea	 bp , mGB
   2705	    12F7  CD 10				 int	 10h
   2706
   2707
   2708
   2709	    12F9  C7 06	0997r 0000		 mov	 okRS ,	0
   2710	    12FF  C7 06	0999r 0000		 mov	 okRD ,	0
   2711	    1305  C7 06	0995r 0000		 mov	 OkFin , 0
   2712	    130B  C7 06	0993r 0000		 mov	 OkGB ,	0
   2713	    1311  C7 06	042Ar 0000		 mov	 fh4 , 0
   2714	    1317  C7 06	042Cr 0000		 mov	 fv4 , 0
   2715	    131D  C7 06	042Er 0000		 mov	 fh3 , 0
   2716	    1323  C7 06	0430r 0000		 mov	 fv3 , 0
   2717	    1329  C7 06	0432r 0000		 mov	 fh2 , 0
   2718	    132F  C7 06	0434r 0000		 mov	 fv2 , 0
   2719	    1335  C7 06	0436r 0000		 mov	 f1 , 0
   2720
   2721	    133B  BB 000C			 mov	 bx , 12
   2722	    133E  BE 0001			 mov	 si , 1
   2723	    1341  B9 0009			 mov	 cx , 9
   2724	    1344			 Scycle2:
   2725	    1344  C6 80	0438r 00		 mov	 field[bx][si] , 0
   2726	    1349  C6 80	04C8r 00		 mov	 fieldOp[bx][si] , 0
   2727	    134E  46				 inc	 si
   2728	    134F  83 FE	0B			 cmp	 si , 11
   2729	    1352  7C F0				 jl	 Scycle2
   2730	    1354  83 EE	0A			 sub	 si , 10
   2731	    1357  83 C3	0C			 add	 bx , 12
   2732	    135A  E2 E8				 loop	 Scycle2
   2733
   2734	    135C  C7 06	05E0r 0000		 mov	 Sflagerr , 0
   2735	    1362  C7 06	05D2r 0000		 mov	 ScountIn , 0
   2736	    1368  C6 06	0418r 00	 mov	 hidec,0
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 49
23cc.ASM



   2737	    136D  E9 F764			 jmp	 _Slave0
   2738
   2739	    1370			 Condition8:
   2740	    1370  B8 000C			 mov	 ax , 000Ch
   2741	    1373  B9 0000			 mov	 cx , 0000h ; удалить обработчик событий мыши
   2742	    1376  CD 33				 int	 33h
   2743
   2744	    1378  83 3E	09EFr 01		 cmp	 myErr , 1
   2745	    137D  74 05				 je	 Smr
   2746	    137F  BD 0945r			 lea	 bp , opErrProt
   2747	    1382  EB 03				 jmp	 Snmr
   2748	    1384			 Smr:
   2749	    1384  BD 092Br			 lea	 bp , myErrProt
   2750	    1387			 Snmr:
   2751	    1387  B4 13				 mov	 ah, 13h
   2752	    1389  B0 01				 mov	 al , 01h
   2753	    138B  B7 00				 mov	 bh , 0
   2754	    138D  B3 3B				 mov	 bl , 00111011b
   2755	    138F  B9 001A			 mov	 cx , 26
   2756	    1392  B2 00				 mov	 dl , 0
   2757	    1394  B6 00				 mov	 dh , 0
   2758	    1396  CD 10				 int	 10h
   2759	    1398			 Sohoho:
   2760	    1398  B8 0003			 mov	 ax , 03h
   2761	    139B  CD 33				 int	 33h
   2762	    139D  80 E3	02			 and	 bl , 0010b
   2763	    13A0  80 FB	02			 cmp	 bl , 0010b
   2764	    13A3  75 F3				 jne	 Sohoho
   2765
   2766	    13A5  B8 A000			 mov	 ax , 0a000h
   2767	    13A8  8E C0				 mov	 es , ax
   2768	    13AA  33 C0				 xor	 ax , ax
   2769	    13AC  B0 00				 mov	 al , 0h
   2770	    13AE  B9 7000			 mov	 cx , 07000h
   2771	    13B1  33 FF				 xor	 di , di
   2772	    13B3  F3> AA			 rep	 stosb
   2773
   2774	    13B5  C7 06	0997r 0000		 mov	 okRS ,	0
   2775	    13BB  C7 06	0999r 0000		 mov	 okRD ,	0
   2776	    13C1  C7 06	0995r 0000		 mov	 OkFin , 0
   2777	    13C7  C7 06	0993r 0000		 mov	 OkGB ,	0
   2778	    13CD  C7 06	042Ar 0000		 mov	 fh4 , 0
   2779	    13D3  C7 06	042Cr 0000		 mov	 fv4 , 0
   2780	    13D9  C7 06	042Er 0000		 mov	 fh3 , 0
   2781	    13DF  C7 06	0430r 0000		 mov	 fv3 , 0
   2782	    13E5  C7 06	0432r 0000		 mov	 fh2 , 0
   2783	    13EB  C7 06	0434r 0000		 mov	 fv2 , 0
   2784	    13F1  C7 06	0436r 0000		 mov	 f1 , 0
   2785
   2786	    13F7  BB 000C			 mov	 bx , 12
   2787	    13FA  BE 0001			 mov	 si , 1
   2788	    13FD  B9 0009			 mov	 cx , 9
   2789	    1400			 Scycle3:
   2790	    1400  C6 80	0438r 00		 mov	 field[bx][si] , 0
   2791	    1405  C6 80	04C8r 00		 mov	 fieldOp[bx][si] , 0
   2792	    140A  46				 inc	 si
   2793	    140B  83 FE	0B			 cmp	 si , 11
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 50
23cc.ASM



   2794	    140E  7C F0				 jl	 Scycle3
   2795	    1410  83 EE	0A			 sub	 si , 10
   2796	    1413  83 C3	0C			 add	 bx , 12
   2797	    1416  E2 E8				 loop	 Scycle3
   2798
   2799	    1418  C7 06	05E0r 0000		 mov	 Sflagerr , 0
   2800	    141E  C7 06	05D2r 0000		 mov	 ScountIn , 0
   2801	    1424  C6 06	0418r 00	 mov	 hidec,0
   2802	    1429  E9 F6A8			 jmp	 _Slave0
   2803
   2804
   2805	    142C			 Condition9:
   2806	    142C  B8 000C			 mov	 ax , 000Ch
   2807	    142F  B9 0000			 mov	 cx , 0000h ; удалить обработчик событий мыши
   2808	    1432  CD 33				 int	 33h
   2809
   2810	    1434  EB 00				 jmp	 fin
   2811					 ;###############++Final and Err States++############;
   2812	    1436			 fin:
   2813	    1436  E8 ED72			 call	 Ser_Rst
   2814					 ;@@exit:
   2815					 ;	 mov	 ax , 2508h
   2816					 ;	 pop	 ds
   2817					 ;	 mov	 dx , word ptr cs:[Int_08h_old]
   2818						 ;int	 21h
   2819						 ;mov	 es , word ptr cs:[2Ch]	;Получим сегмент окружения DOS.
   2820					   ;		 mov	 ah , 49h		;Функция освобождения памяти.
   2821					  ;		 int	 21h
   2822					 ;	 int 20h
   2823
   2824	    1439			 @@d:
   2825	    1439  C3			 ret
   2826
   2827	    143A			 _ms:
   2828	    143A  BE 0082			 mov	 si,0082h
   2829	    143D			 _2:
   2830	    143D  AC				 lodsb
   2831	    143E  46				 inc	 si
   2832	    143F  3C 20				 cmp	 al,20h
   2833	    1441  74 FA				 je	 _2
   2834	    1443  3C 0D				 cmp	 al,0dh
   2835	    1445  74 08				 je	 _d1
   2836	    1447  3C 6D				 cmp	 al,6dh
   2837	    1449  75 04				 jne	 _d1
   2838	    144B  FF 06	0582r			 inc	 master
   2839	    144F			 _d1:
   2840	    144F  C3			 ret
   2841	    1450			 _intset:
   2842	    1450  33 C0				 xor	 ax,ax
   2843	    1452  50				 push	 ax
   2844	    1453  1F				 pop	 ds
   2845	    1454  BE 0020			 mov	 si,8h*4
   2846	    1457  BF 0AC1r			 mov	 di,offset Int_08h_old
   2847	    145A  A5				 movsw
   2848	    145B  A5				 movsw
   2849	    145C  1E				 push	 ds
   2850	    145D  07				 pop	 es
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 51
23cc.ASM



   2851	    145E  0E				 push	 cs
   2852	    145F  1F				 pop	 ds
   2853
   2854	    1460  B8 0AA8r			 mov	 ax,offset Int_08h
   2855	    1463  BF 0020			 mov	 di,8h*4
   2856	    1466  FA				 cli
   2857	    1467  AB				 stosw
   2858	    1468  0E				 push	 cs
   2859	    1469  58				 pop	 ax
   2860	    146A  AB				 stosw
   2861	    146B  FB				 sti
   2862	    146C  C3			 ret
   2863	    146D			 _vset:
   2864	    146D  B0 10				 mov	 al,10h
   2865	    146F  32 E4				 xor	 ah,ah
   2866	    1471  CD 10				 int	 10h
   2867	    1473  8A C4				 mov	 al,ah
   2868	    1475  B4 05				 mov	 ah,05h
   2869	    1477  CD 10				 int	 10h
   2870	    1479  C3			 ret
   2871
   2872					 ;!!!!!!!!!!!!!!
   2873	    147A			 ObrRasstS:
   2874
   2875	    147A  50				 push	 ax
   2876	    147B  53				 push	 bx
   2877	    147C  51				 push	 cx
   2878	    147D  52				 push	 dx
   2879	    147E  56				 push	 si
   2880	    147F  57				 push	 di
   2881	    1480  55				 push	 bp
   2882
   2883	    1481  51				 push	 cx
   2884	    1482  52				 push	 dx
   2885	    1483  B0 01				 mov	 al , 01h
   2886	    1485  B7 00				 mov	 bh , 0
   2887	    1487  B4 13				 mov	 ah , 13h
   2888	    1489  B9 0050			 mov	 cx , 80
   2889	    148C  B2 00				 mov	 dl , 0
   2890	    148E  B6 01				 mov	 dh , 1
   2891	    1490  BD 0607r			 lea	 bp , clean
   2892	    1493  CD 10				 int	 10h
   2893	    1495  5A				 pop	 dx
   2894	    1496  59				 pop	 cx
   2895						 ;mov	 cx , 80
   2896						 ;mov	 dl , 0
   2897						 ;mov	 dh , 1
   2898						 ;call	 wrClean
   2899	    1497  89 0E	06D7r			 mov	 x1 , cx
   2900	    149B  89 16	06D9r			 mov	 y1 , dx
   2901	    149F  3B 0E	0564r			 cmp	 cx , rightBord1f
   2902	    14A3  0F 8F	01C9			 jg	 mm
   2903	    14A7  3B 16	056Ar			 cmp	 dx , topBord
   2904	    14AB  0F 8C	03C3			 jl	 uff
   2905	    14AF  3B 16	0568r			 cmp	 dx , bottomBord
   2906	    14B3  0F 8F	01B9			 jg	 mm
   2907
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 52
23cc.ASM



   2908
   2909	    14B7  89 0E	06D7r			 mov	 x1 , cx
   2910	    14BB  89 16	06D9r			 mov	 y1 , dx
   2911	    14BF  E8 F027			 call	 calcPlaceShip
   2912	    14C2  B8 0002			 mov	 ax , 02h
   2913	    14C5  CD 33				 int	 33h
   2914	    14C7  83 3E	042Ar 01		 cmp	 fh4 , 1
   2915	    14CC  75 40				 jne	 g
   2916	    14CE  C7 06	056Cr 0000		 mov	 ok , 0
   2917	    14D4  E8 F0DC			 call calcCorrectHor4
   2918	    14D7  83 3E	056Cr 01		 cmp	 ok , 1
   2919	    14DC  0F 85	038F			 jne	 uncor
   2920	    14E0  E8 EEC7			 call drawKillMy
   2921	    14E3  80 06	06A8r 01		 add	 x , 1
   2922	    14E8  E8 EEBF			 call drawKillMy
   2923	    14EB  80 06	06A8r 01		 add	 x , 1
   2924	    14F0  E8 EEB7			 call drawKillMy
   2925	    14F3  80 06	06A8r 01		 add	 x , 1
   2926	    14F8  E8 EEAF			 call drawKillMy
   2927	    14FB  C7 06	042Ar 0000		 mov	 fh4 , 0
   2928	    1501  80 2E	0424r 04		 sub	 hNship	, 4
   2929	    1506  80 2E	0428r 01		 sub	 hship4	, 1
   2930	    150B  E9 0364			 jmp	 uff
   2931	    150E			 g:
   2932	    150E  83 3E	042Cr 01		 cmp	 fv4 , 1
   2933	    1513  75 40				 jne	 gg
   2934	    1515  C7 06	056Cr 0000		 mov	 ok , 0
   2935	    151B  E8 F014			 call calcCorrectVert4
   2936	    151E  83 3E	056Cr 01		 cmp	 ok , 1
   2937	    1523  0F 85	0348			 jne	 uncor
   2938	    1527  E8 EE80			 call drawKillMy
   2939	    152A  80 06	06D6r 01		 add	 y , 1
   2940	    152F  E8 EE78			 call drawKillMy
   2941	    1532  80 06	06D6r 01		 add	 y , 1
   2942	    1537  E8 EE70			 call drawKillMy
   2943	    153A  80 06	06D6r 01		 add	 y , 1
   2944	    153F  E8 EE68			 call drawKillMy
   2945	    1542  C7 06	042Cr 0000		 mov	 fv4 , 0
   2946	    1548  80 2E	0424r 04		 sub	 hNship	, 4
   2947	    154D  80 2E	0428r 01		 sub	 hship4	, 1
   2948	    1552  E9 031D			 jmp	 uff
   2949	    1555			 gg:
   2950	    1555  83 3E	042Er 01		 cmp	 fh3 , 1
   2951	    155A  75 38				 jne	 g3
   2952	    155C  C7 06	056Cr 0000		 mov	 ok , 0
   2953	    1562  E8 F0BF			 call calcCorrectHor3
   2954	    1565  83 3E	056Cr 01		 cmp	 ok , 1
   2955	    156A  0F 85	0301			 jne	 uncor
   2956	    156E  E8 EE39			 call drawKillMy
   2957	    1571  80 06	06A8r 01		 add	 x , 1
   2958	    1576  E8 EE31			 call drawKillMy
   2959	    1579  80 06	06A8r 01		 add	 x , 1
   2960	    157E  E8 EE29			 call drawKillMy
   2961	    1581  C7 06	042Er 0000		 mov	 fh3 , 0
   2962	    1587  80 2E	0424r 03		 sub	 hNship	, 3
   2963	    158C  80 2E	0427r 01		 sub	 hship3	, 1
   2964	    1591  E9 02DE			 jmp	 uff
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 53
23cc.ASM



   2965	    1594			 g3:
   2966	    1594  83 3E	0430r 01		 cmp	 fv3 , 1
   2967	    1599  75 38				 jne	 gg3
   2968	    159B  C7 06	056Cr 0000		 mov	 ok , 0
   2969	    15A1  E8 F0EB			 call calcCorrectVert3
   2970	    15A4  83 3E	056Cr 01		 cmp	 ok , 1
   2971	    15A9  0F 85	02C2			 jne	 uncor
   2972	    15AD  E8 EDFA			 call drawKillMy
   2973	    15B0  80 06	06D6r 01		 add	 y , 1
   2974	    15B5  E8 EDF2			 call drawKillMy
   2975	    15B8  80 06	06D6r 01		 add	 y , 1
   2976	    15BD  E8 EDEA			 call drawKillMy
   2977	    15C0  C7 06	0430r 0000		 mov	 fv3 , 0
   2978	    15C6  80 2E	0424r 03		 sub	 hNship	, 3
   2979	    15CB  80 2E	0427r 01		 sub	 hship3	, 1
   2980	    15D0  E9 029F			 jmp	 uff
   2981	    15D3			 gg3:
   2982	    15D3  83 3E	0432r 01		 cmp	 fh2 , 1
   2983	    15D8  75 30				 jne	 g2
   2984	    15DA  C7 06	056Cr 0000		 mov	 ok , 0
   2985	    15E0  E8 F192			 call calcCorrectHor2
   2986	    15E3  83 3E	056Cr 01		 cmp	 ok , 1
   2987	    15E8  0F 85	0283			 jne	 uncor
   2988	    15EC  E8 EDBB			 call drawKillMy
   2989	    15EF  80 06	06A8r 01		 add	 x , 1
   2990	    15F4  E8 EDB3			 call drawKillMy
   2991	    15F7  C7 06	0432r 0000		 mov	 fh2 , 0
   2992	    15FD  80 2E	0424r 02		 sub	 hNship	, 2
   2993	    1602  80 2E	0426r 01		 sub	 hship2	, 1
   2994	    1607  E9 0268			 jmp	 uff
   2995	    160A			 g2:
   2996	    160A  83 3E	0434r 01		 cmp	 fv2 , 1
   2997	    160F  75 30				 jne	 gg2
   2998	    1611  C7 06	056Cr 0000		 mov	 ok , 0
   2999	    1617  E8 F0EC			 call calcCorrectVert2
   3000	    161A  83 3E	056Cr 01		 cmp	 ok , 1
   3001	    161F  0F 85	024C			 jne	 uncor
   3002	    1623  E8 ED84			 call drawKillMy
   3003	    1626  80 06	06D6r 01		 add	 y , 1
   3004	    162B  E8 ED7C			 call drawKillMy
   3005	    162E  C7 06	0434r 0000		 mov	 fv2 , 0
   3006	    1634  80 2E	0424r 02		 sub	 hNship	, 2
   3007	    1639  80 2E	0426r 01		 sub	 hship2	, 1
   3008	    163E  E9 0231			 jmp	 uff
   3009	    1641			 gg2:
   3010	    1641  83 3E	0436r 01		 cmp	 f1 , 1
   3011	    1646  75 28				 jne	 mm
   3012	    1648  C7 06	056Cr 0000		 mov	 ok , 0
   3013	    164E  E8 F189			 call calcCorrect1
   3014	    1651  83 3E	056Cr 01		 cmp	 ok , 1
   3015	    1656  0F 85	0215			 jne	 uncor
   3016	    165A  E8 ED4D			 call drawKillMy
   3017	    165D  C7 06	0436r 0000		 mov	 f1 , 0
   3018	    1663  80 2E	0424r 01		 sub	 hNship	, 1
   3019	    1668  80 2E	0425r 01		 sub	 hship1	, 1
   3020	    166D  E9 0202			 jmp	 uff
   3021	    1670			 mm:
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 54
23cc.ASM



   3022
   3023	    1670  81 3E	06D7r 0230		 cmp	 x1 , 560
   3024	    1676  0F 8C	01F8			 jl	 uff
   3025	    167A  83 3E	06D9r 38		 cmp	 y1 , 56
   3026	    167F  7F 09				 jg	 noGB
   3027	    1681  C7 06	0993r 0001		 mov	 okGB ,	1
   3028	    1687  E9 01E8			 jmp	 uff
   3029	    168A			 noGB:
   3030	    168A  83 3E	06D9r 54		 cmp	 y1 , 84
   3031	    168F  7F 09				 jg	 noFinn
   3032	    1691  C7 06	0995r 0001		 mov	 okFin , 1
   3033	    1697  E9 01D8			 jmp	 uff
   3034	    169A			 noFinn:
   3035	    169A  83 3E	06D9r 70		 cmp	 y1 , 112
   3036	    169F  7F 09				 jg	 noRS
   3037	    16A1  C7 06	0997r 0001		 mov	 okRS ,	1
   3038	    16A7  E9 01C8			 jmp	 uff
   3039	    16AA			 noRS:
   3040	    16AA  81 3E	06D9r 008C		 cmp	 y1 , 140
   3041	    16B0  7F 36				 jg	 no4v
   3042	    16B2  80 3E	0428r 00		 cmp	 hship4	, 0
   3043	    16B7  0F 8E	01B7			 jle	 uff
   3044	    16BB  C7 06	042Cr 0001		 mov	 fv4 , 1
   3045	    16C1  C7 06	042Ar 0000		 mov	 fh4 , 0
   3046	    16C7  C7 06	0430r 0000		 mov	 fv3 , 0
   3047	    16CD  C7 06	042Er 0000		 mov	 fh3 , 0
   3048	    16D3  C7 06	0434r 0000		 mov	 fv2 , 0
   3049	    16D9  C7 06	0432r 0000		 mov	 fh2 , 0
   3050	    16DF  C7 06	0436r 0000		 mov	 f1 , 0
   3051	    16E5  E9 018A			 jmp	 uff
   3052	    16E8			 no4v:
   3053	    16E8  81 3E	06D9r 00A8		 cmp	 y1 , 168
   3054	    16EE  7F 36				 jg	 no4h
   3055	    16F0  80 3E	0428r 00		 cmp	 hship4	, 0
   3056	    16F5  0F 8E	0179			 jle	 uff
   3057	    16F9  C7 06	042Cr 0000		 mov	 fv4 , 0
   3058	    16FF  C7 06	042Ar 0001		 mov	 fh4 , 1
   3059	    1705  C7 06	0430r 0000		 mov	 fv3 , 0
   3060	    170B  C7 06	042Er 0000		 mov	 fh3 , 0
   3061	    1711  C7 06	0434r 0000		 mov	 fv2 , 0
   3062	    1717  C7 06	0432r 0000		 mov	 fh2 , 0
   3063	    171D  C7 06	0436r 0000		 mov	 f1 , 0
   3064	    1723  E9 014C			 jmp	 uff
   3065	    1726			 no4h:
   3066	    1726  81 3E	06D9r 00C4		 cmp	 y1 , 196
   3067	    172C  7F 36				 jg	 no3v
   3068	    172E  80 3E	0427r 00		 cmp	 hship3	, 0
   3069	    1733  0F 8E	013B			 jle	 uff
   3070	    1737  C7 06	042Cr 0000		 mov	 fv4 , 0
   3071	    173D  C7 06	042Ar 0000		 mov	 fh4 , 0
   3072	    1743  C7 06	0430r 0001		 mov	 fv3 , 1
   3073	    1749  C7 06	042Er 0000		 mov	 fh3 , 0
   3074	    174F  C7 06	0434r 0000		 mov	 fv2 , 0
   3075	    1755  C7 06	0432r 0000		 mov	 fh2 , 0
   3076	    175B  C7 06	0436r 0000		 mov	 f1 , 0
   3077	    1761  E9 010E			 jmp	 uff
   3078	    1764			 no3v:
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 55
23cc.ASM



   3079	    1764  81 3E	06D9r 00E0		 cmp	 y1 , 224
   3080	    176A  7F 36				 jg	 no3h
   3081	    176C  80 3E	0427r 00		 cmp	 hship3	, 0
   3082	    1771  0F 8E	00FD			 jle	 uff
   3083	    1775  C7 06	042Cr 0000		 mov	 fv4 , 0
   3084	    177B  C7 06	042Ar 0000		 mov	 fh4 , 0
   3085	    1781  C7 06	0430r 0000		 mov	 fv3 , 0
   3086	    1787  C7 06	042Er 0001		 mov	 fh3 , 1
   3087	    178D  C7 06	0434r 0000		 mov	 fv2 , 0
   3088	    1793  C7 06	0432r 0000		 mov	 fh2 , 0
   3089	    1799  C7 06	0436r 0000		 mov	 f1 , 0
   3090	    179F  E9 00D0			 jmp	 uff
   3091	    17A2			 no3h:
   3092	    17A2  81 3E	06D9r 00FC		 cmp	 y1 , 252
   3093	    17A8  7F 36				 jg	 no2v
   3094	    17AA  80 3E	0426r 00		 cmp	 hship2	, 0
   3095	    17AF  0F 8E	00BF			 jle	 uff
   3096	    17B3  C7 06	042Cr 0000		 mov	 fv4 , 0
   3097	    17B9  C7 06	042Ar 0000		 mov	 fh4 , 0
   3098	    17BF  C7 06	0430r 0000		 mov	 fv3 , 0
   3099	    17C5  C7 06	042Er 0000		 mov	 fh3 , 0
   3100	    17CB  C7 06	0434r 0001		 mov	 fv2 , 1
   3101	    17D1  C7 06	0432r 0000		 mov	 fh2 , 0
   3102	    17D7  C7 06	0436r 0000		 mov	 f1 , 0
   3103	    17DD  E9 0092			 jmp	 uff
   3104	    17E0			 no2v:
   3105	    17E0  81 3E	06D9r 0118		 cmp	 y1 , 280
   3106	    17E6  7F 35				 jg	 no2h
   3107	    17E8  80 3E	0426r 00		 cmp	 hship2	, 0
   3108	    17ED  0F 8E	0081			 jle	 uff
   3109	    17F1  C7 06	042Cr 0000		 mov	 fv4 , 0
   3110	    17F7  C7 06	042Ar 0000		 mov	 fh4 , 0
   3111	    17FD  C7 06	0430r 0000		 mov	 fv3 , 0
   3112	    1803  C7 06	042Er 0000		 mov	 fh3 , 0
   3113	    1809  C7 06	0434r 0000		 mov	 fv2 , 0
   3114	    180F  C7 06	0432r 0001		 mov	 fh2 , 1
   3115	    1815  C7 06	0436r 0000		 mov	 f1 , 0
   3116	    181B  EB 55				 jmp	 uff
   3117	    181D			 no2h:
   3118	    181D  81 3E	06D9r 0134		 cmp	 y1 , 308
   3119	    1823  7F 33				 jg	 no11
   3120	    1825  80 3E	0425r 00		 cmp	 hship1	, 0
   3121	    182A  7E 46				 jle	 uff
   3122	    182C  C7 06	042Cr 0000		 mov	 fv4 , 0
   3123	    1832  C7 06	042Ar 0000		 mov	 fh4 , 0
   3124	    1838  C7 06	0430r 0000		 mov	 fv3 , 0
   3125	    183E  C7 06	042Er 0000		 mov	 fh3 , 0
   3126	    1844  C7 06	0434r 0000		 mov	 fv2 , 0
   3127	    184A  C7 06	0432r 0000		 mov	 fh2 , 0
   3128	    1850  C7 06	0436r 0001		 mov	 f1 , 1
   3129	    1856  EB 1A				 jmp	 uff
   3130	    1858			 no11:
   3131	    1858  81 3E	06D9r 0150		 cmp	 y1 , 336
   3132	    185E  7F 12				 jg	 uff
   3133	    1860  80 3E	0424r 00		 cmp	 hNship	, 0
   3134	    1865  75 08				 jne	 uncor
   3135	    1867  C7 06	0999r 0001		 mov	 okRD ,	1
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 56
23cc.ASM



   3136					 ;	 xor	 ax,ax
   3137					 ;	 mov	 ah,09h
   3138					 ;	 mov	 dx,offset okRDM
   3139					 ;	 int	 21h
   3140	    186D  EB 03				 jmp	 uff
   3141	    186F			 uncor:
   3142	    186F  E8 F02A			 call	 wrErrMsg
   3143	    1872			 uff:
   3144	    1872  B8 0001			 mov	 ax , 01h
   3145	    1875  CD 33				 int	 33h
   3146
   3147	    1877  5D				 pop	 bp
   3148	    1878  5F				 pop	 di
   3149	    1879  5E				 pop	 si
   3150	    187A  5A				 pop	 dx
   3151	    187B  59				 pop	 cx
   3152	    187C  5B				 pop	 bx
   3153	    187D  58				 pop	 ax
   3154	    187E  CB			 retf
   3155
   3156						 ;@@@@@@
   3157	    187F			 Game:
   3158	    187F  1E			 push	 ds
   3159	    1880  0E			 push	 cs
   3160	    1881  1F			 pop		 ds
   3161	    1882  50			 push	 ax
   3162	    1883  53				 push	 bx
   3163	    1884  51				 push	 cx
   3164	    1885  52				 push	 dx
   3165	    1886  56				 push	 si
   3166	    1887  57				 push	 di
   3167	    1888  55				 push	 bp
   3168
   3169	    1889  3B 0E	0562r			 cmp	 cx,rightBord2f
   3170	    188D  7F 2F				 jg	 mmg
   3171	    188F  3B 16	056Ar			 cmp	 dx,topBord
   3172	    1893  7C 49				 jl	 uffg
   3173	    1895  3B 16	0568r			 cmp	 dx,bottomBord
   3174	    1899  7F 23				 jg	 mmg
   3175	    189B  3B 0E	0566r			 cmp	 cx,leftBord2f
   3176	    189F  7C 1D				 jl	 mmg
   3177
   3178	    18A1  83 3E	09F1r 01		 cmp	 myHod,1
   3179	    18A6  75 36				 jne	 uffg
   3180
   3181	    18A8  C7 06	09F9r 0001		 mov	 fyes,1
   3182	    18AE  C7 06	09F1r 0000		 mov	 myHod,0
   3183	    18B4  89 0E	06D7r			 mov	 x1,cx
   3184	    18B8  89 16	06D9r			 mov	 y1,dx
   3185	    18BC  EB 20				 jmp	 uffg
   3186
   3187	    18BE			 mmg:
   3188	    18BE  81 F9	0230			 cmp	 cx,560
   3189	    18C2  7C 1A				 jl	 uffg
   3190	    18C4  83 FA	38			 cmp	 dx,56
   3191	    18C7  7F 08				 jg	 noGBg
   3192	    18C9  C7 06	0993r 0001		 mov	 okGB,1
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 57
23cc.ASM



   3193	    18CF  EB A1				 jmp	 uff
   3194	    18D1			 noGBg:
   3195	    18D1  83 FA	54			 cmp	 dx,84
   3196	    18D4  7F 08				 jg	 uffg
   3197	    18D6  C7 06	0995r 0001		 mov	 okFin,1
   3198	    18DC  EB 00				 jmp	 uffg
   3199	    18DE			 uffg:
   3200	    18DE  B8 0001			 mov	 ax,01h
   3201	    18E1  CD 33				 int	 33h
   3202	    18E3  1F				 pop	 ds
   3203	    18E4  5D				 pop	 bp
   3204	    18E5  5F				 pop	 di
   3205	    18E6  5E				 pop	 si
   3206	    18E7  5A				 pop	 dx
   3207	    18E8  59				 pop	 cx
   3208	    18E9  5B				 pop	 bx
   3209	    18EA  58				 pop	 ax
   3210	    18EB  CB			 retf
   3211					 end	 _start
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 58
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "01/08/11"
??FILENAME			  Text	 "23cc	  "
??TIME				  Text	 "01:43:19"
??VERSION			  Number 030A
@32BIT				  Text	 0
@@0				  Near	 DGROUP:0122
@@1				  Near	 DGROUP:0128
@@2				  Near	 DGROUP:013E
@@D				  Near	 DGROUP:1439
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0F0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 23CC
@INTERFACE			  Text	 00H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
ALLP				  Byte	 DGROUP:055D
ALLPAR				  Byte	 DGROUP:0558
B2				  Byte	 DGROUP:09FD
BOTTOMBORD			  Word	 DGROUP:0568
BUFFER				  Byte	 DGROUP:0103
BUF_SIZE			  Number 0400
CALCATTACKSHIP			  Near	 DGROUP:050C
CALCCORRECT1			  Near	 DGROUP:07DA
CALCCORRECTHOR2			  Near	 DGROUP:0775
CALCCORRECTHOR3			  Near	 DGROUP:0624
CALCCORRECTHOR4			  Near	 DGROUP:05B3
CALCCORRECTVERT2		  Near	 DGROUP:0706
CALCCORRECTVERT3		  Near	 DGROUP:068F
CALCCORRECTVERT4		  Near	 DGROUP:0532
CALCNSHIP			  Near	 DGROUP:0832
CALCPLACESHIP			  Near	 DGROUP:04E9
CALCSTATUS			  Near	 DGROUP:0866
CANCLE				  Near	 DGROUP:0978
CANSENDA			  Byte	 DGROUP:09FB
CLEAN				  Byte	 DGROUP:0607
CLEAN1				  Byte	 DGROUP:0657
CLEAN4				  Near	 DGROUP:0D19
COND5				  Byte	 DGROUP:0584
COND6				  Byte	 DGROUP:0592
COND7				  Byte	 DGROUP:05A0
COND8				  Byte	 DGROUP:05AE
COND81				  Byte	 DGROUP:06A9
COND9				  Byte	 DGROUP:05BC
CONDITION5			  Near	 DGROUP:1203
CONDITION6			  Near	 DGROUP:128A
CONDITION7			  Near	 DGROUP:12C4
CONDITION8			  Near	 DGROUP:1370
CONDITION9			  Near	 DGROUP:142C
CONDONF				  Byte	 DGROUP:06C1
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 59
Symbol Table



COUNT				  Word	 DGROUP:0406
DATABITS			  Byte	 DGROUP:041B
DECSI				  Near	 DGROUP:0803
DIVISOR				  Word	 DGROUP:0419
DRAWFIELD			  Near	 DGROUP:02B7
DRAWKILLMY			  Near	 DGROUP:03AA
DRAWKILLOPPONENT		  Near	 DGROUP:03EB
DRAWMISSMY			  Near	 DGROUP:048E
DRAWMISSOPPONENT		  Near	 DGROUP:043E
ERRMSG				  Byte	 DGROUP:08BB
ERRTIME				  Word	 DGROUP:05DA
EXIT				  Word	 DGROUP:0603
F1				  Word	 DGROUP:0436
FH2				  Word	 DGROUP:0432
FH3				  Word	 DGROUP:042E
FH4				  Word	 DGROUP:042A
FIELD				  Byte	 DGROUP:0438
FIELDOP				  Byte	 DGROUP:04C8
FIN				  Near	 DGROUP:1436
FINSTATUS			  Near	 DGROUP:0887
FV2				  Word	 DGROUP:0434
FV3				  Word	 DGROUP:0430
FV4				  Word	 DGROUP:042C
FVECT				  Byte	 DGROUP:05E2
FYES				  Word	 DGROUP:09F9
G				  Near	 DGROUP:150E
G2				  Near	 DGROUP:160A
G3				  Near	 DGROUP:1594
GAME				  Near	 DGROUP:187F
GET_CHR				  Near	 DGROUP:0290
GG				  Near	 DGROUP:1555
GG2				  Near	 DGROUP:1641
GG3				  Near	 DGROUP:15D3
GGGGGG				  Byte	 DGROUP:0A6E
HH				  Byte	 DGROUP:09D8
HIDEC				  Byte	 DGROUP:0418
HNSHIP				  Byte	 DGROUP:0424
HOR				  Byte	 DGROUP:0605
HSHIP1				  Byte	 DGROUP:0425
HSHIP2				  Byte	 DGROUP:0426
HSHIP3				  Byte	 DGROUP:0427
HSHIP4				  Byte	 DGROUP:0428
INCSI				  Near	 DGROUP:07A5
INCSI2				  Near	 DGROUP:073E
INCSI3				  Near	 DGROUP:06C7
INCSI4				  Near	 DGROUP:056C
INCSIH3				  Near	 DGROUP:0654
INCSIH4				  Near	 DGROUP:05E3
INT_08H				  Near	 DGROUP:0AA8
INT_08H_OLD			  Word	 DGROUP:0AC1
INT_RET				  Near	 DGROUP:0265
INT_STS				  Byte	 DGROUP:0416
IS_INT				  Near	 DGROUP:0210
KILL				  Byte	 DGROUP:03E7
KOORDMISSMY			  Byte	 DGROUP:04E8
KOORDMISSY			  Byte	 DGROUP:048D
KOORDOPX			  Byte	 DGROUP:043C
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 60
Symbol Table



KOORDOPY			  Byte	 DGROUP:043D
KOORDX				  Byte	 DGROUP:03E9
KOORDY				  Byte	 DGROUP:03EA
LEFTBORD2F			  Word	 DGROUP:0566
LGTH				  Byte	 DGROUP:09FE
LLV				  Word	 DGROUP:03A6
LOC_1729			  Near	 DGROUP:0299
LOC_1730			  Near	 DGROUP:02AD
MASTER				  Word	 DGROUP:0582
MCOUNTIN			  Word	 DGROUP:05D0
MCOUNTOUT			  Word	 DGROUP:05D4
MFLAGERR			  Word	 DGROUP:05DC
MGB				  Byte	 DGROUP:08DD
MISS				  Byte	 DGROUP:06DD
MISS1				  Byte	 DGROUP:06DF
MM				  Near	 DGROUP:1670
MMG				  Near	 DGROUP:18BE
MSG1				  Byte	 DGROUP:06E4
MSG11				  Byte	 DGROUP:08D3
MSG2				  Byte	 DGROUP:070F
MSG2H				  Byte	 DGROUP:08C9
MSG2V				  Byte	 DGROUP:08BF
MSG3				  Byte	 DGROUP:07BC
MSG3H				  Byte	 DGROUP:08B5
MSG3V				  Byte	 DGROUP:08AB
MSG4				  Byte	 DGROUP:07F2
MSG4H				  Byte	 DGROUP:08A1
MSG4V				  Byte	 DGROUP:0897
MSG5				  Byte	 DGROUP:0822
MSGFIN				  Byte	 DGROUP:0879
MSGGB				  Byte	 DGROUP:086F
MSGNIC				  Byte	 DGROUP:0852
MSGRD				  Byte	 DGROUP:088D
MSGRS				  Byte	 DGROUP:0883
MSGSHUR				  Byte	 DGROUP:095F
MSGSHUR1			  Byte	 DGROUP:0979
MWIN				  Byte	 DGROUP:08F7
MWON				  Byte	 DGROUP:0911
MYERR				  Word	 DGROUP:09EF
MYERRPROT			  Byte	 DGROUP:092B
MYHOD				  Word	 DGROUP:09F1
MYNAME				  Byte	 DGROUP:056E
NEXT41				  Near	 DGROUP:0FE5
NEXT42				  Near	 DGROUP:0FF4
NEXT421				  Near	 DGROUP:1006
NEXT421W			  Near	 DGROUP:101C
NEXT43				  Near	 DGROUP:102C
NEXT441				  Near	 DGROUP:108D
NEXT442				  Near	 DGROUP:109E
NEXT443				  Near	 DGROUP:10E5
NEXT444				  Near	 DGROUP:10FD
NEXT445				  Near	 DGROUP:1115
NEXT4451			  Near	 DGROUP:1121
NEXT446				  Near	 DGROUP:1132
NEXT4461			  Near	 DGROUP:1140
NEXT447				  Near	 DGROUP:1151
NEXT4471			  Near	 DGROUP:115F
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 61
Symbol Table



NEXT448				  Near	 DGROUP:116E
NEXT4481			  Near	 DGROUP:1175
NEXT48				  Near	 DGROUP:118C
NEXT49				  Near	 DGROUP:1194
NEXT4A				  Near	 DGROUP:11A3
NEXT4A1				  Near	 DGROUP:11AD
NEXT4A2				  Near	 DGROUP:11BE
NEXT4A21			  Near	 DGROUP:11DD
NEXT4B				  Near	 DGROUP:11EF
NEXT4C				  Near	 DGROUP:11FC
NEXTS41				  Near	 DGROUP:1045
NEXTS42				  Near	 DGROUP:1057
NEXTS43				  Near	 DGROUP:1069
NEXTS44				  Near	 DGROUP:1081
NO11				  Near	 DGROUP:1858
NO2H				  Near	 DGROUP:181D
NO2V				  Near	 DGROUP:17E0
NO3H				  Near	 DGROUP:17A2
NO3V				  Near	 DGROUP:1764
NO4H				  Near	 DGROUP:1726
NO4V				  Near	 DGROUP:16E8
NOFIN				  Near	 DGROUP:0AC0
NOFINN				  Near	 DGROUP:169A
NOGB				  Near	 DGROUP:168A
NOGBG				  Near	 DGROUP:18D1
NORS				  Near	 DGROUP:16AA
NO_CHAR				  Near	 DGROUP:021B
NSHIP				  Byte	 DGROUP:041F
OBRRASSTS			  Near	 DGROUP:147A
OK				  Word	 DGROUP:056C
OK1				  Near	 DGROUP:082A
OKFIN				  Word	 DGROUP:0995
OKFINM				  Byte	 DGROUP:040A
OKGB				  Word	 DGROUP:0993
OKHOR2				  Near	 DGROUP:07D2
OKHOR3				  Near	 DGROUP:0687
OKHOR4				  Near	 DGROUP:061C
OKRD				  Word	 DGROUP:0999
OKRDM				  Byte	 DGROUP:0A14
OKRS				  Word	 DGROUP:0997
OKVERT2				  Near	 DGROUP:076D
OKVERT3				  Near	 DGROUP:06FE
OKVERT4				  Near	 DGROUP:05AB
ONE				  Near	 DGROUP:03D2
ONEOP				  Near	 DGROUP:0414
OPERRPROT			  Byte	 DGROUP:0945
OPNAME				  Byte	 DGROUP:0578
OUTPUT				  Near	 DGROUP:0283
OUT_CHR				  Near	 DGROUP:0269
OVERRUN				  Byte	 DGROUP:0417
PAGES				  Byte	 DGROUP:06E3
PARITY				  Byte	 DGROUP:041C
PP				  Byte	 DGROUP:09E9
PRINTS				  Near	 DGROUP:010B
RATE				  Byte	 DGROUP:041E
READ_CHAR			  Near	 DGROUP:021E
RIGHTBORD1F			  Word	 DGROUP:0564
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 62
Symbol Table



RIGHTBORD2F			  Word	 DGROUP:0562
RV				  Word	 DGROUP:03A8
RVV				  Word	 DGROUP:03A4
S4A1				  Byte	 DGROUP:0740
S4A2				  Byte	 DGROUP:0771
SA4				  Byte	 DGROUP:07A2
SANSW				  Near	 DGROUP:0D6B
SANSW1				  Near	 DGROUP:0DBB
SANSW2				  Near	 DGROUP:0DD1
SANSW21				  Near	 DGROUP:0E1B
SANSW23				  Near	 DGROUP:0E32
SANSW24				  Near	 DGROUP:0E49
SANSW3				  Near	 DGROUP:0E6F
SANSW31				  Near	 DGROUP:0EB9
SANSW33				  Near	 DGROUP:0ED0
SANSW34				  Near	 DGROUP:0EE7
SANSW35				  Near	 DGROUP:0EFE
SANSW36				  Near	 DGROUP:0F19
SANSW37				  Near	 DGROUP:0F37
SANSW371			  Near	 DGROUP:0F46
SANSW38				  Near	 DGROUP:0F64
SANSW381			  Near	 DGROUP:0F73
SANSW39				  Near	 DGROUP:0F91
SANSW391			  Near	 DGROUP:0F9B
SANSWW				  Near	 DGROUP:0D81
SAVEMODE			  Byte	 DGROUP:06E2
SAVE_CHAR			  Near	 DGROUP:0236
SAVE_DS				  Word	 DGROUP:0414
SCONDITION41			  Near	 DGROUP:0D44
SCOUNTIN			  Word	 DGROUP:05D2
SCOUNTOUT			  Word	 DGROUP:05D6
SCYCLE1				  Near	 DGROUP:125E
SCYCLE2				  Near	 DGROUP:1344
SCYCLE3				  Near	 DGROUP:1400
SER_CS				  Word	 DGROUP:0412
SER_INI				  Near	 DGROUP:014E
SER_INT				  Far	 DGROUP:01EC
SER_INT_1			  Near	 DGROUP:024D
SER_INT_2			  Near	 DGROUP:0259
SER_INT_3			  Near	 DGROUP:0263
SER_IP				  Word	 DGROUP:0408
SER_RST				  Near	 DGROUP:01AB
SFLAGERR			  Word	 DGROUP:05E0
SFLAGSYN			  Word	 DGROUP:05DE
SHHH				  Near	 DGROUP:0E60
SHHHH				  Near	 DGROUP:0FB9
SHIP1				  Byte	 DGROUP:0420
SHIP2				  Byte	 DGROUP:0421
SHIP3				  Byte	 DGROUP:0422
SHIP4				  Byte	 DGROUP:0423
SII				  Near	 DGROUP:12AB
SIZEFIELD			  Byte	 DGROUP:0429
SLAVE4				  Near	 DGROUP:0D00
SLAVER				  Byte	 DGROUP:09FC
SMR				  Near	 DGROUP:1384
SNEXT40				  Near	 DGROUP:0FC5
SNEXT40W			  Near	 DGROUP:0FD6
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 63
Symbol Table



SNMR				  Near	 DGROUP:1387
SNOI				  Near	 DGROUP:12A8
SOHOHO				  Near	 DGROUP:1398
SOURCE				  Byte	 DGROUP:0002
SRC_PTR				  Word	 DGROUP:0404
SSS				  Byte	 DGROUP:09EA
STAT				  Word	 DGROUP:06DB
STATE				  Byte	 DGROUP:09FF
STATUS				  Word	 DGROUP:09F3
STATUS1				  Near	 DGROUP:0882
STATUSX				  Word	 DGROUP:09F5
STATUSY				  Word	 DGROUP:09F7
STOPBITS			  Byte	 DGROUP:041D
STR0				  Byte	 DGROUP:0A00
STR01				  Byte	 DGROUP:0A6E
STR02				  Byte	 DGROUP:0A87
STR04				  Byte	 DGROUP:0A4C
STR1				  Byte	 DGROUP:0A24
STR11				  Byte	 DGROUP:0A5E
STR2				  Byte	 DGROUP:0A3D
SYNTIME				  Word	 DGROUP:05D8
TOP				  Byte	 DGROUP:099B
TOPBORD				  Word	 DGROUP:056A
UFF				  Near	 DGROUP:1872
UFFG				  Near	 DGROUP:18DE
UNCOR				  Near	 DGROUP:186F
VERT				  Byte	 DGROUP:06A7
VID				  Byte	 DGROUP:06E1
VVODNIC				  Near	 DGROUP:092C
WAIT_FREE			  Near	 DGROUP:01AD
WAIT_LINE			  Near	 DGROUP:0270
WIN				  Word	 DGROUP:05E3
WRCLEAN				  Near	 DGROUP:088A
WRERRMSG			  Near	 DGROUP:089C
WRHOD				  Near	 DGROUP:0A49
WRINF				  Near	 DGROUP:0995
WRITENIC			  Near	 DGROUP:0950
WRNIC				  Near	 DGROUP:0901
WRWAIT				  Near	 DGROUP:09F6
WRWIN				  Near	 DGROUP:08C7
WRWON				  Near	 DGROUP:08E4
WTM				  Byte	 DGROUP:0A13
WWWW				  Near	 DGROUP:0949
X				  Byte	 DGROUP:06A8
X1				  Word	 DGROUP:06D7
XK				  Byte	 DGROUP:09ED
XM				  Byte	 DGROUP:05E5
XX				  Byte	 DGROUP:0000
XXX				  Byte	 DGROUP:09EB
Y				  Byte	 DGROUP:06D6
Y1				  Word	 DGROUP:06D9
YK				  Byte	 DGROUP:09EE
YM				  Byte	 DGROUP:05F4
YY				  Byte	 DGROUP:0001
YYY				  Byte	 DGROUP:09EC
_1				  Near	 DGROUP:0AC5
_2				  Near	 DGROUP:143D
Turbo Assembler	 Version 3.1	    01/08/11 01:43:21	    Page 64
Symbol Table



_CCI				  Near	 DGROUP:036F
_CCI2				  Near	 DGROUP:036B
_CCL2				  Near	 DGROUP:0984
_D1				  Near	 DGROUP:144F
_DDI				  Near	 DGROUP:038D
_DDI2				  Near	 DGROUP:0389
_DSQUARE			  Near	 DGROUP:0367
_INTSET				  Near	 DGROUP:1450
_MS				  Near	 DGROUP:143A
_NOAH				  Near	 DGROUP:09C2
_SLAVE0				  Near	 DGROUP:0AD4
_SLAVE1				  Near	 DGROUP:0AF9
_SLAVE11			  Near	 DGROUP:0C2A
_SLAVE12			  Near	 DGROUP:0C3A
_SLAVE1_A2			  Near	 DGROUP:0C47
_SLAVE1_A6			  Near	 DGROUP:0BB0
_SLAVE1_A7			  Near	 DGROUP:0BBF
_SLAVE1_A8			  Near	 DGROUP:0BCE
_SLAVE1_B1			  Near	 DGROUP:0BDD
_SLAVE1_B11			  Near	 DGROUP:0BE7
_SLAVE1_B12			  Near	 DGROUP:0BF7
_SLAVE1_B13			  Near	 DGROUP:0C0E
_SLAVE1_B14			  Near	 DGROUP:0C16
_SLAVE1_B2			  Near	 DGROUP:0C61
_SLAVE1_B21			  Near	 DGROUP:0C6F
_SLAVE2				  Near	 DGROUP:0CD4
_SLAVE21			  Near	 DGROUP:0B0F
_SLAVE22			  Near	 DGROUP:0B1E
_SLAVE23			  Near	 DGROUP:0B2D
_SLAVE2AND1			  Near	 DGROUP:0B53
_SLAVE2_A3			  Near	 DGROUP:0B7F
_SLAVE3_4A			  Near	 DGROUP:0B69
_SLAVE_A1			  Near	 DGROUP:0AEA
_START				  Near	 DGROUP:0100
_VSET				  Near	 DGROUP:146D
_Z				  Near	 DGROUP:09C7

Macro Name

MOVPP
NEWLINE
POPR
PUSHR
SEP

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0AA4 Word	  Public  DATA
  _TEXT				  16  18EC Word	  Public  CODE
